{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Medusa Storefront API",
    "license": {
      "name": "MIT",
      "url": "https://github.com/medusajs/medusa/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "http://localhost:9000"
    },
    {
      "url": "https://api.medusajs.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth API routes allow you to manage a customer's authentication.\n"
    },
    {
      "name": "Carts",
      "description": "A cart is a virtual shopping bag that customers can use to add items they want to purchase.\n\nA cart is then used to checkout and place an order.\n\nThese API routes allow customers to create and manage their cart, and place an order.\n",
      "externalDocs": {
        "description": "How to implement cart functionality in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/cart"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreCart"
      }
    },
    {
      "name": "Collections",
      "description": "A product collection organizes products into a collection for marketing purposes. For example, a summer collection.\n\nThese API routes allow customers to browse collections and their products.\n",
      "externalDocs": {
        "description": "How to list product collections in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/products/collections/list"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreCollection"
      }
    },
    {
      "name": "Currencies",
      "description": "A store has multiple currencies, and product prices can be different for each currency.\n\nWhen retrieving product variant prices, you specify either the ID of a region or a currency that the customer selected.\n\nThese API routes allow customers to browse currencies.\n",
      "externalDocs": {
        "description": "How to retrieve product variant prices in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/products/price"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreCurrency"
      }
    },
    {
      "name": "Customers",
      "description": "Customers can place orders as guest customers or register.\n\nWhen a customer registers, they can manage their profile, save addresses for later usage, and more.\n\nThese API routes allow customers to create and manage their accounts.\n",
      "externalDocs": {
        "description": "How to implement customer account functionalities in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/customers"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreCustomer"
      }
    },
    {
      "name": "Orders",
      "description": "Guest and registered customers can view orders they placed.\n\nThese API routes allow customers to view their orders.\n",
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreOrder"
      }
    },
    {
      "name": "Payment Collections",
      "description": "A cart must have a payment collection with an authorized payment session.\n\nUse these API routes during checkout to set the cart's payment provider and authorize its payment session.\n",
      "externalDocs": {
        "description": "How to implement payment during checkout.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/checkout/payment"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StorePaymentCollection"
      }
    },
    {
      "name": "Payment Providers",
      "description": "Each region has a set of payment providers enabled.\n\nDuring checkout, you retrieve the available payment providers in the customer's region to show them to the customer. Customers then choose their preferred provider to authorize their payment and place their order.\n\nThese API routes allow customers to view available payment providers in their region.\n",
      "externalDocs": {
        "description": "How to implement payment during checkout.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/checkout/payment"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StorePaymentProvider"
      }
    },
    {
      "name": "Product Categories",
      "description": "Products can be categorized into categories.\n\nThese API routes allow customers to browse categories and their products.\n",
      "externalDocs": {
        "description": "How to list product categories in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/products/categories/list"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreProductCategory"
      }
    },
    {
      "name": "Products",
      "description": "Customers browse products for their purchase.\n\nA product has variants for different option values. The customer chooses from these variants before adding it to the cart.\n\nThese API routes allow customers to browse products.\n",
      "externalDocs": {
        "description": "How to list products, get their prices, and more in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/products"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreProduct"
      }
    },
    {
      "name": "Regions",
      "description": "Regions are different countries or geographical regions that the commerce store serves customers in.\n\nCustomers can choose what region they're in to view prices of that region's currency.\n\nUse these API routes to retrieve available regions in the store.\n",
      "externalDocs": {
        "description": "How to retrieve and store selected region in a storefront.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/regions"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreRegion"
      }
    },
    {
      "name": "Return",
      "description": "Customers can request to return items in their order. The admin user then receives and handles the return.\n\nThese API routes allows customers to create a return.\n",
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreReturn"
      }
    },
    {
      "name": "Return Reasons",
      "description": "A return reason is a possible reason a customer wants to return an item.\n\nUse these API routes when implementing return creation flow in your storefront to allow customers to select their return reason.\n",
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreReturnReason"
      }
    },
    {
      "name": "Shipping Options",
      "description": "A shipping option is a way of shipping an item to or from the customer.\n\nDuring the checkout flow, the customer selects their preferred shipping option to receive their order.\n\nThese API routes allow customers to retrieve available shipping options for their context.\n",
      "externalDocs": {
        "description": "How to implement shipping during checkout.",
        "url": "https://docs.medusajs.com/v2/resources/storefront-development/checkout/shipping"
      },
      "x-associatedSchema": {
        "$ref": "#/components/schemas/StoreShippingOption"
      }
    }
  ],
  "paths": {
    "/auth/customer/{auth_provider}": {
      "post": {
        "operationId": "PostActor_typeAuth_provider",
        "summary": "Authenticate Customer",
        "description": "Authenticate a customer and receive the JWT token to be used in the header of subsequent requests.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "auth_provider",
            "in": "path",
            "description": "The provider used for authentication.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "emailpass"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/auth/customer/{auth_provider}'"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/auth/customer/{auth_provider}/callback": {
      "post": {
        "operationId": "PostActor_typeAuth_providerCallback",
        "summary": "Validate Authentication Callback",
        "description": "Third-party authentication providers, such as Google, require an API route to call once authentication with the third-party provider is finished. This API route validates callback for customers logged-in with third-party providers.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "auth_provider",
            "in": "path",
            "description": "The provider used for authentication.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "google"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/auth/customer/{auth_provider}/callback'"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/auth/customer/{auth_provider}/register": {
      "post": {
        "operationId": "PostActor_typeAuth_provider_register",
        "summary": "Retrieve Registration JWT Token",
        "description": "A registration JWT token is used in the header of requests that create a customer. This API route retrieves the JWT token of a customer that hasn't been registered yet.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "auth_provider",
            "in": "path",
            "description": "The provider used for authentication.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "emailpass"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/auth/customer/{auth_provider}/register'"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/auth/session": {
      "post": {
        "operationId": "PostSession",
        "summary": "Set Authentication Session",
        "description": "Set the cookie session ID of a customer. The customer must be previously authenticated with the `/auth/customer/{provider}` API route first, as the JWT token is required in the header of the request.",
        "x-authenticated": true,
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/auth/session' \\\n-H 'Authorization: Bearer {jwt_token}'"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthStoreSessionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteSession",
        "summary": "Delete Authentication Session",
        "description": "Deletes the cookie session ID previously set for authentication.",
        "x-authenticated": true,
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X DELETE '{backend_url}/auth/session' \\\n-H 'Cookie: connect.sid={sid}'"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "SUMMARY",
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "title": "success",
                      "description": "Whether the session was deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/carts": {
      "post": {
        "operationId": "PostCarts",
        "summary": "Create Cart",
        "description": "Create a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCartWorkflowInput"
                  },
                  {
                    "type": "object",
                    "description": "SUMMARY",
                    "properties": {
                      "additional_data": {
                        "type": "object",
                        "description": "Pass additional custom data to the API route. This data is passed to the underlying workflow under the `additional_data` parameter."
                      }
                    }
                  }
                ],
                "description": "SUMMARY"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createCartWorkflow"
      }
    },
    "/store/carts/{id}": {
      "get": {
        "operationId": "GetCartsId",
        "summary": "Get a Cart",
        "description": "Retrieve a cart by its ID. You can expand the cart's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/carts/{id}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      },
      "post": {
        "operationId": "PostCartsId",
        "summary": "Update a Cart",
        "description": "Update a cart's details.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCartData"
                  },
                  {
                    "type": "object",
                    "description": "SUMMARY",
                    "properties": {
                      "additional_data": {
                        "type": "object",
                        "description": "Pass additional custom data to the API route. This data is passed to the underlying workflow under the `additional_data` parameter."
                      }
                    }
                  }
                ],
                "description": "SUMMARY"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "SUMMARY",
                  "required": [
                    "cart"
                  ],
                  "properties": {
                    "cart": {
                      "$ref": "#/components/schemas/StoreCart"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateCartWorkflow"
      }
    },
    "/store/carts/{id}/complete": {
      "post": {
        "operationId": "PostCartsIdComplete",
        "summary": "Add Completes to Cart",
        "description": "Add a list of completes to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "properties": {
                  "idempotency_key": {
                    "type": "string",
                    "title": "idempotency_key",
                    "description": "The cart's idempotency key."
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/complete'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "type",
                        "cart",
                        "error"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "type",
                          "description": "The cart's type."
                        },
                        "cart": {
                          "$ref": "#/components/schemas/StoreCart"
                        },
                        "error": {
                          "type": "object",
                          "description": "The cart's error.",
                          "required": [
                            "message",
                            "name",
                            "type"
                          ],
                          "properties": {
                            "message": {
                              "type": "string",
                              "title": "message",
                              "description": "The error's message."
                            },
                            "name": {
                              "type": "string",
                              "title": "name",
                              "description": "The error's name."
                            },
                            "type": {
                              "type": "string",
                              "title": "type",
                              "description": "The error's type."
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "type",
                        "order"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "title": "type",
                          "description": "The cart's type."
                        },
                        "order": {
                          "$ref": "#/components/schemas/StoreOrder"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "completeCartWorkflow"
      }
    },
    "/store/carts/{id}/line-items": {
      "post": {
        "operationId": "PostCartsIdLineItems",
        "summary": "Add Line Items to Cart",
        "description": "Add a list of line items to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAddCartLineItem"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/line-items' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"variant_id\": \"{value}\",\n  \"quantity\": 3360689747918848,\n  \"metadata\": {}\n}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "addToCartWorkflow"
      }
    },
    "/store/carts/{id}/line-items/{line_id}": {
      "post": {
        "operationId": "PostCartsIdLineItemsLine_id",
        "summary": "Add Line Items to Cart",
        "description": "Add a list of line items to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "in": "path",
            "description": "The cart's line id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateCartLineItem"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/line-items/{line_id}' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"quantity\": 8980402259623936,\n  \"metadata\": {}\n}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateLineItemInCartWorkflow"
      },
      "delete": {
        "operationId": "DeleteCartsIdLineItemsLine_id",
        "summary": "Remove Line Items from Cart",
        "description": "Remove a list of line items from a cart. This doesn't delete the Line Item, only the association between the Line Item and the cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line_id",
            "in": "path",
            "description": "The cart's line id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X DELETE '{backend_url}/store/carts/{id}/line-items/{line_id}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "id",
                        "object",
                        "deleted"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "id",
                          "description": "The cart's ID."
                        },
                        "object": {
                          "type": "string",
                          "title": "object",
                          "description": "The name of the deleted object."
                        },
                        "deleted": {
                          "type": "boolean",
                          "title": "deleted",
                          "description": "Whether the Cart was deleted."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "properties": {
                        "parent": {
                          "$ref": "#/components/schemas/StoreCart"
                        }
                      }
                    }
                  ],
                  "description": "SUMMARY"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "deleteLineItemsWorkflow"
      }
    },
    "/store/carts/{id}/promotions": {
      "post": {
        "operationId": "PostCartsIdPromotions",
        "summary": "Add Promotions to Cart",
        "description": "Add a list of promotions to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "required": [
                  "promo_codes"
                ],
                "properties": {
                  "promo_codes": {
                    "type": "array",
                    "description": "The cart's promo codes.",
                    "items": {
                      "type": "string",
                      "title": "promo_codes",
                      "description": "The promo code's promo codes."
                    }
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/promotions' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"promo_codes\": [\n    \"{value}\"\n  ]\n}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateCartPromotionsWorkflow"
      },
      "delete": {
        "operationId": "DeleteCartsIdPromotions",
        "summary": "Remove Promotions from Cart",
        "description": "Remove a list of promotions from a cart. This doesn't delete the Promotion, only the association between the Promotion and the cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X DELETE '{backend_url}/store/carts/{id}/promotions'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "SUMMARY",
                  "required": [
                    "cart"
                  ],
                  "properties": {
                    "cart": {
                      "$ref": "#/components/schemas/StoreCart"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateCartPromotionsWorkflow"
      }
    },
    "/store/carts/{id}/shipping-methods": {
      "post": {
        "operationId": "PostCartsIdShippingMethods",
        "summary": "Add Shipping Methods to Cart",
        "description": "Add a list of shipping methods to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "required": [
                  "option_id"
                ],
                "properties": {
                  "option_id": {
                    "type": "string",
                    "title": "option_id",
                    "description": "The cart's option id."
                  },
                  "data": {
                    "type": "object",
                    "description": "The cart's data."
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/shipping-methods' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"option_id\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "addShippingMethodToWorkflow"
      }
    },
    "/store/carts/{id}/taxes": {
      "post": {
        "operationId": "PostCartsIdTaxes",
        "summary": "Add Taxes to Cart",
        "description": "Add a list of taxes to a cart.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cart's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCalculateCartTaxes"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/carts/{id}/taxes'"
          }
        ],
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCartResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateTaxLinesWorkflow"
      }
    },
    "/store/collections": {
      "get": {
        "operationId": "GetCollections",
        "summary": "List Collections",
        "description": "Retrieve a list of collections. The collections can be filtered by fields such as `id`. The collections can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "deleted_at",
            "in": "query",
            "description": "The collection's deleted at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The collection's deleted at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "title",
                  "description": "The collection's title."
                },
                {
                  "type": "array",
                  "description": "The collection's title.",
                  "items": {
                    "type": "string",
                    "title": "title",
                    "description": "The title's details."
                  }
                }
              ]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "The collection's created at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The collection's created at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "The collection's updated at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The collection's updated at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "handle",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "handle",
                  "description": "The collection's handle."
                },
                {
                  "type": "array",
                  "description": "The collection's handle.",
                  "items": {
                    "type": "string",
                    "title": "handle",
                    "description": "The handle's details."
                  }
                }
              ]
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The collection's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The collection's q."
            }
          },
          {
            "name": "$and",
            "in": "query",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/collections'"
          }
        ],
        "tags": [
          "Collections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The collection's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The collection's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The collection's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "collections"
                      ],
                      "properties": {
                        "collections": {
                          "type": "array",
                          "description": "The collection's collections.",
                          "items": {
                            "$ref": "#/components/schemas/StoreCollection"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/collections/{id}": {
      "get": {
        "operationId": "GetCollectionsId",
        "summary": "Get a Collection",
        "description": "Retrieve a collection by its ID. You can expand the collection's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The collection's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/collections/{id}'"
          }
        ],
        "tags": [
          "Collections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCollectionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/currencies": {
      "get": {
        "operationId": "GetCurrencies",
        "summary": "List Currencies",
        "description": "Retrieve a list of currencies. The currencies can be filtered by fields such as `id`. The currencies can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The currency's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The currency's q."
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "code",
                  "description": "The currency's code."
                },
                {
                  "type": "array",
                  "description": "The currency's code.",
                  "items": {
                    "type": "string",
                    "title": "code",
                    "description": "The code's details."
                  }
                }
              ]
            }
          },
          {
            "name": "$and",
            "in": "query",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/currencies'"
          }
        ],
        "tags": [
          "Currencies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCurrencyListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/currencies/{code}": {
      "get": {
        "operationId": "GetCurrenciesCode",
        "summary": "Get a Currency",
        "description": "Retrieve a currency by its ID. You can expand the currency's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The currency's code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/currencies/{code}'"
          }
        ],
        "tags": [
          "Currencies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCurrencyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/customers": {
      "post": {
        "operationId": "PostCustomers",
        "summary": "Create Customer",
        "description": "Create a customer.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateCustomer"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/customers' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"email\": \"Monserrate.Leannon88@yahoo.com\",\n  \"company_name\": \"{value}\",\n  \"first_name\": \"{value}\",\n  \"last_name\": \"{value}\",\n  \"phone\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createCustomerAccountWorkflow"
      }
    },
    "/store/customers/me": {
      "get": {
        "operationId": "GetCustomersMe",
        "summary": "List Customers",
        "description": "Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers can also be sorted or paginated.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/customers/me' \\\n-H 'Authorization: Bearer {access_token}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      },
      "post": {
        "operationId": "PostCustomersMe",
        "summary": "Create Customer",
        "description": "Create a customer.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateCustomer"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/customers/me' \\\n-H 'Authorization: Bearer {access_token}' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"company_name\": \"{value}\",\n  \"first_name\": \"{value}\",\n  \"last_name\": \"{value}\",\n  \"phone\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateCustomersWorkflow"
      }
    },
    "/store/customers/me/addresses": {
      "get": {
        "operationId": "GetCustomersMeAddresses",
        "summary": "List Customers",
        "description": "Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers can also be sorted or paginated.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "The customer's city.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "city",
                  "description": "The customer's city."
                },
                {
                  "type": "array",
                  "description": "The customer's city.",
                  "items": {
                    "type": "string",
                    "title": "city",
                    "description": "The city's details."
                  }
                }
              ]
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "The customer's country code.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "country_code",
                  "description": "The customer's country code."
                },
                {
                  "type": "array",
                  "description": "The customer's country code.",
                  "items": {
                    "type": "string",
                    "title": "country_code",
                    "description": "The country code's details."
                  }
                }
              ]
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "description": "The customer's postal code.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "postal_code",
                  "description": "The customer's postal code."
                },
                {
                  "type": "array",
                  "description": "The customer's postal code.",
                  "items": {
                    "type": "string",
                    "title": "postal_code",
                    "description": "The postal code's details."
                  }
                }
              ]
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The customer's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The customer's q."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/customers/me/addresses' \\\n-H 'Authorization: Bearer {access_token}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerAddressListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      },
      "post": {
        "operationId": "PostCustomersMeAddresses",
        "summary": "Create Customer",
        "description": "Create a customer.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "The customer's metadata."
                  },
                  "first_name": {
                    "type": "string",
                    "title": "first_name",
                    "description": "The customer's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "title": "last_name",
                    "description": "The customer's last name."
                  },
                  "phone": {
                    "type": "string",
                    "title": "phone",
                    "description": "The customer's phone."
                  },
                  "company": {
                    "type": "string",
                    "title": "company",
                    "description": "The customer's company."
                  },
                  "address_1": {
                    "type": "string",
                    "title": "address_1",
                    "description": "The customer's address 1."
                  },
                  "address_2": {
                    "type": "string",
                    "title": "address_2",
                    "description": "The customer's address 2."
                  },
                  "city": {
                    "type": "string",
                    "title": "city",
                    "description": "The customer's city."
                  },
                  "country_code": {
                    "type": "string",
                    "title": "country_code",
                    "description": "The customer's country code."
                  },
                  "province": {
                    "type": "string",
                    "title": "province",
                    "description": "The customer's province."
                  },
                  "postal_code": {
                    "type": "string",
                    "title": "postal_code",
                    "description": "The customer's postal code."
                  },
                  "address_name": {
                    "type": "string",
                    "title": "address_name",
                    "description": "The customer's address name."
                  },
                  "is_default_shipping": {
                    "type": "boolean",
                    "title": "is_default_shipping",
                    "description": "The customer's is default shipping."
                  },
                  "is_default_billing": {
                    "type": "boolean",
                    "title": "is_default_billing",
                    "description": "The customer's is default billing."
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/customers/me/addresses' \\\n-H 'Authorization: Bearer {access_token}' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"metadata\": {},\n  \"first_name\": \"{value}\",\n  \"last_name\": \"{value}\",\n  \"phone\": \"{value}\",\n  \"company\": \"{value}\",\n  \"address_1\": \"{value}\",\n  \"address_2\": \"{value}\",\n  \"city\": \"{value}\",\n  \"country_code\": \"{value}\",\n  \"province\": \"{value}\",\n  \"postal_code\": \"{value}\",\n  \"address_name\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createCustomerAddressesWorkflow"
      }
    },
    "/store/customers/me/addresses/{address_id}": {
      "get": {
        "operationId": "GetCustomersMeAddressesAddress_id",
        "summary": "List Addresses",
        "description": "Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER FIELDS. The addresses can also be paginated.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "The customer's address id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/customers/me/addresses/{address_id}' \\\n-H 'Authorization: Bearer {access_token}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerAddressResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      },
      "post": {
        "operationId": "PostCustomersMeAddressesAddress_id",
        "summary": "Add Addresses to Customer",
        "description": "Add a list of addresses to a customer.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "The customer's address id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "The customer's metadata."
                  },
                  "first_name": {
                    "type": "string",
                    "title": "first_name",
                    "description": "The customer's first name."
                  },
                  "last_name": {
                    "type": "string",
                    "title": "last_name",
                    "description": "The customer's last name."
                  },
                  "phone": {
                    "type": "string",
                    "title": "phone",
                    "description": "The customer's phone."
                  },
                  "company": {
                    "type": "string",
                    "title": "company",
                    "description": "The customer's company."
                  },
                  "address_1": {
                    "type": "string",
                    "title": "address_1",
                    "description": "The customer's address 1."
                  },
                  "address_2": {
                    "type": "string",
                    "title": "address_2",
                    "description": "The customer's address 2."
                  },
                  "city": {
                    "type": "string",
                    "title": "city",
                    "description": "The customer's city."
                  },
                  "country_code": {
                    "type": "string",
                    "title": "country_code",
                    "description": "The customer's country code."
                  },
                  "province": {
                    "type": "string",
                    "title": "province",
                    "description": "The customer's province."
                  },
                  "postal_code": {
                    "type": "string",
                    "title": "postal_code",
                    "description": "The customer's postal code."
                  },
                  "address_name": {
                    "type": "string",
                    "title": "address_name",
                    "description": "The customer's address name."
                  },
                  "is_default_shipping": {
                    "type": "boolean",
                    "title": "is_default_shipping",
                    "description": "The customer's is default shipping."
                  },
                  "is_default_billing": {
                    "type": "boolean",
                    "title": "is_default_billing",
                    "description": "The customer's is default billing."
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/customers/me/addresses/{address_id}' \\\n-H 'Authorization: Bearer {access_token}' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"metadata\": {},\n  \"first_name\": \"{value}\",\n  \"last_name\": \"{value}\",\n  \"phone\": \"{value}\",\n  \"company\": \"{value}\",\n  \"address_1\": \"{value}\",\n  \"address_2\": \"{value}\",\n  \"city\": \"{value}\",\n  \"country_code\": \"{value}\",\n  \"province\": \"{value}\",\n  \"postal_code\": \"{value}\",\n  \"address_name\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "updateCustomerAddressesWorkflow"
      },
      "delete": {
        "operationId": "DeleteCustomersMeAddressesAddress_id",
        "summary": "Remove Addresses from Customer",
        "description": "Remove a list of addresses from a customer. This doesn't delete the Address, only the association between the Address and the customer.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "The customer's address id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X DELETE '{backend_url}/store/customers/me/addresses/{address_id}' \\\n-H 'Authorization: Bearer {access_token}'"
          }
        ],
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "id",
                        "object",
                        "deleted"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "id",
                          "description": "The customer's ID."
                        },
                        "object": {
                          "type": "string",
                          "title": "object",
                          "description": "The name of the deleted object."
                        },
                        "deleted": {
                          "type": "boolean",
                          "title": "deleted",
                          "description": "Whether the Customer was deleted."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "properties": {
                        "parent": {
                          "$ref": "#/components/schemas/StoreCustomer"
                        }
                      }
                    }
                  ],
                  "description": "SUMMARY"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "deleteCustomerAddressesWorkflow"
      }
    },
    "/store/orders": {
      "get": {
        "operationId": "GetOrders",
        "summary": "List Orders",
        "description": "Retrieve a list of orders. The orders can be filtered by fields such as `id`. The orders can also be sorted or paginated.",
        "x-authenticated": true,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "id",
                  "description": "The order's ID."
                },
                {
                  "type": "array",
                  "description": "The order's ID.",
                  "items": {
                    "type": "string",
                    "title": "id",
                    "description": "The id's ID."
                  }
                }
              ]
            }
          },
          {
            "name": "$and",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The order's $and.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The order's $or.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "string",
                  "title": "status",
                  "description": "The order's status."
                },
                {
                  "type": "array",
                  "description": "The order's status.",
                  "items": {
                    "type": "string",
                    "description": "The status's details.",
                    "enum": [
                      "canceled",
                      "requires_action",
                      "pending",
                      "completed",
                      "draft",
                      "archived"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/orders'"
          }
        ],
        "tags": [
          "Orders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The order's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The order's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The order's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "orders"
                      ],
                      "properties": {
                        "orders": {
                          "type": "array",
                          "description": "The order's orders.",
                          "items": {
                            "$ref": "#/components/schemas/StoreOrder"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "security": [
          {
            "cookie_auth": []
          },
          {
            "jwt_token": []
          }
        ]
      }
    },
    "/store/orders/{id}": {
      "get": {
        "operationId": "GetOrdersId",
        "summary": "Get a Order",
        "description": "Retrieve a order by its ID. You can expand the order's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/orders/{id}'"
          }
        ],
        "tags": [
          "Orders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreOrderResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/payment-collections": {
      "post": {
        "operationId": "PostPaymentCollections",
        "summary": "Create Payment Collection",
        "description": "Create a payment collection.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreatePaymentCollection"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/payment-collections' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"cart_id\": \"{value}\",\n  \"region_id\": \"{value}\",\n  \"currency_code\": \"{value}\",\n  \"amount\": 8468325826822144\n}'"
          }
        ],
        "tags": [
          "Payment Collections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorePaymentCollectionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createPaymentCollectionForCartWorkflow"
      }
    },
    "/store/payment-collections/{id}/payment-sessions": {
      "post": {
        "operationId": "PostPaymentCollectionsIdPaymentSessions",
        "summary": "Add Payment Sessions to Payment Collection",
        "description": "Add a list of payment sessions to a payment collection.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The payment collection's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "SUMMARY",
                "required": [
                  "provider_id"
                ],
                "properties": {
                  "provider_id": {
                    "type": "string",
                    "title": "provider_id",
                    "description": "The payment collection's provider id."
                  },
                  "context": {
                    "type": "object",
                    "description": "The payment collection's context."
                  },
                  "data": {
                    "type": "object",
                    "description": "The payment collection's data."
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/payment-collections/{id}/payment-sessions' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"provider_id\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Payment Collections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorePaymentCollectionResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createPaymentSessionsWorkflow"
      }
    },
    "/store/payment-providers": {
      "get": {
        "operationId": "GetPaymentProviders",
        "summary": "List Payment Providers",
        "description": "Retrieve a list of payment providers. The payment providers can be filtered by fields such as `id`. The payment providers can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "The payment provider's region id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "region_id",
              "description": "The payment provider's region id."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/payment-providers'"
          }
        ],
        "tags": [
          "Payment Providers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The payment provider's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The payment provider's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The payment provider's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "payment_providers"
                      ],
                      "properties": {
                        "payment_providers": {
                          "type": "array",
                          "description": "The payment provider's payment providers.",
                          "items": {
                            "$ref": "#/components/schemas/StorePaymentProvider"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/product-categories": {
      "get": {
        "operationId": "GetProductCategories",
        "summary": "List Product Categories",
        "description": "Retrieve a list of product categories. The product categories can be filtered by fields such as `id`. The product categories can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The product category's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The product category's q."
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "id",
                  "description": "The product category's ID."
                },
                {
                  "type": "array",
                  "description": "The product category's ID.",
                  "items": {
                    "type": "string",
                    "title": "id",
                    "description": "The id's ID."
                  }
                }
              ]
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "description",
                  "description": "The product category's description."
                },
                {
                  "type": "array",
                  "description": "The product category's description.",
                  "items": {
                    "type": "string",
                    "title": "description",
                    "description": "The description's details."
                  }
                }
              ]
            }
          },
          {
            "name": "handle",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "handle",
                  "description": "The product category's handle."
                },
                {
                  "type": "array",
                  "description": "The product category's handle.",
                  "items": {
                    "type": "string",
                    "title": "handle",
                    "description": "The handle's details."
                  }
                }
              ]
            }
          },
          {
            "name": "parent_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "parent_category_id",
                  "description": "The product category's parent category id."
                },
                {
                  "type": "array",
                  "description": "The product category's parent category id.",
                  "items": {
                    "type": "string",
                    "title": "parent_category_id",
                    "description": "The parent category id's details."
                  }
                }
              ]
            }
          },
          {
            "name": "include_ancestors_tree",
            "in": "query",
            "description": "The product category's include ancestors tree.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "include_ancestors_tree",
              "description": "The product category's include ancestors tree."
            }
          },
          {
            "name": "include_descendants_tree",
            "in": "query",
            "description": "The product category's include descendants tree.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "include_descendants_tree",
              "description": "The product category's include descendants tree."
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "The product category's created at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product category's created at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "The product category's updated at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product category's updated at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "deleted_at",
            "in": "query",
            "description": "The product category's deleted at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product category's deleted at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$and"
                },
                "$or": {
                  "type": "array",
                  "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                  "items": {
                    "type": "object"
                  },
                  "title": "$or"
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne",
                  "description": "Filter by values not equal to this parameter."
                },
                "$in": {
                  "type": "array",
                  "description": "Filter by values in this array.",
                  "items": {
                    "type": "string",
                    "title": "$in",
                    "description": "Filter by values in this array."
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "Filter by values not in this array.",
                  "items": {
                    "type": "string",
                    "title": "$nin",
                    "description": "Filter by values not in this array."
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt",
                  "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte",
                  "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt",
                  "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte",
                  "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "Apply a `like` filter. Useful for strings only."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "Apply a regex filter. Useful for strings only."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "Filter to apply on full-text properties."
                },
                "$overlap": {
                  "type": "array",
                  "description": "Filter arrays that have overlapping values with this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "Filter arrays that have overlapping values with this parameter."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "Filter arrays that contain some of the values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "Filter arrays that contain some of the values of this parameter."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "Filter arrays that contain all values of this parameter.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "Filter arrays that contain all values of this parameter."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "Filter by whether a value for this parameter exists (not `null`)."
                }
              }
            }
          },
          {
            "name": "$and",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The product category's $and.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The product category's $or.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "name",
                  "description": "The product category's name."
                },
                {
                  "type": "array",
                  "description": "The product category's name.",
                  "items": {
                    "type": "string",
                    "title": "name",
                    "description": "The name's details."
                  }
                }
              ]
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/product-categories'"
          }
        ],
        "tags": [
          "Product Categories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreProductCategoryListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/product-categories/{id}": {
      "get": {
        "operationId": "GetProductCategoriesId",
        "summary": "Get a Product Category",
        "description": "Retrieve a product category by its ID. You can expand the product category's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product category's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "include_ancestors_tree",
            "in": "query",
            "description": "The product category's include ancestors tree.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "include_ancestors_tree",
              "description": "The product category's include ancestors tree."
            }
          },
          {
            "name": "include_descendants_tree",
            "in": "query",
            "description": "The product category's include descendants tree.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "include_descendants_tree",
              "description": "The product category's include descendants tree."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/product-categories/{id}'"
          }
        ],
        "tags": [
          "Product Categories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreProductCategoryResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/products": {
      "get": {
        "operationId": "GetProducts",
        "summary": "List Products",
        "description": "Retrieve a list of products. The products can be filtered by fields such as `id`. The products can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "$and",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The product's $and.",
              "items": {
                "type": "object",
                "description": "The $and's details."
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "description": "The product's $or.",
              "items": {
                "type": "object",
                "description": "The $or's details."
              },
              "title": "$or"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The product's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The product's q."
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "id",
                  "description": "The product's ID."
                },
                {
                  "type": "array",
                  "description": "The product's ID.",
                  "items": {
                    "type": "string",
                    "title": "id",
                    "description": "The id's ID."
                  }
                }
              ]
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The product's title.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "title",
                  "description": "The product's title."
                },
                {
                  "type": "array",
                  "description": "The product's title.",
                  "items": {
                    "type": "string",
                    "title": "title",
                    "description": "The title's details."
                  }
                }
              ]
            }
          },
          {
            "name": "handle",
            "in": "query",
            "description": "The product's handle.",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "handle",
                  "description": "The product's handle."
                },
                {
                  "type": "array",
                  "description": "The product's handle.",
                  "items": {
                    "type": "string",
                    "title": "handle",
                    "description": "The handle's details."
                  }
                }
              ]
            }
          },
          {
            "name": "is_giftcard",
            "in": "query",
            "description": "The product's is giftcard.",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "is_giftcard",
              "description": "The product's is giftcard."
            }
          },
          {
            "name": "collection_id",
            "in": "query",
            "description": "The product's collection id.",
            "required": false,
            "schema": {
              "description": "The product's collection id.",
              "items": {
                "type": "string",
                "title": "collection_id",
                "description": "The collection id's details."
              }
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "The product's type id.",
            "required": false,
            "schema": {
              "description": "The product's type id.",
              "items": {
                "type": "string",
                "title": "type_id",
                "description": "The type id's details."
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "The product's created at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product's created at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "The created at's $and.",
                  "items": {
                    "type": "object"
                  }
                },
                "$or": {
                  "type": "array",
                  "description": "The created at's $or.",
                  "items": {
                    "type": "object"
                  }
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne"
                },
                "$in": {
                  "type": "array",
                  "description": "The created at's $in.",
                  "items": {
                    "type": "string",
                    "title": "$in"
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "The created at's $nin.",
                  "items": {
                    "type": "string",
                    "title": "$nin"
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "The $not's $and.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "The $not's $or.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt"
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte"
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt"
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte"
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "The created at's $like."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "The created at's $re."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "The created at's $ilike."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "The created at's $fulltext."
                },
                "$overlap": {
                  "type": "array",
                  "description": "The created at's $overlap.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "The $overlap's details."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "The created at's $contains.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "The $contain's $contains."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "The created at's $contained.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "The $contained's details."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "The created at's $exists."
                }
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "The product's updated at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product's updated at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "The updated at's $and.",
                  "items": {
                    "type": "object"
                  }
                },
                "$or": {
                  "type": "array",
                  "description": "The updated at's $or.",
                  "items": {
                    "type": "object"
                  }
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne"
                },
                "$in": {
                  "type": "array",
                  "description": "The updated at's $in.",
                  "items": {
                    "type": "string",
                    "title": "$in"
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "The updated at's $nin.",
                  "items": {
                    "type": "string",
                    "title": "$nin"
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "The $not's $and.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "The $not's $or.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt"
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte"
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt"
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte"
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "The updated at's $like."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "The updated at's $re."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "The updated at's $ilike."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "The updated at's $fulltext."
                },
                "$overlap": {
                  "type": "array",
                  "description": "The updated at's $overlap.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "The $overlap's details."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "The updated at's $contains.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "The $contain's $contains."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "The updated at's $contained.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "The $contained's details."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "The updated at's $exists."
                }
              }
            }
          },
          {
            "name": "deleted_at",
            "in": "query",
            "description": "The product's deleted at.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The product's deleted at.",
              "properties": {
                "$and": {
                  "type": "array",
                  "description": "The deleted at's $and.",
                  "items": {
                    "type": "object"
                  }
                },
                "$or": {
                  "type": "array",
                  "description": "The deleted at's $or.",
                  "items": {
                    "type": "object"
                  }
                },
                "$eq": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    },
                    {
                      "type": "array",
                      "description": "Filter by an exact match.",
                      "items": {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      }
                    }
                  ]
                },
                "$ne": {
                  "type": "string",
                  "title": "$ne"
                },
                "$in": {
                  "type": "array",
                  "description": "The deleted at's $in.",
                  "items": {
                    "type": "string",
                    "title": "$in"
                  }
                },
                "$nin": {
                  "type": "array",
                  "description": "The deleted at's $nin.",
                  "items": {
                    "type": "string",
                    "title": "$nin"
                  }
                },
                "$not": {
                  "oneOf": [
                    {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    },
                    {
                      "type": "object",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "properties": {
                        "$and": {
                          "type": "array",
                          "description": "The $not's $and.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$and"
                        },
                        "$or": {
                          "type": "array",
                          "description": "The $not's $or.",
                          "items": {
                            "type": "object"
                          },
                          "title": "$or"
                        },
                        "$eq": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            },
                            {
                              "type": "array",
                              "description": "Filter by an exact match.",
                              "items": {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              }
                            }
                          ]
                        },
                        "$ne": {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        "$in": {
                          "type": "array",
                          "description": "Filter by values in this array.",
                          "items": {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          }
                        },
                        "$nin": {
                          "type": "array",
                          "description": "Filter by values not in this array.",
                          "items": {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          }
                        },
                        "$not": {
                          "oneOf": [
                            {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "object",
                              "description": "Filter by values not matching the conditions in this parameter."
                            },
                            {
                              "type": "array",
                              "description": "Filter by values not matching the conditions in this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              }
                            }
                          ]
                        },
                        "$gt": {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        "$gte": {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$lt": {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        "$lte": {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        "$like": {
                          "type": "string",
                          "title": "$like",
                          "description": "Apply a `like` filter. Useful for strings only."
                        },
                        "$re": {
                          "type": "string",
                          "title": "$re",
                          "description": "Apply a regex filter. Useful for strings only."
                        },
                        "$ilike": {
                          "type": "string",
                          "title": "$ilike",
                          "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                        },
                        "$fulltext": {
                          "type": "string",
                          "title": "$fulltext",
                          "description": "Filter to apply on full-text properties."
                        },
                        "$overlap": {
                          "type": "array",
                          "description": "Filter arrays that have overlapping values with this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$overlap",
                            "description": "Filter arrays that have overlapping values with this parameter."
                          }
                        },
                        "$contains": {
                          "type": "array",
                          "description": "Filter arrays that contain some of the values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contains",
                            "description": "Filter arrays that contain some of the values of this parameter."
                          }
                        },
                        "$contained": {
                          "type": "array",
                          "description": "Filter arrays that contain all values of this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$contained",
                            "description": "Filter arrays that contain all values of this parameter."
                          }
                        },
                        "$exists": {
                          "type": "boolean",
                          "title": "$exists",
                          "description": "Filter by whether a value for this parameter exists (not `null`)."
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Filter by values not matching the conditions in this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      }
                    }
                  ]
                },
                "$gt": {
                  "type": "string",
                  "title": "$gt"
                },
                "$gte": {
                  "type": "string",
                  "title": "$gte"
                },
                "$lt": {
                  "type": "string",
                  "title": "$lt"
                },
                "$lte": {
                  "type": "string",
                  "title": "$lte"
                },
                "$like": {
                  "type": "string",
                  "title": "$like",
                  "description": "The deleted at's $like."
                },
                "$re": {
                  "type": "string",
                  "title": "$re",
                  "description": "The deleted at's $re."
                },
                "$ilike": {
                  "type": "string",
                  "title": "$ilike",
                  "description": "The deleted at's $ilike."
                },
                "$fulltext": {
                  "type": "string",
                  "title": "$fulltext",
                  "description": "The deleted at's $fulltext."
                },
                "$overlap": {
                  "type": "array",
                  "description": "The deleted at's $overlap.",
                  "items": {
                    "type": "string",
                    "title": "$overlap",
                    "description": "The $overlap's details."
                  }
                },
                "$contains": {
                  "type": "array",
                  "description": "The deleted at's $contains.",
                  "items": {
                    "type": "string",
                    "title": "$contains",
                    "description": "The $contain's $contains."
                  }
                },
                "$contained": {
                  "type": "array",
                  "description": "The deleted at's $contained.",
                  "items": {
                    "type": "string",
                    "title": "$contained",
                    "description": "The $contained's details."
                  }
                },
                "$exists": {
                  "type": "boolean",
                  "title": "$exists",
                  "description": "The deleted at's $exists."
                }
              }
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "The product's region id.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "region_id",
              "description": "The product's region id."
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "description": "The product's currency code.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "currency_code",
              "description": "The product's currency code."
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "The product's province.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "province",
              "description": "The product's province."
            }
          },
          {
            "name": "sales_channel_id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "sales_channel_id",
                  "description": "The product's sales channel id."
                },
                {
                  "type": "array",
                  "description": "The product's sales channel id.",
                  "items": {
                    "type": "string",
                    "title": "sales_channel_id",
                    "description": "The sales channel id's details."
                  }
                }
              ]
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "category_id",
                  "description": "The product's category id."
                },
                {
                  "type": "array",
                  "description": "The product's category id.",
                  "items": {
                    "type": "string",
                    "title": "category_id",
                    "description": "The category id's details."
                  }
                }
              ]
            }
          },
          {
            "name": "tag_id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "tag_id",
                  "description": "The product's tag id."
                },
                {
                  "type": "array",
                  "description": "The product's tag id.",
                  "items": {
                    "type": "string",
                    "title": "tag_id",
                    "description": "The tag id's details."
                  }
                }
              ]
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/products'"
          }
        ],
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The product's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The product's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The product's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "products"
                      ],
                      "properties": {
                        "products": {
                          "type": "array",
                          "description": "The product's products.",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/products/{id}": {
      "get": {
        "operationId": "GetProductsId",
        "summary": "Get a Product",
        "description": "Retrieve a product by its ID. You can expand the product's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The product's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "The product's region id.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "region_id",
              "description": "The product's region id."
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "The product's country code.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "country_code",
              "description": "The product's country code."
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "The product's province.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "province",
              "description": "The product's province."
            }
          },
          {
            "name": "cart_id",
            "in": "query",
            "description": "The product's cart id.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "cart_id",
              "description": "The product's cart id."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/products/{id}'"
          }
        ],
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreProductResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/regions": {
      "get": {
        "operationId": "GetRegions",
        "summary": "List Regions",
        "description": "Retrieve a list of regions. The regions can be filtered by fields such as `id`. The regions can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The region's q.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "q",
              "description": "The region's q."
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "id",
                  "description": "The region's ID."
                },
                {
                  "type": "array",
                  "description": "The region's ID.",
                  "items": {
                    "type": "string",
                    "title": "id",
                    "description": "The id's ID."
                  }
                },
                {
                  "type": "object",
                  "description": "The region's ID.",
                  "properties": {
                    "$and": {
                      "type": "array",
                      "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                      "items": {
                        "type": "object"
                      },
                      "title": "$and"
                    },
                    "$or": {
                      "type": "array",
                      "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                      "items": {
                        "type": "object"
                      },
                      "title": "$or"
                    },
                    "$eq": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$eq",
                          "description": "Filter by an exact match."
                        },
                        {
                          "type": "array",
                          "description": "Filter by an exact match.",
                          "items": {
                            "type": "string",
                            "title": "$eq",
                            "description": "Filter by an exact match."
                          }
                        },
                        {
                          "type": "array",
                          "description": "Filter by an exact match.",
                          "items": {
                            "oneOf": [
                              {
                                "type": "string",
                                "title": "$eq",
                                "description": "Filter by an exact match."
                              },
                              {
                                "type": "array",
                                "description": "Filter by an exact match.",
                                "items": {
                                  "type": "string",
                                  "title": "$eq",
                                  "description": "Filter by an exact match."
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "$ne": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$ne",
                          "description": "Filter by values not equal to this parameter."
                        },
                        {
                          "type": "array",
                          "description": "Filter by values not equal to this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$ne",
                            "description": "Filter by values not equal to this parameter."
                          }
                        }
                      ]
                    },
                    "$in": {
                      "type": "array",
                      "description": "Filter by values in this array.",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$in",
                            "description": "Filter by values in this array."
                          },
                          {
                            "type": "array",
                            "description": "Filter by values in this array.",
                            "items": {
                              "type": "string",
                              "title": "$in",
                              "description": "Filter by values in this array."
                            }
                          }
                        ]
                      }
                    },
                    "$nin": {
                      "type": "array",
                      "description": "Filter by values not in this array.",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$nin",
                            "description": "Filter by values not in this array."
                          },
                          {
                            "type": "array",
                            "description": "Filter by values not in this array.",
                            "items": {
                              "type": "string",
                              "title": "$nin",
                              "description": "Filter by values not in this array."
                            }
                          }
                        ]
                      }
                    },
                    "$not": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$not",
                          "description": "Filter by values not matching the conditions in this parameter."
                        },
                        {
                          "type": "object",
                          "description": "Filter by values not matching the conditions in this parameter.",
                          "properties": {
                            "$and": {
                              "type": "array",
                              "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                              "items": {
                                "type": "object"
                              },
                              "title": "$and"
                            },
                            "$or": {
                              "type": "array",
                              "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                              "items": {
                                "type": "object"
                              },
                              "title": "$or"
                            },
                            "$eq": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "title": "$eq",
                                  "description": "Filter by an exact match."
                                },
                                {
                                  "type": "array",
                                  "description": "Filter by an exact match.",
                                  "items": {
                                    "type": "string",
                                    "title": "$eq",
                                    "description": "Filter by an exact match."
                                  }
                                }
                              ]
                            },
                            "$ne": {
                              "type": "string",
                              "title": "$ne",
                              "description": "Filter by values not equal to this parameter."
                            },
                            "$in": {
                              "type": "array",
                              "description": "Filter by values in this array.",
                              "items": {
                                "type": "string",
                                "title": "$in",
                                "description": "Filter by values in this array."
                              }
                            },
                            "$nin": {
                              "type": "array",
                              "description": "Filter by values not in this array.",
                              "items": {
                                "type": "string",
                                "title": "$nin",
                                "description": "Filter by values not in this array."
                              }
                            },
                            "$not": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "title": "$not",
                                  "description": "Filter by values not matching the conditions in this parameter."
                                },
                                {
                                  "type": "object",
                                  "description": "Filter by values not matching the conditions in this parameter."
                                },
                                {
                                  "type": "array",
                                  "description": "Filter by values not matching the conditions in this parameter.",
                                  "items": {
                                    "type": "string",
                                    "title": "$not",
                                    "description": "Filter by values not matching the conditions in this parameter."
                                  }
                                }
                              ]
                            },
                            "$gt": {
                              "type": "string",
                              "title": "$gt",
                              "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                            },
                            "$gte": {
                              "type": "string",
                              "title": "$gte",
                              "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                            },
                            "$lt": {
                              "type": "string",
                              "title": "$lt",
                              "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                            },
                            "$lte": {
                              "type": "string",
                              "title": "$lte",
                              "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                            },
                            "$like": {
                              "type": "string",
                              "title": "$like",
                              "description": "Apply a `like` filter. Useful for strings only."
                            },
                            "$re": {
                              "type": "string",
                              "title": "$re",
                              "description": "Apply a regex filter. Useful for strings only."
                            },
                            "$ilike": {
                              "type": "string",
                              "title": "$ilike",
                              "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                            },
                            "$fulltext": {
                              "type": "string",
                              "title": "$fulltext",
                              "description": "Filter to apply on full-text properties."
                            },
                            "$overlap": {
                              "type": "array",
                              "description": "Filter arrays that have overlapping values with this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$overlap",
                                "description": "Filter arrays that have overlapping values with this parameter."
                              }
                            },
                            "$contains": {
                              "type": "array",
                              "description": "Filter arrays that contain some of the values of this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$contains",
                                "description": "Filter arrays that contain some of the values of this parameter."
                              }
                            },
                            "$contained": {
                              "type": "array",
                              "description": "Filter arrays that contain all values of this parameter.",
                              "items": {
                                "type": "string",
                                "title": "$contained",
                                "description": "Filter arrays that contain all values of this parameter."
                              }
                            },
                            "$exists": {
                              "type": "boolean",
                              "title": "$exists",
                              "description": "Filter by whether a value for this parameter exists (not `null`)."
                            }
                          }
                        },
                        {
                          "type": "array",
                          "description": "Filter by values not matching the conditions in this parameter.",
                          "items": {
                            "type": "string",
                            "title": "$not",
                            "description": "Filter by values not matching the conditions in this parameter."
                          }
                        },
                        {
                          "type": "array",
                          "description": "Filter by values not matching the conditions in this parameter.",
                          "items": {
                            "oneOf": [
                              {
                                "type": "string",
                                "title": "$not",
                                "description": "Filter by values not matching the conditions in this parameter."
                              },
                              {
                                "type": "object",
                                "description": "Filter by values not matching the conditions in this parameter.",
                                "properties": {
                                  "$and": {
                                    "type": "array",
                                    "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                                    "items": {
                                      "type": "object"
                                    },
                                    "title": "$and"
                                  },
                                  "$or": {
                                    "type": "array",
                                    "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                                    "items": {
                                      "type": "object"
                                    },
                                    "title": "$or"
                                  },
                                  "$eq": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "title": "$eq",
                                        "description": "Filter by an exact match."
                                      },
                                      {
                                        "type": "array",
                                        "description": "Filter by an exact match.",
                                        "items": {
                                          "type": "string",
                                          "title": "$eq",
                                          "description": "Filter by an exact match."
                                        }
                                      }
                                    ]
                                  },
                                  "$ne": {
                                    "type": "string",
                                    "title": "$ne",
                                    "description": "Filter by values not equal to this parameter."
                                  },
                                  "$in": {
                                    "type": "array",
                                    "description": "Filter by values in this array.",
                                    "items": {
                                      "type": "string",
                                      "title": "$in",
                                      "description": "Filter by values in this array."
                                    }
                                  },
                                  "$nin": {
                                    "type": "array",
                                    "description": "Filter by values not in this array.",
                                    "items": {
                                      "type": "string",
                                      "title": "$nin",
                                      "description": "Filter by values not in this array."
                                    }
                                  },
                                  "$not": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "title": "$not",
                                        "description": "Filter by values not matching the conditions in this parameter."
                                      },
                                      {
                                        "type": "object",
                                        "description": "Filter by values not matching the conditions in this parameter."
                                      },
                                      {
                                        "type": "array",
                                        "description": "Filter by values not matching the conditions in this parameter.",
                                        "items": {
                                          "type": "string",
                                          "title": "$not",
                                          "description": "Filter by values not matching the conditions in this parameter."
                                        }
                                      }
                                    ]
                                  },
                                  "$gt": {
                                    "type": "string",
                                    "title": "$gt",
                                    "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                                  },
                                  "$gte": {
                                    "type": "string",
                                    "title": "$gte",
                                    "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                                  },
                                  "$lt": {
                                    "type": "string",
                                    "title": "$lt",
                                    "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                                  },
                                  "$lte": {
                                    "type": "string",
                                    "title": "$lte",
                                    "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                                  },
                                  "$like": {
                                    "type": "string",
                                    "title": "$like",
                                    "description": "Apply a `like` filter. Useful for strings only."
                                  },
                                  "$re": {
                                    "type": "string",
                                    "title": "$re",
                                    "description": "Apply a regex filter. Useful for strings only."
                                  },
                                  "$ilike": {
                                    "type": "string",
                                    "title": "$ilike",
                                    "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                                  },
                                  "$fulltext": {
                                    "type": "string",
                                    "title": "$fulltext",
                                    "description": "Filter to apply on full-text properties."
                                  },
                                  "$overlap": {
                                    "type": "array",
                                    "description": "Filter arrays that have overlapping values with this parameter.",
                                    "items": {
                                      "type": "string",
                                      "title": "$overlap",
                                      "description": "Filter arrays that have overlapping values with this parameter."
                                    }
                                  },
                                  "$contains": {
                                    "type": "array",
                                    "description": "Filter arrays that contain some of the values of this parameter.",
                                    "items": {
                                      "type": "string",
                                      "title": "$contains",
                                      "description": "Filter arrays that contain some of the values of this parameter."
                                    }
                                  },
                                  "$contained": {
                                    "type": "array",
                                    "description": "Filter arrays that contain all values of this parameter.",
                                    "items": {
                                      "type": "string",
                                      "title": "$contained",
                                      "description": "Filter arrays that contain all values of this parameter."
                                    }
                                  },
                                  "$exists": {
                                    "type": "boolean",
                                    "title": "$exists",
                                    "description": "Filter by whether a value for this parameter exists (not `null`)."
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "$gt": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$gt",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                        },
                        {
                          "type": "array",
                          "description": "Filter by values greater than this parameter. Useful for numbers and dates only.",
                          "items": {
                            "type": "string",
                            "title": "$gt",
                            "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                          }
                        }
                      ]
                    },
                    "$gte": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$gte",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                        },
                        {
                          "type": "array",
                          "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only.",
                          "items": {
                            "type": "string",
                            "title": "$gte",
                            "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                          }
                        }
                      ]
                    },
                    "$lt": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$lt",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                        },
                        {
                          "type": "array",
                          "description": "Filter by values less than this parameter. Useful for numbers and dates only.",
                          "items": {
                            "type": "string",
                            "title": "$lt",
                            "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                          }
                        }
                      ]
                    },
                    "$lte": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "$lte",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                        },
                        {
                          "type": "array",
                          "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only.",
                          "items": {
                            "type": "string",
                            "title": "$lte",
                            "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                          }
                        }
                      ]
                    },
                    "$like": {
                      "type": "string",
                      "title": "$like",
                      "description": "Apply a `like` filter. Useful for strings only."
                    },
                    "$re": {
                      "type": "string",
                      "title": "$re",
                      "description": "Apply a regex filter. Useful for strings only."
                    },
                    "$ilike": {
                      "type": "string",
                      "title": "$ilike",
                      "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                    },
                    "$fulltext": {
                      "type": "string",
                      "title": "$fulltext",
                      "description": "Filter to apply on full-text properties."
                    },
                    "$overlap": {
                      "type": "array",
                      "description": "Filter arrays that have overlapping values with this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$overlap",
                        "description": "Filter arrays that have overlapping values with this parameter."
                      }
                    },
                    "$contains": {
                      "type": "array",
                      "description": "Filter arrays that contain some of the values of this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$contains",
                        "description": "Filter arrays that contain some of the values of this parameter."
                      }
                    },
                    "$contained": {
                      "type": "array",
                      "description": "Filter arrays that contain all values of this parameter.",
                      "items": {
                        "type": "string",
                        "title": "$contained",
                        "description": "Filter arrays that contain all values of this parameter."
                      }
                    },
                    "$exists": {
                      "type": "boolean",
                      "title": "$exists",
                      "description": "Filter by whether a value for this parameter exists (not `null`)."
                    }
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "name",
                  "description": "The region's name."
                },
                {
                  "type": "array",
                  "description": "The region's name.",
                  "items": {
                    "type": "string",
                    "title": "name",
                    "description": "The name's details."
                  }
                }
              ]
            }
          },
          {
            "name": "$and",
            "in": "query",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          },
          {
            "name": "currency_code",
            "in": "query",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "title": "currency_code",
                  "description": "The region's currency code."
                },
                {
                  "type": "array",
                  "description": "The region's currency code.",
                  "items": {
                    "type": "string",
                    "title": "currency_code",
                    "description": "The currency code's details."
                  }
                }
              ]
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/regions'"
          }
        ],
        "tags": [
          "Regions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The region's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The region's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The region's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "regions"
                      ],
                      "properties": {
                        "regions": {
                          "type": "array",
                          "description": "The region's regions.",
                          "items": {
                            "$ref": "#/components/schemas/StoreRegion"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/regions/{id}": {
      "get": {
        "operationId": "GetRegionsId",
        "summary": "Get a Region",
        "description": "Retrieve a region by its ID. You can expand the region's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The region's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/regions/{id}'"
          }
        ],
        "tags": [
          "Regions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "SUMMARY",
                  "required": [
                    "region"
                  ],
                  "properties": {
                    "region": {
                      "$ref": "#/components/schemas/StoreRegion"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/return": {
      "post": {
        "operationId": "PostReturn",
        "summary": "Create Return",
        "description": "Create a return.",
        "x-authenticated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateReturn"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl -X POST '{backend_url}/store/return' \\\n-H 'Content-Type: application/json' \\\n--data-raw '{\n  \"order_id\": \"{value}\",\n  \"items\": [\n    {\n      \"id\": \"id_XbfptxUVo2io9EI\",\n      \"quantity\": 7916429753974784,\n      \"reason_id\": \"{value}\",\n      \"note\": \"{value}\"\n    }\n  ],\n  \"return_shipping\": {\n    \"option_id\": \"{value}\",\n    \"price\": 1068364080349184\n  },\n  \"note\": \"{value}\",\n  \"location_id\": \"{value}\"\n}'"
          }
        ],
        "tags": [
          "Return"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreReturnResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "createAndCompleteReturnOrderWorkflow"
      }
    },
    "/store/return-reasons": {
      "get": {
        "operationId": "GetReturnReasons",
        "summary": "List Return Reasons",
        "description": "Retrieve a list of return reasons. The return reasons can be filtered by fields such as `id`. The return reasons can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/return-reasons'"
          }
        ],
        "tags": [
          "Return Reasons"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "limit",
                        "offset",
                        "count"
                      ],
                      "properties": {
                        "limit": {
                          "type": "number",
                          "title": "limit",
                          "description": "The return reason's limit."
                        },
                        "offset": {
                          "type": "number",
                          "title": "offset",
                          "description": "The return reason's offset."
                        },
                        "count": {
                          "type": "number",
                          "title": "count",
                          "description": "The return reason's count."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "SUMMARY",
                      "required": [
                        "return_reasons"
                      ],
                      "properties": {
                        "return_reasons": {
                          "type": "array",
                          "description": "The return reason's return reasons.",
                          "items": {
                            "$ref": "#/components/schemas/StoreReturnReason"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/return-reasons/{id}": {
      "get": {
        "operationId": "GetReturnReasonsId",
        "summary": "Get a Return Reason",
        "description": "Retrieve a return reason by its ID. You can expand the return reason's relations or select the fields that should be returned.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The return reason's ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Comma-separated relations that should be expanded in the returned data.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "expand",
              "description": "Comma-separated relations that should be expanded in the returned data."
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/return-reasons/{id}'"
          }
        ],
        "tags": [
          "Return Reasons"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreReturnReasonResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        }
      }
    },
    "/store/shipping-options": {
      "get": {
        "operationId": "GetShippingOptions",
        "summary": "List Shipping Options",
        "description": "Retrieve a list of shipping options. The shipping options can be filtered by fields such as `id`. The shipping options can also be sorted or paginated.",
        "x-authenticated": false,
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "fields",
              "description": "Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields."
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip when retrieving a list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "offset",
              "description": "The number of items to skip when retrieving a list."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of items returned in the list.",
            "required": false,
            "schema": {
              "type": "number",
              "title": "limit",
              "description": "Limit the number of items returned in the list."
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "order",
              "description": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`."
            }
          },
          {
            "name": "cart_id",
            "in": "query",
            "description": "The shipping option's cart id.",
            "required": true,
            "schema": {
              "type": "string",
              "title": "cart_id",
              "description": "The shipping option's cart id."
            }
          },
          {
            "name": "$and",
            "in": "query",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$and"
            }
          },
          {
            "name": "$or",
            "in": "query",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "required": false,
            "schema": {
              "type": "array",
              "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
              "items": {
                "type": "object"
              },
              "title": "$or"
            }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Shell",
            "label": "cURL",
            "source": "curl '{backend_url}/store/shipping-options'"
          }
        ],
        "tags": [
          "Shipping Options"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreShippingOptionListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400_error"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/not_found_error"
          },
          "409": {
            "$ref": "#/components/responses/invalid_state_error"
          },
          "422": {
            "$ref": "#/components/responses/invalid_request_error"
          },
          "500": {
            "$ref": "#/components/responses/500_error"
          }
        },
        "x-workflow": "listShippingOptionsForCartWorkflow"
      }
    }
  },
  "components": {
    "schemas": {
      "AdminApiKey": {
        "type": "object",
        "description": "The api key's details.",
        "x-schemaName": "AdminApiKey",
        "required": [
          "id",
          "token",
          "redacted",
          "title",
          "type",
          "last_used_at",
          "created_by",
          "created_at",
          "revoked_by",
          "revoked_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The api key's ID."
          },
          "token": {
            "type": "string",
            "title": "token",
            "description": "The api key's token."
          },
          "redacted": {
            "type": "string",
            "title": "redacted",
            "description": "The api key's redacted."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The api key's title."
          },
          "type": {
            "type": "string",
            "description": "The api key's type.",
            "enum": [
              "secret",
              "publishable"
            ]
          },
          "last_used_at": {
            "type": "string",
            "title": "last_used_at",
            "description": "The api key's last used at.",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The api key's created by."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The api key's created at."
          },
          "revoked_by": {
            "type": "string",
            "title": "revoked_by",
            "description": "The api key's revoked by."
          },
          "revoked_at": {
            "type": "string",
            "title": "revoked_at",
            "description": "The api key's revoked at.",
            "format": "date-time"
          }
        }
      },
      "AdminApiKeyResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminApiKeyResponse",
        "required": [
          "api_key"
        ],
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/AdminApiKey"
          }
        }
      },
      "AdminArchiveOrder": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminArchiveOrder",
        "required": [
          "order_id"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The order's order id."
          }
        }
      },
      "AdminBatchProductRequest": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminBatchProductRequest",
        "properties": {
          "create": {
            "type": "array",
            "description": "The product's create.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProduct"
            }
          },
          "update": {
            "type": "array",
            "description": "The product's update.",
            "items": {
              "$ref": "#/components/schemas/AdminUpdateProduct"
            }
          },
          "delete": {
            "type": "array",
            "description": "The product's delete.",
            "items": {
              "type": "string",
              "title": "delete",
              "description": "The delete's details."
            }
          }
        }
      },
      "AdminBatchProductResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminBatchProductResponse",
        "required": [
          "created",
          "updated",
          "deleted"
        ],
        "properties": {
          "created": {
            "type": "array",
            "description": "The product's created.",
            "items": {
              "$ref": "#/components/schemas/AdminProduct"
            }
          },
          "updated": {
            "type": "array",
            "description": "The product's updated.",
            "items": {
              "$ref": "#/components/schemas/AdminProduct"
            }
          },
          "deleted": {
            "type": "object",
            "description": "SUMMARY",
            "required": [
              "ids",
              "object",
              "deleted"
            ],
            "properties": {
              "ids": {
                "type": "array",
                "description": "The deleted's ids.",
                "items": {
                  "type": "string",
                  "title": "ids",
                  "description": "The id's ids."
                }
              },
              "object": {
                "type": "string",
                "title": "object",
                "description": "SUMMARY"
              },
              "deleted": {
                "type": "boolean",
                "title": "deleted",
                "description": "SUMMARY"
              }
            }
          }
        }
      },
      "AdminBatchProductVariantRequest": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminBatchProductVariantRequest",
        "properties": {
          "create": {
            "type": "array",
            "description": "The product's create.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProductVariant"
            }
          },
          "update": {
            "type": "array",
            "description": "The product's update.",
            "items": {
              "$ref": "#/components/schemas/AdminUpdateProductVariant"
            }
          },
          "delete": {
            "type": "array",
            "description": "The product's delete.",
            "items": {
              "type": "string",
              "title": "delete",
              "description": "The delete's details."
            }
          }
        }
      },
      "AdminBatchProductVariantResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminBatchProductVariantResponse",
        "required": [
          "created",
          "updated",
          "deleted"
        ],
        "properties": {
          "created": {
            "type": "array",
            "description": "The product's created.",
            "items": {
              "$ref": "#/components/schemas/AdminProductVariant"
            }
          },
          "updated": {
            "type": "array",
            "description": "The product's updated.",
            "items": {
              "$ref": "#/components/schemas/AdminProductVariant"
            }
          },
          "deleted": {
            "type": "object",
            "description": "SUMMARY",
            "required": [
              "ids",
              "object",
              "deleted"
            ],
            "properties": {
              "ids": {
                "type": "array",
                "description": "The deleted's ids.",
                "items": {
                  "type": "string",
                  "title": "ids",
                  "description": "The id's ids."
                }
              },
              "object": {
                "type": "string",
                "title": "object",
                "description": "SUMMARY"
              },
              "deleted": {
                "type": "boolean",
                "title": "deleted",
                "description": "SUMMARY"
              }
            }
          }
        }
      },
      "AdminCampaign": {
        "type": "object",
        "description": "The campaign's details.",
        "x-schemaName": "AdminCampaign",
        "required": [
          "id",
          "name",
          "description",
          "currency",
          "campaign_identifier",
          "starts_at",
          "ends_at",
          "budget"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The campaign's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The campaign's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The campaign's description."
          },
          "currency": {
            "type": "string",
            "title": "currency",
            "description": "The campaign's currency."
          },
          "campaign_identifier": {
            "type": "string",
            "title": "campaign_identifier",
            "description": "The campaign's campaign identifier."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The campaign's starts at."
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The campaign's ends at."
          },
          "budget": {
            "type": "object",
            "description": "The campaign's budget.",
            "required": [
              "id",
              "type",
              "currency_code",
              "limit",
              "used"
            ],
            "properties": {
              "id": {
                "type": "string",
                "title": "id",
                "description": "The budget's ID."
              },
              "type": {
                "type": "string",
                "description": "The budget's type.",
                "enum": [
                  "spend",
                  "usage"
                ]
              },
              "currency_code": {
                "type": "string",
                "title": "currency_code",
                "description": "The budget's currency code."
              },
              "limit": {
                "type": "number",
                "title": "limit",
                "description": "The budget's limit."
              },
              "used": {
                "type": "number",
                "title": "used",
                "description": "The budget's used."
              }
            }
          }
        }
      },
      "AdminCampaignResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCampaignResponse",
        "required": [
          "campaign"
        ],
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/AdminCampaign"
          }
        }
      },
      "AdminCancelFulfillment": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCancelFulfillment"
      },
      "AdminClaim": {
        "type": "object",
        "description": "The claim's details.",
        "x-schemaName": "AdminClaim",
        "required": [
          "order_id",
          "claim_items",
          "additional_items",
          "currency_code",
          "id",
          "region_id",
          "customer_id",
          "sales_channel_id",
          "email",
          "shipping_methods",
          "payment_status",
          "fulfillment_status",
          "summary",
          "metadata",
          "created_at",
          "updated_at",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The claim's order id."
          },
          "claim_items": {
            "type": "array",
            "description": "The claim's claim items.",
            "items": {
              "$ref": "#/components/schemas/BaseClaimItem"
            }
          },
          "additional_items": {
            "type": "array",
            "description": "The claim's additional items.",
            "items": {}
          },
          "return": {
            "$ref": "#/components/schemas/Return"
          },
          "return_id": {
            "type": "string",
            "title": "return_id",
            "description": "The claim's return id."
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The claim's no notification."
          },
          "refund_amount": {
            "type": "number",
            "title": "refund_amount",
            "description": "The claim's refund amount."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The claim's currency code."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The claim's ID."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The claim's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The claim's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The claim's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The claim's email.",
            "format": "email"
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The claim's display id."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "shipping_methods": {
            "type": "array",
            "description": "The claim's shipping methods.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethod"
            }
          },
          "payment_collections": {
            "type": "array",
            "description": "The claim's payment collections.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentCollection"
            }
          },
          "payment_status": {
            "type": "string",
            "description": "The claim's payment status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized",
              "captured",
              "partially_captured",
              "partially_refunded",
              "refunded",
              "requires_action"
            ]
          },
          "fulfillments": {
            "type": "array",
            "description": "The claim's fulfillments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderFulfillment"
            }
          },
          "fulfillment_status": {
            "type": "string",
            "description": "The claim's fulfillment status.",
            "enum": [
              "canceled",
              "not_fulfilled",
              "partially_fulfilled",
              "fulfilled",
              "partially_shipped",
              "shipped",
              "partially_delivered",
              "delivered"
            ]
          },
          "transactions": {
            "type": "array",
            "description": "The claim's transactions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderTransaction"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/BaseOrderSummary"
          },
          "metadata": {
            "type": "object",
            "description": "The claim's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The claim's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The claim's updated at."
          },
          "original_item_total": {
            "type": "number",
            "title": "original_item_total",
            "description": "The claim's original item total."
          },
          "original_item_subtotal": {
            "type": "number",
            "title": "original_item_subtotal",
            "description": "The claim's original item subtotal."
          },
          "original_item_tax_total": {
            "type": "number",
            "title": "original_item_tax_total",
            "description": "The claim's original item tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The claim's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The claim's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The claim's item tax total."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The claim's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The claim's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The claim's original tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The claim's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The claim's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The claim's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The claim's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The claim's discount tax total."
          },
          "gift_card_total": {
            "type": "number",
            "title": "gift_card_total",
            "description": "The claim's gift card total."
          },
          "gift_card_tax_total": {
            "type": "number",
            "title": "gift_card_tax_total",
            "description": "The claim's gift card tax total."
          },
          "shipping_total": {
            "type": "number",
            "title": "shipping_total",
            "description": "The claim's shipping total."
          },
          "shipping_subtotal": {
            "type": "number",
            "title": "shipping_subtotal",
            "description": "The claim's shipping subtotal."
          },
          "shipping_tax_total": {
            "type": "number",
            "title": "shipping_tax_total",
            "description": "The claim's shipping tax total."
          },
          "original_shipping_total": {
            "type": "number",
            "title": "original_shipping_total",
            "description": "The claim's original shipping total."
          },
          "original_shipping_subtotal": {
            "type": "number",
            "title": "original_shipping_subtotal",
            "description": "The claim's original shipping subtotal."
          },
          "original_shipping_tax_total": {
            "type": "number",
            "title": "original_shipping_tax_total",
            "description": "The claim's original shipping tax total."
          }
        }
      },
      "AdminClaimDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The claim's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "claim"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Claim was deleted."
          }
        }
      },
      "AdminClaimListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "claims"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The claim's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The claim's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The claim's count."
          },
          "claims": {
            "type": "array",
            "description": "The claim's claims.",
            "items": {
              "$ref": "#/components/schemas/AdminClaim"
            }
          }
        }
      },
      "AdminClaimOrderResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimOrderResponse",
        "required": [
          "order",
          "claim"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "claim": {
            "$ref": "#/components/schemas/AdminClaim"
          }
        }
      },
      "AdminClaimPreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimPreviewResponse",
        "required": [
          "order_preview",
          "claim"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "claim": {
            "$ref": "#/components/schemas/AdminClaim"
          }
        }
      },
      "AdminClaimRequestResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimRequestResponse",
        "required": [
          "return",
          "order_preview",
          "claim"
        ],
        "properties": {
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          },
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "claim": {
            "$ref": "#/components/schemas/AdminClaim"
          }
        }
      },
      "AdminClaimResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimResponse",
        "required": [
          "claim"
        ],
        "properties": {
          "claim": {
            "$ref": "#/components/schemas/AdminClaim"
          }
        }
      },
      "AdminClaimReturnPreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminClaimReturnPreviewResponse",
        "required": [
          "order_preview",
          "return"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          }
        }
      },
      "AdminCollection": {
        "type": "object",
        "description": "The parent's collection.",
        "x-schemaName": "AdminCollection",
        "required": [
          "id",
          "title",
          "handle",
          "created_at",
          "updated_at",
          "deleted_at",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The collection's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The collection's title."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The collection's handle."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The collection's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The collection's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The collection's deleted at."
          },
          "products": {
            "type": "array",
            "description": "The collection's products.",
            "items": {
              "type": "object"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The collection's metadata."
          }
        }
      },
      "AdminCollectionDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCollectionDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The collection's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "collection"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Collection was deleted."
          }
        }
      },
      "AdminCollectionListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCollectionListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "collections"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The collection's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The collection's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The collection's count."
          },
          "collections": {
            "type": "array",
            "description": "The collection's collections.",
            "items": {
              "$ref": "#/components/schemas/AdminCollection"
            }
          }
        }
      },
      "AdminCollectionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCollectionResponse",
        "required": [
          "collection"
        ],
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/AdminCollection"
          }
        }
      },
      "AdminCreateApiKey": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateApiKey",
        "required": [
          "title",
          "type"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The api key's title."
          },
          "type": {
            "type": "string",
            "description": "The api key's type.",
            "enum": [
              "publishable",
              "secret"
            ]
          }
        }
      },
      "AdminCreateApplicationMethod": {
        "type": "object",
        "description": "The promotion's application method.",
        "x-schemaName": "AdminCreateApplicationMethod",
        "required": [
          "value",
          "type",
          "target_type"
        ],
        "properties": {
          "description": {
            "type": "string",
            "title": "description",
            "description": "The application method's description."
          },
          "value": {
            "type": "number",
            "title": "value",
            "description": "The application method's value."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The application method's currency code."
          },
          "max_quantity": {
            "type": "number",
            "title": "max_quantity",
            "description": "The application method's max quantity."
          },
          "type": {
            "type": "string",
            "description": "The application method's type.",
            "enum": [
              "fixed",
              "percentage"
            ]
          },
          "target_type": {
            "type": "string",
            "description": "The application method's target type.",
            "enum": [
              "items",
              "shipping_methods",
              "order"
            ]
          },
          "allocation": {
            "type": "string",
            "description": "The application method's allocation.",
            "enum": [
              "each",
              "across"
            ]
          },
          "target_rules": {
            "type": "array",
            "description": "The application method's target rules.",
            "items": {
              "$ref": "#/components/schemas/AdminCreatePromotionRule"
            }
          },
          "buy_rules": {
            "type": "array",
            "description": "The application method's buy rules.",
            "items": {
              "$ref": "#/components/schemas/AdminCreatePromotionRule"
            }
          },
          "apply_to_quantity": {
            "type": "number",
            "title": "apply_to_quantity",
            "description": "The application method's apply to quantity."
          },
          "buy_rules_min_quantity": {
            "type": "number",
            "title": "buy_rules_min_quantity",
            "description": "The application method's buy rules min quantity."
          }
        }
      },
      "AdminCreateCampaign": {
        "type": "object",
        "description": "The promotion's campaign.",
        "x-schemaName": "AdminCreateCampaign",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The campaign's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The campaign's description."
          },
          "currency": {
            "type": "string",
            "title": "currency",
            "description": "The campaign's currency."
          },
          "campaign_identifier": {
            "type": "string",
            "title": "campaign_identifier",
            "description": "The campaign's campaign identifier."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The campaign's starts at.",
            "format": "date-time"
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The campaign's ends at.",
            "format": "date-time"
          },
          "budget": {
            "type": "object",
            "description": "The campaign's budget.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The budget's type.",
                "enum": [
                  "spend",
                  "usage"
                ]
              },
              "currency_code": {
                "type": "string",
                "title": "currency_code",
                "description": "The budget's currency code."
              },
              "limit": {
                "type": "number",
                "title": "limit",
                "description": "The budget's limit."
              }
            }
          }
        }
      },
      "AdminCreateCollection": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateCollection",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The collection's title."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The collection's handle."
          },
          "metadata": {
            "type": "object",
            "description": "The collection's metadata."
          }
        }
      },
      "AdminCreateCustomerGroup": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateCustomerGroup",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The customer group's name."
          },
          "metadata": {
            "type": "object",
            "description": "The customer group's metadata."
          }
        }
      },
      "AdminCreateFulfillment": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateFulfillment",
        "required": [
          "location_id",
          "provider_id",
          "delivery_address",
          "items",
          "labels",
          "order",
          "order_id",
          "data",
          "metadata"
        ],
        "properties": {
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The fulfillment's location id."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The fulfillment's provider id."
          },
          "delivery_address": {
            "type": "object",
            "description": "The fulfillment's delivery address.",
            "properties": {
              "first_name": {
                "type": "string",
                "title": "first_name",
                "description": "The delivery address's first name."
              },
              "last_name": {
                "type": "string",
                "title": "last_name",
                "description": "The delivery address's last name."
              },
              "phone": {
                "type": "string",
                "title": "phone",
                "description": "The delivery address's phone."
              },
              "company": {
                "type": "string",
                "title": "company",
                "description": "The delivery address's company."
              },
              "address_1": {
                "type": "string",
                "title": "address_1",
                "description": "The delivery address's address 1."
              },
              "address_2": {
                "type": "string",
                "title": "address_2",
                "description": "The delivery address's address 2."
              },
              "city": {
                "type": "string",
                "title": "city",
                "description": "The delivery address's city."
              },
              "country_code": {
                "type": "string",
                "title": "country_code",
                "description": "The delivery address's country code."
              },
              "province": {
                "type": "string",
                "title": "province",
                "description": "The delivery address's province."
              },
              "postal_code": {
                "type": "string",
                "title": "postal_code",
                "description": "The delivery address's postal code."
              },
              "metadata": {
                "type": "object",
                "description": "The delivery address's metadata."
              }
            }
          },
          "items": {
            "type": "array",
            "description": "The fulfillment's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "title",
                "sku",
                "quantity",
                "barcode"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "title": "title",
                  "description": "The item's title."
                },
                "sku": {
                  "type": "string",
                  "title": "sku",
                  "description": "The item's sku."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "barcode": {
                  "type": "string",
                  "title": "barcode",
                  "description": "The item's barcode."
                },
                "line_item_id": {
                  "type": "string",
                  "title": "line_item_id",
                  "description": "The item's line item id."
                },
                "inventory_item_id": {
                  "type": "string",
                  "title": "inventory_item_id",
                  "description": "The item's inventory item id."
                }
              }
            }
          },
          "labels": {
            "type": "array",
            "description": "The fulfillment's labels.",
            "items": {
              "type": "object",
              "description": "The label's labels.",
              "required": [
                "tracking_number",
                "tracking_url",
                "label_url"
              ],
              "properties": {
                "tracking_number": {
                  "type": "string",
                  "title": "tracking_number",
                  "description": "The label's tracking number."
                },
                "tracking_url": {
                  "type": "string",
                  "title": "tracking_url",
                  "description": "The label's tracking url."
                },
                "label_url": {
                  "type": "string",
                  "title": "label_url",
                  "description": "The label's label url."
                }
              }
            }
          },
          "order": {
            "type": "object",
            "description": "The fulfillment's order."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The fulfillment's order id."
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The fulfillment's shipping option id."
          },
          "data": {
            "type": "object",
            "description": "The fulfillment's data."
          },
          "packed_at": {
            "type": "string",
            "title": "packed_at",
            "description": "The fulfillment's packed at.",
            "format": "date-time"
          },
          "shipped_at": {
            "type": "string",
            "title": "shipped_at",
            "description": "The fulfillment's shipped at.",
            "format": "date-time"
          },
          "delivered_at": {
            "type": "string",
            "title": "delivered_at",
            "description": "The fulfillment's delivered at.",
            "format": "date-time"
          },
          "canceled_at": {
            "type": "string",
            "title": "canceled_at",
            "description": "The fulfillment's canceled at.",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "description": "The fulfillment's metadata."
          }
        }
      },
      "AdminCreateInventoryItem": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateInventoryItem",
        "properties": {
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The inventory item's sku."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The inventory item's hs code."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The inventory item's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The inventory item's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The inventory item's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The inventory item's width."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The inventory item's origin country."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The inventory item's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The inventory item's material."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The inventory item's title."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The inventory item's description."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The inventory item's requires shipping."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The inventory item's thumbnail."
          },
          "metadata": {
            "type": "object",
            "description": "The inventory item's metadata."
          }
        }
      },
      "AdminCreatePriceList": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreatePriceList",
        "required": [
          "title",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The price list's title."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The price list's description."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The price list's starts at."
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The price list's ends at."
          },
          "status": {
            "type": "string",
            "description": "The price list's status.",
            "enum": [
              "active",
              "draft"
            ]
          },
          "type": {
            "type": "string",
            "description": "The price list's type.",
            "enum": [
              "sale",
              "override"
            ]
          },
          "rules": {
            "type": "object",
            "description": "The price list's rules."
          },
          "prices": {
            "type": "array",
            "description": "The price list's prices.",
            "items": {
              "type": "object",
              "description": "The price's prices.",
              "required": [
                "currency_code",
                "amount",
                "variant_id"
              ],
              "properties": {
                "currency_code": {
                  "type": "string",
                  "title": "currency_code",
                  "description": "The price's currency code."
                },
                "amount": {
                  "type": "number",
                  "title": "amount",
                  "description": "The price's amount."
                },
                "variant_id": {
                  "type": "string",
                  "title": "variant_id",
                  "description": "The price's variant id."
                },
                "min_quantity": {
                  "type": "number",
                  "title": "min_quantity",
                  "description": "The price's min quantity."
                },
                "max_quantity": {
                  "type": "number",
                  "title": "max_quantity",
                  "description": "The price's max quantity."
                },
                "rules": {
                  "type": "object",
                  "description": "The price's rules."
                }
              }
            }
          }
        }
      },
      "AdminCreatePricePreference": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreatePricePreference",
        "properties": {
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The price preference's attribute."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The price preference's value."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The price preference's is tax inclusive."
          }
        }
      },
      "AdminCreateProduct": {
        "type": "object",
        "description": "The create's details.",
        "x-schemaName": "AdminCreateProduct",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The create's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The create's subtitle."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The create's description."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The create's is giftcard."
          },
          "discountable": {
            "type": "boolean",
            "title": "discountable",
            "description": "The create's discountable."
          },
          "images": {
            "type": "array",
            "description": "The create's images.",
            "items": {
              "type": "object",
              "description": "The image's images.",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "title": "url",
                  "description": "The image's url."
                }
              }
            }
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The create's thumbnail."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The create's handle."
          },
          "status": {
            "type": "string",
            "description": "The create's status.",
            "enum": [
              "draft",
              "proposed",
              "published",
              "rejected"
            ]
          },
          "type_id": {
            "type": "string",
            "title": "type_id",
            "description": "The create's type id."
          },
          "collection_id": {
            "type": "string",
            "title": "collection_id",
            "description": "The create's collection id."
          },
          "categories": {
            "type": "array",
            "description": "The create's categories.",
            "items": {
              "type": "object",
              "description": "The category's categories.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The category's ID."
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "description": "The create's tags.",
            "items": {
              "type": "object",
              "description": "The tag's tags.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The tag's ID."
                }
              }
            }
          },
          "options": {
            "type": "array",
            "description": "The create's options.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProductOption"
            }
          },
          "variants": {
            "type": "array",
            "description": "The create's variants.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProductVariant"
            }
          },
          "sales_channels": {
            "type": "array",
            "description": "The create's sales channels.",
            "items": {
              "type": "object",
              "description": "The sales channel's sales channels.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The sales channel's ID."
                }
              }
            }
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The create's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The create's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The create's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The create's width."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The create's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The create's mid code."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The create's origin country."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The create's material."
          },
          "metadata": {
            "type": "object",
            "description": "The create's metadata."
          }
        }
      },
      "AdminCreateProductCategory": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateProductCategory",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The product category's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The product category's description."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The product category's handle."
          },
          "is_internal": {
            "type": "boolean",
            "title": "is_internal",
            "description": "The product category's is internal."
          },
          "is_active": {
            "type": "boolean",
            "title": "is_active",
            "description": "The product category's is active."
          },
          "parent_category_id": {
            "type": "string",
            "title": "parent_category_id",
            "description": "The product category's parent category id."
          },
          "rank": {
            "type": "number",
            "title": "rank",
            "description": "The product category's rank."
          },
          "metadata": {
            "type": "object",
            "description": "The product category's metadata."
          }
        }
      },
      "AdminCreateProductOption": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateProductOption",
        "required": [
          "title",
          "values"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The product's title."
          },
          "values": {
            "type": "array",
            "description": "The product's values.",
            "items": {
              "type": "string",
              "title": "values",
              "description": "The value's values."
            }
          }
        }
      },
      "AdminCreateProductTag": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateProductTag",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "title": "value",
            "description": "The product tag's value."
          },
          "metadata": {
            "type": "object",
            "description": "The product tag's metadata."
          }
        }
      },
      "AdminCreateProductVariant": {
        "type": "object",
        "description": "The create's details.",
        "x-schemaName": "AdminCreateProductVariant",
        "required": [
          "title",
          "prices"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The create's title."
          },
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The create's sku."
          },
          "ean": {
            "type": "string",
            "title": "ean",
            "description": "The create's ean."
          },
          "upc": {
            "type": "string",
            "title": "upc",
            "description": "The create's upc."
          },
          "barcode": {
            "type": "string",
            "title": "barcode",
            "description": "The create's barcode."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The create's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The create's mid code."
          },
          "allow_backorder": {
            "type": "boolean",
            "title": "allow_backorder",
            "description": "The create's allow backorder."
          },
          "manage_inventory": {
            "type": "boolean",
            "title": "manage_inventory",
            "description": "The create's manage inventory."
          },
          "variant_rank": {
            "type": "number",
            "title": "variant_rank",
            "description": "The create's variant rank."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The create's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The create's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The create's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The create's width."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The create's origin country."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The create's material."
          },
          "metadata": {
            "type": "object",
            "description": "The create's metadata."
          },
          "prices": {
            "type": "array",
            "description": "The create's prices.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProductVariantPrice"
            }
          },
          "options": {
            "type": "object",
            "description": "The create's options."
          }
        }
      },
      "AdminCreateProductVariantPrice": {
        "type": "object",
        "description": "The price's prices.",
        "x-schemaName": "AdminCreateProductVariantPrice",
        "required": [
          "currency_code",
          "amount"
        ],
        "properties": {
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The price's currency code."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The price's amount."
          },
          "min_quantity": {
            "type": "number",
            "title": "min_quantity",
            "description": "The price's min quantity."
          },
          "max_quantity": {
            "type": "number",
            "title": "max_quantity",
            "description": "The price's max quantity."
          },
          "rules": {
            "type": "object",
            "description": "The price's rules."
          }
        }
      },
      "AdminCreatePromotionRule": {
        "type": "object",
        "description": "The rule's rules.",
        "x-schemaName": "AdminCreatePromotionRule",
        "required": [
          "operator",
          "attribute",
          "values"
        ],
        "properties": {
          "operator": {
            "type": "string",
            "description": "The rule's operator.",
            "enum": [
              "gt",
              "lt",
              "eq",
              "ne",
              "in",
              "lte",
              "gte"
            ]
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The rule's description."
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The rule's attribute."
          },
          "values": {
            "oneOf": [
              {
                "type": "string",
                "title": "values",
                "description": "The rule's values."
              },
              {
                "type": "array",
                "description": "The rule's values.",
                "items": {
                  "type": "string",
                  "title": "values",
                  "description": "The value's values."
                }
              }
            ]
          }
        }
      },
      "AdminCreateRefundReason": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateRefundReason",
        "required": [
          "label"
        ],
        "properties": {
          "label": {
            "type": "string",
            "title": "label",
            "description": "The refund reason's label."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The refund reason's description."
          }
        }
      },
      "AdminCreateRegion": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateRegion",
        "required": [
          "name",
          "currency_code"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The region's name."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The region's currency code."
          },
          "countries": {
            "type": "array",
            "description": "The region's countries.",
            "items": {
              "type": "string",
              "title": "countries",
              "description": "The country's countries."
            }
          },
          "automatic_taxes": {
            "type": "boolean",
            "title": "automatic_taxes",
            "description": "The region's automatic taxes."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The region's is tax inclusive."
          },
          "payment_providers": {
            "type": "array",
            "description": "The region's payment providers.",
            "items": {
              "type": "string",
              "title": "payment_providers",
              "description": "The payment provider's payment providers."
            }
          },
          "metadata": {
            "type": "object",
            "description": "The region's metadata."
          }
        }
      },
      "AdminCreateReservation": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateReservation",
        "required": [
          "location_id",
          "inventory_item_id",
          "quantity"
        ],
        "properties": {
          "line_item_id": {
            "type": "string",
            "title": "line_item_id",
            "description": "The reservation's line item id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The reservation's location id."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The reservation's inventory item id."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The reservation's quantity."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The reservation's description."
          },
          "metadata": {
            "type": "object",
            "description": "The reservation's metadata."
          }
        }
      },
      "AdminCreateSalesChannel": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateSalesChannel",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The sales channel's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The sales channel's description."
          },
          "is_disabled": {
            "type": "boolean",
            "title": "is_disabled",
            "description": "The sales channel's is disabled."
          },
          "metadata": {
            "type": "object",
            "description": "The sales channel's metadata."
          }
        }
      },
      "AdminCreateShipment": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateShipment",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "type": "array",
            "description": "The fulfillment's labels.",
            "items": {
              "type": "object",
              "description": "The label's labels.",
              "required": [
                "tracking_number",
                "tracking_url",
                "label_url"
              ],
              "properties": {
                "tracking_number": {
                  "type": "string",
                  "title": "tracking_number",
                  "description": "The label's tracking number."
                },
                "tracking_url": {
                  "type": "string",
                  "title": "tracking_url",
                  "description": "The label's tracking url."
                },
                "label_url": {
                  "type": "string",
                  "title": "label_url",
                  "description": "The label's label url."
                }
              }
            }
          }
        }
      },
      "AdminCreateShippingOption": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateShippingOption",
        "required": [
          "name",
          "service_zone_id",
          "shipping_profile_id",
          "price_type",
          "provider_id",
          "type",
          "prices"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The shipping option's name."
          },
          "service_zone_id": {
            "type": "string",
            "title": "service_zone_id",
            "description": "The shipping option's service zone id."
          },
          "shipping_profile_id": {
            "type": "string",
            "title": "shipping_profile_id",
            "description": "The shipping option's shipping profile id."
          },
          "data": {
            "type": "object",
            "description": "The shipping option's data."
          },
          "price_type": {
            "type": "string",
            "description": "The shipping option's price type.",
            "enum": [
              "flat",
              "calculated"
            ]
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The shipping option's provider id."
          },
          "type": {
            "type": "object"
          },
          "prices": {
            "type": "array",
            "description": "The shipping option's prices.",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The price's prices.",
                  "x-schemaName": "AdminCreateShippingOptionPriceWithCurrency",
                  "required": [
                    "currency_code",
                    "amount"
                  ],
                  "properties": {
                    "currency_code": {
                      "type": "string",
                      "title": "currency_code",
                      "description": "The price's currency code."
                    },
                    "amount": {
                      "type": "number",
                      "title": "amount",
                      "description": "The price's amount."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The price's prices.",
                  "x-schemaName": "AdminCreateShippingOptionPriceWithRegion",
                  "required": [
                    "region_id",
                    "amount"
                  ],
                  "properties": {
                    "region_id": {
                      "type": "string",
                      "title": "region_id",
                      "description": "The price's region id."
                    },
                    "amount": {
                      "type": "number",
                      "title": "amount",
                      "description": "The price's amount."
                    }
                  }
                }
              ]
            }
          },
          "rules": {
            "type": "array",
            "description": "The shipping option's rules.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateShippingOptionRule"
            }
          }
        }
      },
      "AdminCreateShippingOptionRule": {
        "type": "object",
        "description": "The rule's rules.",
        "x-schemaName": "AdminCreateShippingOptionRule",
        "required": [
          "operator",
          "attribute",
          "value"
        ],
        "properties": {
          "operator": {
            "type": "string",
            "description": "The rule's operator.",
            "enum": [
              "gt",
              "lt",
              "eq",
              "ne",
              "in",
              "lte",
              "gte",
              "nin"
            ]
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The rule's attribute."
          },
          "value": {
            "oneOf": [
              {
                "type": "string",
                "title": "value",
                "description": "The rule's value."
              },
              {
                "type": "array",
                "description": "The rule's value.",
                "items": {
                  "type": "string",
                  "title": "value",
                  "description": "The value's details."
                }
              }
            ]
          }
        }
      },
      "AdminCreateShippingProfile": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateShippingProfile",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The shipping profile's name."
          },
          "type": {
            "type": "string",
            "title": "type",
            "description": "The shipping profile's type."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping profile's metadata."
          }
        }
      },
      "AdminCreateStockLocation": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateStockLocation",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The stock location's name."
          },
          "address_id": {
            "type": "string",
            "title": "address_id",
            "description": "The stock location's address id."
          },
          "address": {
            "$ref": "#/components/schemas/AdminUpsertStockLocationAddress"
          },
          "metadata": {
            "type": "object",
            "description": "The stock location's metadata."
          }
        }
      },
      "AdminCreateTaxRate": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateTaxRate",
        "required": [
          "name",
          "tax_region_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The tax rate's name."
          },
          "tax_region_id": {
            "type": "string",
            "title": "tax_region_id",
            "description": "The tax rate's tax region id."
          },
          "rate": {
            "type": "number",
            "title": "rate",
            "description": "The tax rate's rate."
          },
          "code": {
            "type": "string",
            "title": "code",
            "description": "The tax rate's code."
          },
          "rules": {
            "type": "array",
            "description": "The tax rate's rules.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateTaxRateRule"
            }
          },
          "is_default": {
            "type": "boolean",
            "title": "is_default",
            "description": "The tax rate's is default."
          },
          "is_combinable": {
            "type": "boolean",
            "title": "is_combinable",
            "description": "The tax rate's is combinable."
          },
          "metadata": {
            "type": "object",
            "description": "The tax rate's metadata."
          }
        }
      },
      "AdminCreateTaxRateRule": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateTaxRateRule",
        "required": [
          "reference",
          "reference_id"
        ],
        "properties": {
          "reference": {
            "type": "string",
            "title": "reference",
            "description": "The tax rate's reference."
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id",
            "description": "The tax rate's reference id."
          }
        }
      },
      "AdminCreateTaxRegion": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateTaxRegion",
        "required": [
          "country_code"
        ],
        "properties": {
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The tax region's country code."
          },
          "province_code": {
            "type": "string",
            "title": "province_code",
            "description": "The tax region's province code."
          },
          "parent_id": {
            "type": "string",
            "title": "parent_id",
            "description": "The tax region's parent id."
          },
          "default_tax_rate": {
            "type": "object",
            "description": "The tax region's default tax rate.",
            "required": [
              "name"
            ],
            "properties": {
              "rate": {
                "type": "number",
                "title": "rate",
                "description": "The default tax rate's rate."
              },
              "code": {
                "type": "string",
                "title": "code",
                "description": "The default tax rate's code."
              },
              "name": {
                "type": "string",
                "title": "name",
                "description": "The default tax rate's name."
              },
              "is_combinable": {
                "type": "boolean",
                "title": "is_combinable",
                "description": "The default tax rate's is combinable."
              },
              "metadata": {
                "type": "object",
                "description": "The default tax rate's metadata."
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The tax region's metadata."
          }
        }
      },
      "AdminCreateVariantInventoryItem": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateVariantInventoryItem",
        "required": [
          "required_quantity",
          "inventory_item_id"
        ],
        "properties": {
          "required_quantity": {
            "type": "number",
            "title": "required_quantity",
            "description": "The product's required quantity."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The product's inventory item id."
          }
        }
      },
      "AdminCreateWorkflowsAsyncResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateWorkflowsAsyncResponse",
        "required": [
          "transaction_id",
          "step_id"
        ],
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "transaction_id",
            "description": "The workflows execution's transaction id."
          },
          "step_id": {
            "type": "string",
            "title": "step_id",
            "description": "The workflows execution's step id."
          },
          "response": {},
          "compensate_input": {},
          "action": {
            "type": "string",
            "description": "The workflows execution's action.",
            "enum": [
              "invoke",
              "compensate"
            ]
          }
        }
      },
      "AdminCreateWorkflowsRun": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCreateWorkflowsRun",
        "properties": {
          "input": {},
          "transaction_id": {
            "type": "string",
            "title": "transaction_id",
            "description": "The workflows execution's transaction id."
          }
        }
      },
      "AdminCurrency": {
        "type": "object",
        "description": "The supported currency's currency.",
        "x-schemaName": "AdminCurrency"
      },
      "AdminCurrencyListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCurrencyListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "currencies"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The currency's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The currency's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The currency's count."
          },
          "currencies": {
            "type": "array",
            "description": "The currency's currencies.",
            "items": {
              "$ref": "#/components/schemas/AdminCurrency"
            }
          }
        }
      },
      "AdminCurrencyResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCurrencyResponse",
        "required": [
          "currency"
        ],
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/AdminCurrency"
          }
        }
      },
      "AdminCustomer": {
        "type": "object",
        "description": "The order's customer.",
        "x-schemaName": "AdminCustomer",
        "required": [
          "has_account",
          "id",
          "email",
          "default_billing_address_id",
          "default_shipping_address_id",
          "company_name",
          "first_name",
          "last_name",
          "addresses"
        ],
        "properties": {
          "has_account": {
            "type": "boolean",
            "title": "has_account",
            "description": "The customer's has account."
          },
          "groups": {
            "type": "array",
            "description": "The customer's groups.",
            "items": {
              "$ref": "#/components/schemas/AdminCustomerGroup"
            }
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The customer's ID."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The customer's email.",
            "format": "email"
          },
          "default_billing_address_id": {
            "type": "string",
            "title": "default_billing_address_id",
            "description": "The customer's default billing address id."
          },
          "default_shipping_address_id": {
            "type": "string",
            "title": "default_shipping_address_id",
            "description": "The customer's default shipping address id."
          },
          "company_name": {
            "type": "string",
            "title": "company_name",
            "description": "The customer's company name."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The customer's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The customer's last name."
          },
          "addresses": {
            "type": "array",
            "description": "The customer's addresses.",
            "items": {
              "$ref": "#/components/schemas/BaseCustomerAddress"
            }
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The customer's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The customer's metadata."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The customer's created by."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The customer's deleted at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The customer's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The customer's updated at."
          }
        }
      },
      "AdminCustomerAddress": {
        "type": "object",
        "description": "The customer's address.",
        "x-schemaName": "AdminCustomerAddress",
        "required": [
          "id",
          "address_name",
          "is_default_shipping",
          "is_default_billing",
          "customer_id",
          "company",
          "first_name",
          "last_name",
          "address_1",
          "address_2",
          "city",
          "country_code",
          "province",
          "postal_code",
          "phone",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The address's ID."
          },
          "address_name": {
            "type": "string",
            "title": "address_name",
            "description": "The address's address name."
          },
          "is_default_shipping": {
            "type": "boolean",
            "title": "is_default_shipping",
            "description": "The address's is default shipping."
          },
          "is_default_billing": {
            "type": "boolean",
            "title": "is_default_billing",
            "description": "The address's is default billing."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The address's customer id."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The address's company."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The address's last name."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The address's postal code."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The address's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The address's updated at."
          }
        }
      },
      "AdminCustomerAddressResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCustomerAddressResponse",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AdminCustomerAddress"
          }
        }
      },
      "AdminCustomerGroup": {
        "type": "object",
        "description": "The group's groups.",
        "x-schemaName": "AdminCustomerGroup"
      },
      "AdminCustomerGroupResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCustomerGroupResponse",
        "required": [
          "customer_group"
        ],
        "properties": {
          "customer_group": {
            "$ref": "#/components/schemas/AdminCustomerGroup"
          }
        }
      },
      "AdminCustomerInGroupFilters": {
        "type": "object",
        "description": "The customer group's customers.",
        "x-schemaName": "AdminCustomerInGroupFilters",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string",
                "title": "id",
                "description": "The customer's ID."
              },
              {
                "type": "array",
                "description": "The customer's ID.",
                "items": {
                  "type": "string",
                  "title": "id",
                  "description": "The id's ID."
                }
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string",
                "title": "email",
                "description": "The customer's email.",
                "format": "email"
              },
              {
                "type": "array",
                "description": "The customer's email.",
                "items": {
                  "type": "string",
                  "title": "email",
                  "description": "The email's details.",
                  "format": "email"
                }
              },
              {
                "type": "object",
                "description": "The customer's email.",
                "properties": {
                  "$and": {
                    "type": "array",
                    "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                    "items": {
                      "type": "object"
                    },
                    "title": "$and"
                  },
                  "$or": {
                    "type": "array",
                    "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                    "items": {
                      "type": "object"
                    },
                    "title": "$or"
                  },
                  "$eq": {
                    "oneOf": [
                      {
                        "type": "string",
                        "title": "$eq",
                        "description": "Filter by an exact match."
                      },
                      {
                        "type": "array",
                        "description": "Filter by an exact match.",
                        "items": {
                          "type": "string",
                          "title": "$eq",
                          "description": "Filter by an exact match."
                        }
                      }
                    ]
                  },
                  "$ne": {
                    "type": "string",
                    "title": "$ne",
                    "description": "Filter by values not equal to this parameter."
                  },
                  "$in": {
                    "type": "array",
                    "description": "Filter by values in this array.",
                    "items": {
                      "type": "string",
                      "title": "$in",
                      "description": "Filter by values in this array."
                    }
                  },
                  "$nin": {
                    "type": "array",
                    "description": "Filter by values not in this array.",
                    "items": {
                      "type": "string",
                      "title": "$nin",
                      "description": "Filter by values not in this array."
                    }
                  },
                  "$not": {
                    "oneOf": [
                      {
                        "type": "string",
                        "title": "$not",
                        "description": "Filter by values not matching the conditions in this parameter."
                      },
                      {
                        "type": "object",
                        "description": "Filter by values not matching the conditions in this parameter."
                      },
                      {
                        "type": "array",
                        "description": "Filter by values not matching the conditions in this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$not",
                          "description": "Filter by values not matching the conditions in this parameter."
                        }
                      }
                    ]
                  },
                  "$gt": {
                    "type": "string",
                    "title": "$gt",
                    "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                  },
                  "$gte": {
                    "type": "string",
                    "title": "$gte",
                    "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                  },
                  "$lt": {
                    "type": "string",
                    "title": "$lt",
                    "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                  },
                  "$lte": {
                    "type": "string",
                    "title": "$lte",
                    "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                  },
                  "$like": {
                    "type": "string",
                    "title": "$like",
                    "description": "Apply a `like` filter. Useful for strings only."
                  },
                  "$re": {
                    "type": "string",
                    "title": "$re",
                    "description": "Apply a regex filter. Useful for strings only."
                  },
                  "$ilike": {
                    "type": "string",
                    "title": "$ilike",
                    "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                  },
                  "$fulltext": {
                    "type": "string",
                    "title": "$fulltext",
                    "description": "Filter to apply on full-text properties."
                  },
                  "$overlap": {
                    "type": "array",
                    "description": "Filter arrays that have overlapping values with this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$overlap",
                      "description": "Filter arrays that have overlapping values with this parameter."
                    }
                  },
                  "$contains": {
                    "type": "array",
                    "description": "Filter arrays that contain some of the values of this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$contains",
                      "description": "Filter arrays that contain some of the values of this parameter."
                    }
                  },
                  "$contained": {
                    "type": "array",
                    "description": "Filter arrays that contain all values of this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$contained",
                      "description": "Filter arrays that contain all values of this parameter."
                    }
                  },
                  "$exists": {
                    "type": "boolean",
                    "title": "$exists",
                    "description": "Filter by whether a value for this parameter exists (not `null`)."
                  }
                }
              }
            ]
          },
          "default_billing_address_id": {
            "oneOf": [
              {
                "type": "string",
                "title": "default_billing_address_id",
                "description": "The customer's default billing address id."
              },
              {
                "type": "array",
                "description": "The customer's default billing address id.",
                "items": {
                  "type": "string",
                  "title": "default_billing_address_id",
                  "description": "The default billing address id's details."
                }
              }
            ]
          },
          "default_shipping_address_id": {
            "oneOf": [
              {
                "type": "string",
                "title": "default_shipping_address_id",
                "description": "The customer's default shipping address id."
              },
              {
                "type": "array",
                "description": "The customer's default shipping address id.",
                "items": {
                  "type": "string",
                  "title": "default_shipping_address_id",
                  "description": "The default shipping address id's details."
                }
              }
            ]
          },
          "company_name": {
            "oneOf": [
              {
                "type": "string",
                "title": "company_name",
                "description": "The customer's company name."
              },
              {
                "type": "array",
                "description": "The customer's company name.",
                "items": {
                  "type": "string",
                  "title": "company_name",
                  "description": "The company name's details."
                }
              }
            ]
          },
          "first_name": {
            "oneOf": [
              {
                "type": "string",
                "title": "first_name",
                "description": "The customer's first name."
              },
              {
                "type": "array",
                "description": "The customer's first name.",
                "items": {
                  "type": "string",
                  "title": "first_name",
                  "description": "The first name's details."
                }
              }
            ]
          },
          "last_name": {
            "oneOf": [
              {
                "type": "string",
                "title": "last_name",
                "description": "The customer's last name."
              },
              {
                "type": "array",
                "description": "The customer's last name.",
                "items": {
                  "type": "string",
                  "title": "last_name",
                  "description": "The last name's details."
                }
              }
            ]
          },
          "created_by": {
            "oneOf": [
              {
                "type": "string",
                "title": "created_by",
                "description": "The customer's created by."
              },
              {
                "type": "array",
                "description": "The customer's created by.",
                "items": {
                  "type": "string",
                  "title": "created_by",
                  "description": "The created by's details."
                }
              }
            ]
          },
          "created_at": {
            "type": "object",
            "description": "The customer's created at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "updated_at": {
            "type": "object",
            "description": "The customer's updated at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "deleted_at": {
            "type": "object",
            "description": "The customer's deleted at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          }
        }
      },
      "AdminCustomerResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminCustomerResponse",
        "required": [
          "customer"
        ],
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/AdminCustomer"
          }
        }
      },
      "AdminDeletePaymentCollectionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminDeletePaymentCollectionResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment collection's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "SUMMARY",
            "default": "payment-collection"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "SUMMARY"
          }
        }
      },
      "AdminDraftOrderResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminDraftOrderResponse",
        "required": [
          "draft_order"
        ],
        "properties": {
          "draft_order": {
            "$ref": "#/components/schemas/AdminOrder"
          }
        }
      },
      "AdminExchange": {
        "type": "object",
        "description": "The exchange's details.",
        "x-schemaName": "AdminExchange",
        "required": [
          "order_id",
          "return_items",
          "additional_items",
          "currency_code",
          "id",
          "region_id",
          "customer_id",
          "sales_channel_id",
          "email",
          "shipping_methods",
          "payment_status",
          "fulfillment_status",
          "summary",
          "metadata",
          "created_at",
          "updated_at",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The exchange's order id."
          },
          "return_items": {
            "type": "array",
            "description": "The exchange's return items.",
            "items": {
              "$ref": "#/components/schemas/AdminReturnItem"
            }
          },
          "additional_items": {
            "type": "array",
            "description": "The exchange's additional items.",
            "items": {
              "$ref": "#/components/schemas/BaseExchangeItem"
            }
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The exchange's no notification."
          },
          "difference_due": {
            "type": "number",
            "title": "difference_due",
            "description": "The exchange's difference due."
          },
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          },
          "return_id": {
            "type": "string",
            "title": "return_id",
            "description": "The exchange's return id."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The exchange's currency code."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The exchange's ID."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The exchange's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The exchange's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The exchange's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The exchange's email.",
            "format": "email"
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The exchange's display id."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "shipping_methods": {
            "type": "array",
            "description": "The exchange's shipping methods.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethod"
            }
          },
          "payment_collections": {
            "type": "array",
            "description": "The exchange's payment collections.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentCollection"
            }
          },
          "payment_status": {
            "type": "string",
            "description": "The exchange's payment status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized",
              "captured",
              "partially_captured",
              "partially_refunded",
              "refunded",
              "requires_action"
            ]
          },
          "fulfillments": {
            "type": "array",
            "description": "The exchange's fulfillments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderFulfillment"
            }
          },
          "fulfillment_status": {
            "type": "string",
            "description": "The exchange's fulfillment status.",
            "enum": [
              "canceled",
              "not_fulfilled",
              "partially_fulfilled",
              "fulfilled",
              "partially_shipped",
              "shipped",
              "partially_delivered",
              "delivered"
            ]
          },
          "transactions": {
            "type": "array",
            "description": "The exchange's transactions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderTransaction"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/BaseOrderSummary"
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The exchange's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The exchange's updated at."
          },
          "original_item_total": {
            "type": "number",
            "title": "original_item_total",
            "description": "The exchange's original item total."
          },
          "original_item_subtotal": {
            "type": "number",
            "title": "original_item_subtotal",
            "description": "The exchange's original item subtotal."
          },
          "original_item_tax_total": {
            "type": "number",
            "title": "original_item_tax_total",
            "description": "The exchange's original item tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The exchange's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The exchange's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The exchange's item tax total."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The exchange's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The exchange's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The exchange's original tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The exchange's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The exchange's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The exchange's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The exchange's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The exchange's discount tax total."
          },
          "gift_card_total": {
            "type": "number",
            "title": "gift_card_total",
            "description": "The exchange's gift card total."
          },
          "gift_card_tax_total": {
            "type": "number",
            "title": "gift_card_tax_total",
            "description": "The exchange's gift card tax total."
          },
          "shipping_total": {
            "type": "number",
            "title": "shipping_total",
            "description": "The exchange's shipping total."
          },
          "shipping_subtotal": {
            "type": "number",
            "title": "shipping_subtotal",
            "description": "The exchange's shipping subtotal."
          },
          "shipping_tax_total": {
            "type": "number",
            "title": "shipping_tax_total",
            "description": "The exchange's shipping tax total."
          },
          "original_shipping_total": {
            "type": "number",
            "title": "original_shipping_total",
            "description": "The exchange's original shipping total."
          },
          "original_shipping_subtotal": {
            "type": "number",
            "title": "original_shipping_subtotal",
            "description": "The exchange's original shipping subtotal."
          },
          "original_shipping_tax_total": {
            "type": "number",
            "title": "original_shipping_tax_total",
            "description": "The exchange's original shipping tax total."
          }
        }
      },
      "AdminExchangeDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangeDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The exchange's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "exchange"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Exchange was deleted."
          }
        }
      },
      "AdminExchangeOrderResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangeOrderResponse",
        "required": [
          "order",
          "exchange"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "exchange": {
            "$ref": "#/components/schemas/AdminExchange"
          }
        }
      },
      "AdminExchangePreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangePreviewResponse",
        "required": [
          "order_preview",
          "exchange"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "exchange": {
            "$ref": "#/components/schemas/AdminExchange"
          }
        }
      },
      "AdminExchangeRequestResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangeRequestResponse",
        "required": [
          "return",
          "order_preview",
          "exchange"
        ],
        "properties": {
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          },
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "exchange": {
            "$ref": "#/components/schemas/AdminExchange"
          }
        }
      },
      "AdminExchangeResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangeResponse",
        "required": [
          "exchange"
        ],
        "properties": {
          "exchange": {
            "$ref": "#/components/schemas/AdminExchange"
          }
        }
      },
      "AdminExchangeReturnResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExchangeReturnResponse",
        "required": [
          "order_preview",
          "return"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          },
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          }
        }
      },
      "AdminExportProductRequest": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExportProductRequest"
      },
      "AdminExportProductResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminExportProductResponse",
        "required": [
          "transaction_id"
        ],
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "transaction_id",
            "description": "The product's transaction id."
          }
        }
      },
      "AdminFile": {
        "type": "object",
        "description": "The upload's file.",
        "x-schemaName": "AdminFile",
        "required": [
          "id",
          "url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The file's ID."
          },
          "url": {
            "type": "string",
            "title": "url",
            "description": "The file's url."
          }
        }
      },
      "AdminFileListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFileListResponse",
        "required": [
          "files"
        ],
        "properties": {
          "files": {
            "type": "array",
            "description": "The upload's files.",
            "items": {
              "$ref": "#/components/schemas/AdminFile"
            }
          }
        }
      },
      "AdminFileResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFileResponse",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "$ref": "#/components/schemas/AdminFile"
          }
        }
      },
      "AdminFulfillment": {
        "type": "object",
        "description": "The fulfillment's details.",
        "x-schemaName": "AdminFulfillment",
        "required": [
          "id",
          "location_id",
          "provider_id",
          "shipping_option_id",
          "provider",
          "delivery_address",
          "items",
          "labels",
          "packed_at",
          "shipped_at",
          "delivered_at",
          "canceled_at",
          "data",
          "metadata",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The fulfillment's ID."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The fulfillment's location id."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The fulfillment's provider id."
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The fulfillment's shipping option id."
          },
          "provider": {
            "$ref": "#/components/schemas/AdminFulfillmentProvider"
          },
          "delivery_address": {
            "$ref": "#/components/schemas/AdminFulfillmentAddress"
          },
          "items": {
            "type": "array",
            "description": "The fulfillment's items.",
            "items": {
              "$ref": "#/components/schemas/AdminFulfillmentItem"
            }
          },
          "labels": {
            "type": "array",
            "description": "The fulfillment's labels.",
            "items": {
              "$ref": "#/components/schemas/AdminFulfillmentLabel"
            }
          },
          "packed_at": {
            "type": "string",
            "title": "packed_at",
            "description": "The fulfillment's packed at."
          },
          "shipped_at": {
            "type": "string",
            "title": "shipped_at",
            "description": "The fulfillment's shipped at."
          },
          "delivered_at": {
            "type": "string",
            "title": "delivered_at",
            "description": "The fulfillment's delivered at."
          },
          "canceled_at": {
            "type": "string",
            "title": "canceled_at",
            "description": "The fulfillment's canceled at."
          },
          "data": {
            "type": "object",
            "description": "The fulfillment's data."
          },
          "metadata": {
            "type": "object",
            "description": "The fulfillment's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The fulfillment's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The fulfillment's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The fulfillment's deleted at."
          }
        }
      },
      "AdminFulfillmentAddress": {
        "type": "object",
        "description": "The fulfillment's delivery address.",
        "x-schemaName": "AdminFulfillmentAddress",
        "required": [
          "id",
          "fulfillment_id",
          "company",
          "first_name",
          "last_name",
          "address_1",
          "address_2",
          "city",
          "country_code",
          "province",
          "postal_code",
          "phone",
          "metadata",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The delivery address's ID."
          },
          "fulfillment_id": {
            "type": "string",
            "title": "fulfillment_id",
            "description": "The delivery address's fulfillment id."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The delivery address's company."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The delivery address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The delivery address's last name."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The delivery address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The delivery address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The delivery address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The delivery address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The delivery address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The delivery address's postal code."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The delivery address's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The delivery address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The delivery address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The delivery address's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The delivery address's deleted at."
          }
        }
      },
      "AdminFulfillmentItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "AdminFulfillmentItem",
        "required": [
          "id",
          "title",
          "quantity",
          "sku",
          "barcode",
          "line_item_id",
          "inventory_item_id",
          "fulfillment_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The item's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The item's title."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The item's quantity."
          },
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The item's sku."
          },
          "barcode": {
            "type": "string",
            "title": "barcode",
            "description": "The item's barcode."
          },
          "line_item_id": {
            "type": "string",
            "title": "line_item_id",
            "description": "The item's line item id."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The item's inventory item id."
          },
          "fulfillment_id": {
            "type": "string",
            "title": "fulfillment_id",
            "description": "The item's fulfillment id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The item's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The item's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The item's deleted at."
          }
        }
      },
      "AdminFulfillmentLabel": {
        "type": "object",
        "description": "The label's labels.",
        "x-schemaName": "AdminFulfillmentLabel",
        "required": [
          "id",
          "tracking_number",
          "tracking_url",
          "label_url",
          "fulfillment_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The label's ID."
          },
          "tracking_number": {
            "type": "string",
            "title": "tracking_number",
            "description": "The label's tracking number."
          },
          "tracking_url": {
            "type": "string",
            "title": "tracking_url",
            "description": "The label's tracking url."
          },
          "label_url": {
            "type": "string",
            "title": "label_url",
            "description": "The label's label url."
          },
          "fulfillment_id": {
            "type": "string",
            "title": "fulfillment_id",
            "description": "The label's fulfillment id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The label's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The label's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The label's deleted at."
          }
        }
      },
      "AdminFulfillmentProvider": {
        "type": "object",
        "description": "The fulfillment provider's fulfillment providers.",
        "x-schemaName": "AdminFulfillmentProvider"
      },
      "AdminFulfillmentProviderListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFulfillmentProviderListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "fulfillment_providers"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The fulfillment provider's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The fulfillment provider's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The fulfillment provider's count."
          },
          "fulfillment_providers": {
            "type": "array",
            "description": "The fulfillment provider's fulfillment providers.",
            "items": {
              "$ref": "#/components/schemas/AdminFulfillmentProvider"
            }
          }
        }
      },
      "AdminFulfillmentResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFulfillmentResponse",
        "required": [
          "fulfillment"
        ],
        "properties": {
          "fulfillment": {
            "$ref": "#/components/schemas/AdminFulfillment"
          }
        }
      },
      "AdminFulfillmentSet": {
        "type": "object",
        "description": "The fulfillment set's parent.",
        "x-schemaName": "AdminFulfillmentSet",
        "required": [
          "id",
          "name",
          "type",
          "location",
          "service_zones",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The parent's name."
          },
          "type": {
            "type": "string",
            "title": "type",
            "description": "The parent's type."
          },
          "location": {
            "$ref": "#/components/schemas/AdminStockLocation"
          },
          "service_zones": {
            "type": "array",
            "description": "The parent's service zones.",
            "items": {
              "$ref": "#/components/schemas/AdminServiceZone"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The parent's deleted at."
          }
        }
      },
      "AdminFulfillmentSetDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFulfillmentSetDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The fulfillment set's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "fulfillment_set"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Fulfillment Set was deleted."
          }
        }
      },
      "AdminFulfillmentSetResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminFulfillmentSetResponse",
        "required": [
          "fulfillment_set"
        ],
        "properties": {
          "fulfillment_set": {
            "$ref": "#/components/schemas/AdminFulfillmentSet"
          }
        }
      },
      "AdminGeoZone": {
        "type": "object",
        "description": "The geo zone's geo zones.",
        "x-schemaName": "AdminGeoZone"
      },
      "AdminImportProductRequest": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminImportProductRequest",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "$ref": "#/components/schemas/File"
          }
        }
      },
      "AdminImportProductResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminImportProductResponse",
        "required": [
          "transaction_id",
          "summary"
        ],
        "properties": {
          "transaction_id": {
            "type": "string",
            "title": "transaction_id",
            "description": "The product's transaction id."
          },
          "summary": {
            "type": "object",
            "description": "The product's summary.",
            "required": [
              "toCreate",
              "toUpdate"
            ],
            "properties": {
              "toCreate": {
                "type": "number",
                "title": "toCreate",
                "description": "The summary's tocreate."
              },
              "toUpdate": {
                "type": "number",
                "title": "toUpdate",
                "description": "The summary's toupdate."
              }
            }
          }
        }
      },
      "AdminInventoryItem": {
        "type": "object",
        "description": "The inventory item's details.",
        "x-schemaName": "AdminInventoryItem",
        "required": [
          "id",
          "requires_shipping"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The inventory item's ID."
          },
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The inventory item's sku."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The inventory item's origin country."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The inventory item's hs code."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The inventory item's requires shipping."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The inventory item's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The inventory item's material."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The inventory item's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The inventory item's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The inventory item's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The inventory item's width."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The inventory item's title."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The inventory item's description."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The inventory item's thumbnail."
          },
          "metadata": {
            "type": "object",
            "description": "The inventory item's metadata."
          },
          "location_levels": {
            "type": "array",
            "description": "The inventory item's location levels.",
            "items": {
              "$ref": "#/components/schemas/AdminInventoryLevel"
            }
          }
        }
      },
      "AdminInventoryItemResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminInventoryItemResponse",
        "required": [
          "inventory_item"
        ],
        "properties": {
          "inventory_item": {
            "$ref": "#/components/schemas/AdminInventoryItem"
          }
        }
      },
      "AdminInventoryLevel": {
        "type": "object",
        "description": "The location level's location levels.",
        "x-schemaName": "AdminInventoryLevel",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "deleted_at",
          "inventory_item_id",
          "location_id",
          "stocked_quantity",
          "raw_stocked_quantity",
          "reserved_quantity",
          "raw_reserved_quantity",
          "incoming_quantity",
          "raw_incoming_quantity",
          "metadata",
          "available_quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The location level's ID."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The location level's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The location level's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The location level's deleted at."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The location level's inventory item id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The location level's location id."
          },
          "stocked_quantity": {
            "type": "number",
            "title": "stocked_quantity",
            "description": "The location level's stocked quantity."
          },
          "raw_stocked_quantity": {
            "type": "object",
            "description": "The location level's raw stocked quantity."
          },
          "reserved_quantity": {
            "type": "number",
            "title": "reserved_quantity",
            "description": "The location level's reserved quantity."
          },
          "raw_reserved_quantity": {
            "type": "object",
            "description": "The location level's raw reserved quantity."
          },
          "incoming_quantity": {
            "type": "number",
            "title": "incoming_quantity",
            "description": "The location level's incoming quantity."
          },
          "raw_incoming_quantity": {
            "type": "object",
            "description": "The location level's raw incoming quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The location level's metadata."
          },
          "inventory_item": {
            "type": "object"
          },
          "available_quantity": {
            "type": "number",
            "title": "available_quantity",
            "description": "The location level's available quantity."
          }
        }
      },
      "AdminInvite": {
        "type": "object",
        "description": "The invite's details.",
        "x-schemaName": "AdminInvite",
        "required": [
          "id",
          "email",
          "accepted",
          "token"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The invite's ID."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The invite's email.",
            "format": "email"
          },
          "accepted": {
            "type": "boolean",
            "title": "accepted",
            "description": "The invite's accepted."
          },
          "token": {
            "type": "string",
            "title": "token",
            "description": "The invite's token."
          },
          "expires_at": {
            "type": "string",
            "title": "expires_at",
            "description": "The invite's expires at.",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "description": "The invite's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The invite's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The invite's updated at."
          }
        }
      },
      "AdminInviteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminInviteResponse",
        "required": [
          "invite"
        ],
        "properties": {
          "invite": {
            "$ref": "#/components/schemas/AdminInvite"
          }
        }
      },
      "AdminLinkPriceListProducts": {
        "type": "object",
        "description": "The removal details.",
        "properties": {
          "remove": {
            "type": "array",
            "description": "The products to remove from the price list.",
            "items": {
              "type": "string",
              "title": "remove",
              "description": "The ID of a product."
            }
          }
        },
        "x-schemaName": "AdminLinkPriceListProducts"
      },
      "AdminNotification": {
        "type": "object",
        "description": "The notification's details.",
        "x-schemaName": "AdminNotification",
        "required": [
          "id",
          "to",
          "channel",
          "template",
          "provider_id",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The notification's ID."
          },
          "to": {
            "type": "string",
            "title": "to",
            "description": "The notification's to."
          },
          "channel": {
            "type": "string",
            "title": "channel",
            "description": "The notification's channel."
          },
          "template": {
            "type": "string",
            "title": "template",
            "description": "The notification's template."
          },
          "data": {
            "type": "object",
            "description": "The notification's data."
          },
          "trigger_type": {
            "type": "string",
            "title": "trigger_type",
            "description": "The notification's trigger type."
          },
          "resource_id": {
            "type": "string",
            "title": "resource_id",
            "description": "The notification's resource id."
          },
          "resource_type": {
            "type": "string",
            "title": "resource_type",
            "description": "The notification's resource type."
          },
          "receiver_id": {
            "type": "string",
            "title": "receiver_id",
            "description": "The notification's receiver id."
          },
          "original_notification_id": {
            "type": "string",
            "title": "original_notification_id",
            "description": "The notification's original notification id."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The notification's external id."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The notification's provider id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The notification's created at."
          }
        }
      },
      "AdminNotificationListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminNotificationListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "notifications"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The notification's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The notification's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The notification's count."
          },
          "notifications": {
            "type": "array",
            "description": "The notification's notifications.",
            "items": {
              "$ref": "#/components/schemas/AdminNotification"
            }
          }
        }
      },
      "AdminNotificationResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminNotificationResponse",
        "required": [
          "notification"
        ],
        "properties": {
          "notification": {
            "$ref": "#/components/schemas/AdminNotification"
          }
        }
      },
      "AdminOrder": {
        "type": "object",
        "description": "The order's details.",
        "x-schemaName": "AdminOrder",
        "required": [
          "payment_collections",
          "id",
          "version",
          "region_id",
          "customer_id",
          "sales_channel_id",
          "email",
          "currency_code",
          "items",
          "shipping_methods",
          "payment_status",
          "fulfillment_status",
          "summary",
          "metadata",
          "created_at",
          "updated_at",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "payment_collections": {
            "type": "array",
            "description": "The order's payment collections.",
            "items": {
              "$ref": "#/components/schemas/AdminPaymentCollection"
            }
          },
          "fulfillments": {
            "type": "array",
            "description": "The order's fulfillments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderFulfillment"
            }
          },
          "sales_channel": {
            "$ref": "#/components/schemas/AdminSalesChannel"
          },
          "customer": {
            "$ref": "#/components/schemas/AdminCustomer"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/AdminOrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/AdminOrderAddress"
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order's ID."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order's version."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The order's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The order's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The order's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The order's email.",
            "format": "email"
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The order's currency code."
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The order's display id."
          },
          "items": {
            "type": "array",
            "description": "The order's items.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderLineItem"
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "The order's shipping methods.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethod"
            }
          },
          "payment_status": {
            "type": "string",
            "description": "The order's payment status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized",
              "captured",
              "partially_captured",
              "partially_refunded",
              "refunded",
              "requires_action"
            ]
          },
          "fulfillment_status": {
            "type": "string",
            "description": "The order's fulfillment status.",
            "enum": [
              "canceled",
              "not_fulfilled",
              "partially_fulfilled",
              "fulfilled",
              "partially_shipped",
              "shipped",
              "partially_delivered",
              "delivered"
            ]
          },
          "transactions": {
            "type": "array",
            "description": "The order's transactions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderTransaction"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/BaseOrderSummary"
          },
          "metadata": {
            "type": "object",
            "description": "The order's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order's updated at."
          },
          "original_item_total": {
            "type": "number",
            "title": "original_item_total",
            "description": "The order's original item total."
          },
          "original_item_subtotal": {
            "type": "number",
            "title": "original_item_subtotal",
            "description": "The order's original item subtotal."
          },
          "original_item_tax_total": {
            "type": "number",
            "title": "original_item_tax_total",
            "description": "The order's original item tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The order's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The order's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The order's item tax total."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The order's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The order's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The order's original tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The order's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The order's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The order's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The order's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The order's discount tax total."
          },
          "gift_card_total": {
            "type": "number",
            "title": "gift_card_total",
            "description": "The order's gift card total."
          },
          "gift_card_tax_total": {
            "type": "number",
            "title": "gift_card_tax_total",
            "description": "The order's gift card tax total."
          },
          "shipping_total": {
            "type": "number",
            "title": "shipping_total",
            "description": "The order's shipping total."
          },
          "shipping_subtotal": {
            "type": "number",
            "title": "shipping_subtotal",
            "description": "The order's shipping subtotal."
          },
          "shipping_tax_total": {
            "type": "number",
            "title": "shipping_tax_total",
            "description": "The order's shipping tax total."
          },
          "original_shipping_total": {
            "type": "number",
            "title": "original_shipping_total",
            "description": "The order's original shipping total."
          },
          "original_shipping_subtotal": {
            "type": "number",
            "title": "original_shipping_subtotal",
            "description": "The order's original shipping subtotal."
          },
          "original_shipping_tax_total": {
            "type": "number",
            "title": "original_shipping_tax_total",
            "description": "The order's original shipping tax total."
          }
        }
      },
      "AdminOrderAddress": {
        "type": "object",
        "description": "The order's billing address.",
        "x-schemaName": "AdminOrderAddress",
        "required": [
          "id",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "country": {
            "$ref": "#/components/schemas/AdminRegionCountry"
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The billing address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The billing address's customer id."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The billing address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The billing address's updated at."
          }
        }
      },
      "AdminOrderChangesResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderChangesResponse",
        "required": [
          "order_changes"
        ],
        "properties": {
          "order_changes": {
            "type": "array",
            "description": "The order's order changes.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderChange"
            }
          }
        }
      },
      "AdminOrderEditPreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderEditPreviewResponse",
        "required": [
          "order_preview"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/OrderPreview"
          }
        }
      },
      "AdminOrderEditResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderEditResponse",
        "required": [
          "order_change"
        ],
        "properties": {
          "order_change": {
            "$ref": "#/components/schemas/OrderChange"
          }
        }
      },
      "AdminOrderPreview": {
        "type": "object",
        "description": "The return's order preview.",
        "x-schemaName": "AdminOrderPreview",
        "required": [
          "return_requested_total",
          "order_change",
          "currency_code",
          "version",
          "id",
          "region_id",
          "customer_id",
          "sales_channel_id",
          "email",
          "payment_collections",
          "payment_status",
          "fulfillment_status",
          "summary",
          "metadata",
          "created_at",
          "updated_at",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "return_requested_total": {
            "type": "number",
            "title": "return_requested_total",
            "description": "The order preview's return requested total."
          },
          "order_change": {
            "$ref": "#/components/schemas/BaseOrderChange"
          },
          "items": {
            "type": "array",
            "description": "The order preview's items.",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "The item's items.",
                  "x-schemaName": "BaseOrderLineItem",
                  "required": [
                    "id",
                    "title",
                    "subtitle",
                    "thumbnail",
                    "variant_id",
                    "product_id",
                    "product_title",
                    "product_description",
                    "product_subtitle",
                    "product_type",
                    "product_collection",
                    "product_handle",
                    "variant_sku",
                    "variant_barcode",
                    "variant_title",
                    "variant_option_values",
                    "requires_shipping",
                    "is_discountable",
                    "is_tax_inclusive",
                    "unit_price",
                    "quantity",
                    "detail",
                    "created_at",
                    "updated_at",
                    "metadata",
                    "original_total",
                    "original_subtotal",
                    "original_tax_total",
                    "item_total",
                    "item_subtotal",
                    "item_tax_total",
                    "total",
                    "subtotal",
                    "tax_total",
                    "discount_total",
                    "discount_tax_total",
                    "refundable_total",
                    "refundable_total_per_unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "id",
                      "description": "The item's ID."
                    },
                    "title": {
                      "type": "string",
                      "title": "title",
                      "description": "The item's title."
                    },
                    "subtitle": {
                      "type": "string",
                      "title": "subtitle",
                      "description": "The item's subtitle."
                    },
                    "thumbnail": {
                      "type": "string",
                      "title": "thumbnail",
                      "description": "The item's thumbnail."
                    },
                    "variant": {
                      "$ref": "#/components/schemas/BaseProductVariant"
                    },
                    "variant_id": {
                      "type": "string",
                      "title": "variant_id",
                      "description": "The item's variant id."
                    },
                    "product": {
                      "$ref": "#/components/schemas/BaseProduct"
                    },
                    "product_id": {
                      "type": "string",
                      "title": "product_id",
                      "description": "The item's product id."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "product_title",
                      "description": "The item's product title."
                    },
                    "product_description": {
                      "type": "string",
                      "title": "product_description",
                      "description": "The item's product description."
                    },
                    "product_subtitle": {
                      "type": "string",
                      "title": "product_subtitle",
                      "description": "The item's product subtitle."
                    },
                    "product_type": {
                      "type": "string",
                      "title": "product_type",
                      "description": "The item's product type."
                    },
                    "product_collection": {
                      "type": "string",
                      "title": "product_collection",
                      "description": "The item's product collection."
                    },
                    "product_handle": {
                      "type": "string",
                      "title": "product_handle",
                      "description": "The item's product handle."
                    },
                    "variant_sku": {
                      "type": "string",
                      "title": "variant_sku",
                      "description": "The item's variant sku."
                    },
                    "variant_barcode": {
                      "type": "string",
                      "title": "variant_barcode",
                      "description": "The item's variant barcode."
                    },
                    "variant_title": {
                      "type": "string",
                      "title": "variant_title",
                      "description": "The item's variant title."
                    },
                    "variant_option_values": {
                      "type": "object",
                      "description": "The item's variant option values."
                    },
                    "requires_shipping": {
                      "type": "boolean",
                      "title": "requires_shipping",
                      "description": "The item's requires shipping."
                    },
                    "is_discountable": {
                      "type": "boolean",
                      "title": "is_discountable",
                      "description": "The item's is discountable."
                    },
                    "is_tax_inclusive": {
                      "type": "boolean",
                      "title": "is_tax_inclusive",
                      "description": "The item's is tax inclusive."
                    },
                    "compare_at_unit_price": {
                      "type": "number",
                      "title": "compare_at_unit_price",
                      "description": "The item's compare at unit price."
                    },
                    "unit_price": {
                      "type": "number",
                      "title": "unit_price",
                      "description": "The item's unit price."
                    },
                    "quantity": {
                      "type": "number",
                      "title": "quantity",
                      "description": "The item's quantity."
                    },
                    "tax_lines": {
                      "type": "array",
                      "description": "The item's tax lines.",
                      "items": {
                        "$ref": "#/components/schemas/BaseOrderLineItemTaxLine"
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "The item's adjustments.",
                      "items": {
                        "$ref": "#/components/schemas/BaseOrderLineItemAdjustment"
                      }
                    },
                    "detail": {
                      "$ref": "#/components/schemas/BaseOrderItemDetail"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "created_at",
                      "description": "The item's created at."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "updated_at",
                      "description": "The item's updated at."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The item's metadata."
                    },
                    "original_total": {
                      "type": "number",
                      "title": "original_total",
                      "description": "The item's original total."
                    },
                    "original_subtotal": {
                      "type": "number",
                      "title": "original_subtotal",
                      "description": "The item's original subtotal."
                    },
                    "original_tax_total": {
                      "type": "number",
                      "title": "original_tax_total",
                      "description": "The item's original tax total."
                    },
                    "item_total": {
                      "type": "number",
                      "title": "item_total",
                      "description": "The item's item total."
                    },
                    "item_subtotal": {
                      "type": "number",
                      "title": "item_subtotal",
                      "description": "The item's item subtotal."
                    },
                    "item_tax_total": {
                      "type": "number",
                      "title": "item_tax_total",
                      "description": "The item's item tax total."
                    },
                    "total": {
                      "type": "number",
                      "title": "total",
                      "description": "The item's total."
                    },
                    "subtotal": {
                      "type": "number",
                      "title": "subtotal",
                      "description": "The item's subtotal."
                    },
                    "tax_total": {
                      "type": "number",
                      "title": "tax_total",
                      "description": "The item's tax total."
                    },
                    "discount_total": {
                      "type": "number",
                      "title": "discount_total",
                      "description": "The item's discount total."
                    },
                    "discount_tax_total": {
                      "type": "number",
                      "title": "discount_tax_total",
                      "description": "The item's discount tax total."
                    },
                    "refundable_total": {
                      "type": "number",
                      "title": "refundable_total",
                      "description": "The item's refundable total."
                    },
                    "refundable_total_per_unit": {
                      "type": "number",
                      "title": "refundable_total_per_unit",
                      "description": "The item's refundable total per unit."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The item's items.",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "description": "The item's actions.",
                      "items": {
                        "type": "object",
                        "description": "The action's actions.",
                        "x-schemaName": "BaseOrderChangeAction"
                      }
                    }
                  }
                }
              ]
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "The order preview's shipping methods.",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "The shipping method's shipping methods.",
                  "x-schemaName": "BaseOrderShippingMethod",
                  "required": [
                    "id",
                    "order_id",
                    "name",
                    "amount",
                    "is_tax_inclusive",
                    "shipping_option_id",
                    "data",
                    "metadata",
                    "original_total",
                    "original_subtotal",
                    "original_tax_total",
                    "total",
                    "subtotal",
                    "tax_total",
                    "discount_total",
                    "discount_tax_total",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "id",
                      "description": "The shipping method's ID."
                    },
                    "order_id": {
                      "type": "string",
                      "title": "order_id",
                      "description": "The shipping method's order id."
                    },
                    "name": {
                      "type": "string",
                      "title": "name",
                      "description": "The shipping method's name."
                    },
                    "description": {
                      "type": "string",
                      "title": "description",
                      "description": "The shipping method's description."
                    },
                    "amount": {
                      "type": "number",
                      "title": "amount",
                      "description": "The shipping method's amount."
                    },
                    "is_tax_inclusive": {
                      "type": "boolean",
                      "title": "is_tax_inclusive",
                      "description": "The shipping method's is tax inclusive."
                    },
                    "shipping_option_id": {
                      "type": "string",
                      "title": "shipping_option_id",
                      "description": "The shipping method's shipping option id."
                    },
                    "data": {
                      "type": "object",
                      "description": "The shipping method's data."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The shipping method's metadata."
                    },
                    "tax_lines": {
                      "type": "array",
                      "description": "The shipping method's tax lines.",
                      "items": {
                        "$ref": "#/components/schemas/BaseOrderShippingMethodTaxLine"
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "The shipping method's adjustments.",
                      "items": {
                        "$ref": "#/components/schemas/BaseOrderShippingMethodAdjustment"
                      }
                    },
                    "original_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "type": "number",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "type": "number",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "type": "number",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "type": "number",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "type": "number",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "type": "number",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "type": "number",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "type": "number",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "created_at",
                      "description": "The shipping method's created at."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "updated_at",
                      "description": "The shipping method's updated at."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The shipping method's shipping methods.",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "description": "The shipping method's actions.",
                      "items": {
                        "type": "object",
                        "description": "The action's actions.",
                        "x-schemaName": "BaseOrderChangeAction"
                      }
                    }
                  }
                }
              ]
            }
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The order preview's currency code."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order preview's version."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order preview's ID."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The order preview's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The order preview's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The order preview's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The order preview's email.",
            "format": "email"
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The order preview's display id."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/AdminOrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/AdminOrderAddress"
          },
          "payment_collections": {
            "type": "array",
            "description": "The order preview's payment collections.",
            "items": {
              "$ref": "#/components/schemas/AdminPaymentCollection"
            }
          },
          "payment_status": {
            "type": "string",
            "description": "The order preview's payment status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized",
              "captured",
              "partially_captured",
              "partially_refunded",
              "refunded",
              "requires_action"
            ]
          },
          "fulfillments": {
            "type": "array",
            "description": "The order preview's fulfillments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderFulfillment"
            }
          },
          "fulfillment_status": {
            "type": "string",
            "description": "The order preview's fulfillment status.",
            "enum": [
              "canceled",
              "not_fulfilled",
              "partially_fulfilled",
              "fulfilled",
              "partially_shipped",
              "shipped",
              "partially_delivered",
              "delivered"
            ]
          },
          "transactions": {
            "type": "array",
            "description": "The order preview's transactions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderTransaction"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/BaseOrderSummary"
          },
          "metadata": {
            "type": "object",
            "description": "The order preview's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order preview's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order preview's updated at."
          },
          "original_item_total": {
            "type": "number",
            "title": "original_item_total",
            "description": "The order preview's original item total."
          },
          "original_item_subtotal": {
            "type": "number",
            "title": "original_item_subtotal",
            "description": "The order preview's original item subtotal."
          },
          "original_item_tax_total": {
            "type": "number",
            "title": "original_item_tax_total",
            "description": "The order preview's original item tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The order preview's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The order preview's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The order preview's item tax total."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The order preview's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The order preview's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The order preview's original tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The order preview's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The order preview's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The order preview's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The order preview's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The order preview's discount tax total."
          },
          "gift_card_total": {
            "type": "number",
            "title": "gift_card_total",
            "description": "The order preview's gift card total."
          },
          "gift_card_tax_total": {
            "type": "number",
            "title": "gift_card_tax_total",
            "description": "The order preview's gift card tax total."
          },
          "shipping_total": {
            "type": "number",
            "title": "shipping_total",
            "description": "The order preview's shipping total."
          },
          "shipping_subtotal": {
            "type": "number",
            "title": "shipping_subtotal",
            "description": "The order preview's shipping subtotal."
          },
          "shipping_tax_total": {
            "type": "number",
            "title": "shipping_tax_total",
            "description": "The order preview's shipping tax total."
          },
          "original_shipping_total": {
            "type": "number",
            "title": "original_shipping_total",
            "description": "The order preview's original shipping total."
          },
          "original_shipping_subtotal": {
            "type": "number",
            "title": "original_shipping_subtotal",
            "description": "The order preview's original shipping subtotal."
          },
          "original_shipping_tax_total": {
            "type": "number",
            "title": "original_shipping_tax_total",
            "description": "The order preview's original shipping tax total."
          },
          "customer": {
            "$ref": "#/components/schemas/AdminCustomer"
          },
          "sales_channel": {
            "$ref": "#/components/schemas/AdminSalesChannel"
          }
        }
      },
      "AdminOrderPreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderPreviewResponse",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/AdminOrderPreview"
          }
        }
      },
      "AdminOrderResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderResponse",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/AdminOrder"
          }
        }
      },
      "AdminOrderReturnResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminOrderReturnResponse",
        "required": [
          "order",
          "return"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          }
        }
      },
      "AdminPayment": {
        "type": "object",
        "description": "The payment's details.",
        "x-schemaName": "AdminPayment",
        "required": [
          "id",
          "amount",
          "currency_code",
          "provider_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment's ID."
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The payment's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The payment's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The payment's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "authorized_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment's authorized amount."
              },
              {
                "type": "number",
                "title": "authorized_amount",
                "description": "The payment's authorized amount."
              },
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment's authorized amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The payment's currency code."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The payment's provider id."
          },
          "cart_id": {
            "type": "string",
            "title": "cart_id",
            "description": "The payment's cart id."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The payment's order id."
          },
          "order_edit_id": {
            "type": "string",
            "title": "order_edit_id",
            "description": "The payment's order edit id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The payment's customer id."
          },
          "data": {
            "type": "object",
            "description": "The payment's data."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The payment's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The payment's updated at."
          },
          "captured_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "captured_at",
                "description": "The payment's captured at."
              },
              {
                "type": "string",
                "title": "captured_at",
                "description": "The payment's captured at.",
                "format": "date-time"
              }
            ]
          },
          "canceled_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The payment's canceled at."
              },
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The payment's canceled at.",
                "format": "date-time"
              }
            ]
          },
          "captured_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment's captured amount."
              },
              {
                "type": "number",
                "title": "captured_amount",
                "description": "The payment's captured amount."
              },
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment's captured amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "refunded_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment's refunded amount."
              },
              {
                "type": "number",
                "title": "refunded_amount",
                "description": "The payment's refunded amount."
              },
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment's refunded amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "captures": {
            "type": "array",
            "description": "The payment's captures.",
            "items": {
              "$ref": "#/components/schemas/BaseCapture"
            }
          },
          "refunds": {
            "type": "array",
            "description": "The payment's refunds.",
            "items": {
              "$ref": "#/components/schemas/BaseRefund"
            }
          },
          "payment_collection": {
            "$ref": "#/components/schemas/BasePaymentCollection"
          },
          "payment_session": {
            "$ref": "#/components/schemas/BasePaymentSession"
          }
        }
      },
      "AdminPaymentCollection": {
        "type": "object",
        "description": "The payment collection's payment collections.",
        "x-schemaName": "AdminPaymentCollection",
        "required": [
          "id",
          "currency_code",
          "region_id",
          "amount",
          "status",
          "payment_providers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment collection's ID."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The payment collection's currency code."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The payment collection's region id."
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "authorized_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "number",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "captured_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "number",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "refunded_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "number",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at."
              },
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at.",
                "format": "date-time"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The payment collection's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The payment collection's updated at."
          },
          "metadata": {
            "type": "object",
            "description": "The payment collection's metadata."
          },
          "status": {
            "type": "string",
            "description": "The payment collection's status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized"
            ]
          },
          "payment_providers": {
            "type": "array",
            "description": "The payment collection's payment providers.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentProvider"
            }
          },
          "payment_sessions": {
            "type": "array",
            "description": "The payment collection's payment sessions.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentSession"
            }
          },
          "payments": {
            "type": "array",
            "description": "The payment collection's payments.",
            "items": {
              "$ref": "#/components/schemas/BasePayment"
            }
          }
        }
      },
      "AdminPaymentCollectionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPaymentCollectionResponse",
        "required": [
          "payment_collection"
        ],
        "properties": {
          "payment_collection": {
            "$ref": "#/components/schemas/AdminPaymentCollection"
          }
        }
      },
      "AdminPaymentProvider": {
        "type": "object",
        "description": "The payment provider's payment providers.",
        "x-schemaName": "AdminPaymentProvider"
      },
      "AdminPaymentResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPaymentResponse",
        "required": [
          "payment"
        ],
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/AdminPayment"
          }
        }
      },
      "AdminPostCancelClaimReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostCancelClaimReqSchema",
        "properties": {
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The claim's no notification."
          }
        }
      },
      "AdminPostCancelExchangeReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostCancelExchangeReqSchema",
        "properties": {
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The exchange's no notification."
          }
        }
      },
      "AdminPostCancelReturnReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostCancelReturnReqSchema",
        "properties": {
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          }
        }
      },
      "AdminPostClaimItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostClaimItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The claim's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "id",
                "quantity"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The item's ID."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "reason": {
                  "type": "string",
                  "description": "The item's reason.",
                  "enum": [
                    "missing_item",
                    "wrong_item",
                    "production_failure",
                    "other"
                  ]
                },
                "description": {
                  "type": "string",
                  "title": "description",
                  "description": "The item's description."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                }
              }
            }
          }
        }
      },
      "AdminPostClaimsAddItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostClaimsAddItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The claim's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "variant_id",
                "quantity"
              ],
              "properties": {
                "variant_id": {
                  "type": "string",
                  "title": "variant_id",
                  "description": "The item's variant id."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "unit_price": {
                  "type": "number",
                  "title": "unit_price",
                  "description": "The item's unit price."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                },
                "metadata": {
                  "type": "object",
                  "description": "The item's metadata."
                }
              }
            }
          }
        }
      },
      "AdminPostClaimsItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostClaimsItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The claim's quantity."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The claim's reason id."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The claim's internal note."
          }
        }
      },
      "AdminPostClaimsShippingActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostClaimsShippingActionReqSchema",
        "properties": {
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The claim's custom amount."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The claim's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The claim's metadata."
          }
        }
      },
      "AdminPostClaimsShippingReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostClaimsShippingReqSchema",
        "required": [
          "shipping_option_id"
        ],
        "properties": {
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The claim's shipping option id."
          },
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The claim's custom amount."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The claim's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The claim's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The claim's metadata."
          }
        }
      },
      "AdminPostExchangesAddItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesAddItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The exchange's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "variant_id",
                "quantity"
              ],
              "properties": {
                "variant_id": {
                  "type": "string",
                  "title": "variant_id",
                  "description": "The item's variant id."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "unit_price": {
                  "type": "number",
                  "title": "unit_price",
                  "description": "The item's unit price."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                },
                "allow_backorder": {
                  "type": "boolean",
                  "title": "allow_backorder",
                  "description": "The item's allow backorder."
                },
                "metadata": {
                  "type": "object",
                  "description": "The item's metadata."
                }
              }
            }
          }
        }
      },
      "AdminPostExchangesItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The exchange's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          }
        }
      },
      "AdminPostExchangesRequestItemsReturnActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesRequestItemsReturnActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The exchange's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The exchange's reason id."
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          }
        }
      },
      "AdminPostExchangesReturnRequestItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesReturnRequestItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The exchange's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "id",
                "quantity"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The item's ID."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "description": {
                  "type": "string",
                  "title": "description",
                  "description": "The item's description."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                },
                "reason_id": {
                  "type": "string",
                  "title": "reason_id",
                  "description": "The item's reason id."
                },
                "metadata": {
                  "type": "object",
                  "description": "The item's metadata."
                }
              }
            }
          }
        }
      },
      "AdminPostExchangesShippingActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesShippingActionReqSchema",
        "properties": {
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The exchange's custom amount."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          }
        }
      },
      "AdminPostExchangesShippingReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostExchangesShippingReqSchema",
        "required": [
          "shipping_option_id"
        ],
        "properties": {
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The exchange's shipping option id."
          },
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The exchange's custom amount."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The exchange's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          }
        }
      },
      "AdminPostOrderClaimsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderClaimsReqSchema",
        "required": [
          "type",
          "order_id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The claim's type.",
            "enum": [
              "refund",
              "replace"
            ]
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The claim's order id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The claim's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The claim's internal note."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The claim's reason id."
          },
          "metadata": {
            "type": "object",
            "description": "The claim's metadata."
          }
        }
      },
      "AdminPostOrderEditsAddItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsAddItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The order edit's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "variant_id",
                "quantity"
              ],
              "properties": {
                "variant_id": {
                  "type": "string",
                  "title": "variant_id",
                  "description": "The item's variant id."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "unit_price": {
                  "type": "number",
                  "title": "unit_price",
                  "description": "The item's unit price."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                },
                "allow_backorder": {
                  "type": "boolean",
                  "title": "allow_backorder",
                  "description": "The item's allow backorder."
                },
                "metadata": {
                  "type": "object",
                  "description": "The item's metadata."
                }
              }
            }
          }
        }
      },
      "AdminPostOrderEditsItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The order edit's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The order edit's internal note."
          }
        }
      },
      "AdminPostOrderEditsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsReqSchema",
        "required": [
          "order_id"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The order edit's order id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The order edit's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The order edit's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The order edit's metadata."
          }
        }
      },
      "AdminPostOrderEditsShippingActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsShippingActionReqSchema",
        "properties": {
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The order edit's custom amount."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The order edit's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The order edit's metadata."
          }
        }
      },
      "AdminPostOrderEditsShippingReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsShippingReqSchema",
        "required": [
          "shipping_option_id"
        ],
        "properties": {
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The order edit's shipping option id."
          },
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The order edit's custom amount."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The order edit's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The order edit's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The order edit's metadata."
          }
        }
      },
      "AdminPostOrderEditsUpdateItemQuantityReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderEditsUpdateItemQuantityReqSchema",
        "required": [
          "quantity"
        ],
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The order edit's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The order edit's internal note."
          }
        }
      },
      "AdminPostOrderExchangesReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostOrderExchangesReqSchema",
        "required": [
          "order_id"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The exchange's order id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The exchange's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          }
        }
      },
      "AdminPostReceiveReturnsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReceiveReturnsReqSchema",
        "properties": {
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The return's internal note."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return's description."
          },
          "metadata": {
            "type": "object",
            "description": "The return's metadata."
          }
        }
      },
      "AdminPostReturnsConfirmRequestReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsConfirmRequestReqSchema",
        "properties": {
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          }
        }
      },
      "AdminPostReturnsDismissItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsDismissItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The return's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The return's internal note."
          }
        }
      },
      "AdminPostReturnsReceiveItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsReceiveItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The return's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The return's internal note."
          }
        }
      },
      "AdminPostReturnsReceiveItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsReceiveItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The return's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "id",
                "quantity"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The item's ID."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "description": {
                  "type": "string",
                  "title": "description",
                  "description": "The item's description."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                }
              }
            }
          }
        }
      },
      "AdminPostReturnsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsReqSchema",
        "required": [
          "order_id"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The return's order id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The return's location id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The return's internal note."
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          },
          "metadata": {
            "type": "object",
            "description": "The return's metadata."
          }
        }
      },
      "AdminPostReturnsRequestItemsActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsRequestItemsActionReqSchema",
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The claim's quantity."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The claim's internal note."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The claim's reason id."
          },
          "metadata": {
            "type": "object",
            "description": "The claim's metadata."
          }
        }
      },
      "AdminPostReturnsRequestItemsReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsRequestItemsReqSchema",
        "properties": {
          "items": {
            "type": "array",
            "description": "The claim's items.",
            "items": {
              "type": "object",
              "description": "The item's items.",
              "required": [
                "id",
                "quantity"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The item's ID."
                },
                "quantity": {
                  "type": "number",
                  "title": "quantity",
                  "description": "The item's quantity."
                },
                "description": {
                  "type": "string",
                  "title": "description",
                  "description": "The item's description."
                },
                "internal_note": {
                  "type": "string",
                  "title": "internal_note",
                  "description": "The item's internal note."
                },
                "reason_id": {
                  "type": "string",
                  "title": "reason_id",
                  "description": "The item's reason id."
                },
                "metadata": {
                  "type": "object",
                  "description": "The item's metadata."
                }
              }
            }
          }
        }
      },
      "AdminPostReturnsReturnReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsReturnReqSchema",
        "properties": {
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The return's location id."
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          },
          "metadata": {
            "type": "object",
            "description": "The return's metadata."
          }
        }
      },
      "AdminPostReturnsShippingActionReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsShippingActionReqSchema",
        "properties": {
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The return's custom amount."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The return's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The return's metadata."
          }
        }
      },
      "AdminPostReturnsShippingReqSchema": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPostReturnsShippingReqSchema",
        "required": [
          "shipping_option_id"
        ],
        "properties": {
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The exchange's shipping option id."
          },
          "custom_amount": {
            "type": "number",
            "title": "custom_amount",
            "description": "The exchange's custom amount."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The exchange's description."
          },
          "internal_note": {
            "type": "string",
            "title": "internal_note",
            "description": "The exchange's internal note."
          },
          "metadata": {
            "type": "object",
            "description": "The exchange's metadata."
          }
        }
      },
      "AdminPrice": {
        "type": "object",
        "description": "The price's prices.",
        "x-schemaName": "AdminPrice",
        "required": [
          "id",
          "title",
          "currency_code",
          "amount",
          "raw_amount",
          "min_quantity",
          "max_quantity",
          "price_set_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The price's title."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The price's currency code."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The price's amount."
          },
          "raw_amount": {
            "type": "object",
            "description": "The price's raw amount."
          },
          "min_quantity": {
            "type": "number",
            "title": "min_quantity",
            "description": "The price's min quantity."
          },
          "max_quantity": {
            "type": "number",
            "title": "max_quantity",
            "description": "The price's max quantity."
          },
          "price_set_id": {
            "type": "string",
            "title": "price_set_id",
            "description": "The price's price set id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The price's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The price's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The price's deleted at."
          }
        }
      },
      "AdminPriceList": {
        "type": "object",
        "description": "The price list's details.",
        "x-schemaName": "AdminPriceList",
        "required": [
          "id",
          "title",
          "description",
          "rules",
          "starts_at",
          "ends_at",
          "status",
          "type",
          "prices",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price list's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The price list's title."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The price list's description."
          },
          "rules": {
            "type": "object",
            "description": "The price list's rules."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The price list's starts at."
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The price list's ends at."
          },
          "status": {
            "type": "string",
            "description": "The price list's status.",
            "enum": [
              "draft",
              "active"
            ]
          },
          "type": {
            "type": "string",
            "description": "The price list's type.",
            "enum": [
              "sale",
              "override"
            ]
          },
          "prices": {
            "type": "array",
            "description": "The price list's prices.",
            "items": {
              "$ref": "#/components/schemas/AdminPriceListPrice"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The price list's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The price list's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The price list's deleted at."
          }
        }
      },
      "AdminPriceListBatchResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPriceListBatchResponse",
        "required": [
          "created",
          "updated",
          "deleted"
        ],
        "properties": {
          "created": {
            "type": "array",
            "description": "The price list's created.",
            "items": {
              "$ref": "#/components/schemas/AdminPrice"
            }
          },
          "updated": {
            "type": "array",
            "description": "The price list's updated.",
            "items": {
              "$ref": "#/components/schemas/AdminPrice"
            }
          },
          "deleted": {
            "type": "object",
            "description": "SUMMARY",
            "required": [
              "ids",
              "object",
              "deleted"
            ],
            "properties": {
              "ids": {
                "type": "array",
                "description": "The deleted's ids.",
                "items": {
                  "type": "string",
                  "title": "ids",
                  "description": "The id's ids."
                }
              },
              "object": {
                "type": "string",
                "title": "object",
                "description": "SUMMARY"
              },
              "deleted": {
                "type": "boolean",
                "title": "deleted",
                "description": "SUMMARY"
              }
            }
          }
        }
      },
      "AdminPriceListDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPriceListDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price list's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "price_list"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Price List was deleted."
          }
        }
      },
      "AdminPriceListListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPriceListListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "price_lists"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The price list's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The price list's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The price list's count."
          },
          "price_lists": {
            "type": "array",
            "description": "The price list's price lists.",
            "items": {
              "$ref": "#/components/schemas/AdminPriceList"
            }
          }
        }
      },
      "AdminPriceListPrice": {
        "type": "object",
        "description": "The price's prices.",
        "x-schemaName": "AdminPriceListPrice",
        "required": [
          "variant_id",
          "rules",
          "id",
          "title",
          "currency_code",
          "amount",
          "raw_amount",
          "min_quantity",
          "max_quantity",
          "price_set_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The price's variant id."
          },
          "rules": {
            "type": "object",
            "description": "The price's rules."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The price's title."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The price's currency code."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The price's amount."
          },
          "raw_amount": {
            "type": "object",
            "description": "The price's raw amount."
          },
          "min_quantity": {
            "type": "number",
            "title": "min_quantity",
            "description": "The price's min quantity."
          },
          "max_quantity": {
            "type": "number",
            "title": "max_quantity",
            "description": "The price's max quantity."
          },
          "price_set_id": {
            "type": "string",
            "title": "price_set_id",
            "description": "The price's price set id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The price's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The price's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The price's deleted at."
          }
        }
      },
      "AdminPriceListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPriceListResponse",
        "required": [
          "price_list"
        ],
        "properties": {
          "price_list": {
            "$ref": "#/components/schemas/AdminPriceList"
          }
        }
      },
      "AdminPricePreference": {
        "type": "object",
        "description": "The price preference's details.",
        "x-schemaName": "AdminPricePreference",
        "required": [
          "id",
          "attribute",
          "value",
          "is_tax_inclusive",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price preference's ID."
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The price preference's attribute."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The price preference's value."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The price preference's is tax inclusive."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The price preference's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The price preference's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The price preference's deleted at."
          }
        }
      },
      "AdminPricePreferenceDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPricePreferenceDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The price preference's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "price_preference"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Price Preference was deleted."
          }
        }
      },
      "AdminPricePreferenceListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPricePreferenceListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "price_preferences"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The price preference's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The price preference's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The price preference's count."
          },
          "price_preferences": {
            "type": "array",
            "description": "The price preference's price preferences.",
            "items": {
              "$ref": "#/components/schemas/AdminPricePreference"
            }
          }
        }
      },
      "AdminPricePreferenceResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPricePreferenceResponse",
        "required": [
          "price_preference"
        ],
        "properties": {
          "price_preference": {
            "$ref": "#/components/schemas/AdminPricePreference"
          }
        }
      },
      "AdminProduct": {
        "type": "object",
        "description": "The product's parent.",
        "x-schemaName": "AdminProduct",
        "required": [
          "type",
          "length",
          "title",
          "status",
          "options",
          "description",
          "id",
          "created_at",
          "updated_at",
          "handle",
          "subtitle",
          "is_giftcard",
          "thumbnail",
          "width",
          "weight",
          "height",
          "origin_country",
          "hs_code",
          "mid_code",
          "material",
          "collection_id",
          "type_id",
          "images",
          "discountable",
          "external_id",
          "deleted_at"
        ],
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/AdminCollection"
          },
          "categories": {
            "type": "array",
            "description": "The parent's categories.",
            "items": {
              "$ref": "#/components/schemas/AdminProductCategory"
            }
          },
          "sales_channels": {
            "type": "array",
            "description": "The parent's sales channels.",
            "items": {
              "$ref": "#/components/schemas/AdminSalesChannel"
            }
          },
          "variants": {
            "type": "array",
            "description": "The parent's variants.",
            "items": {
              "$ref": "#/components/schemas/AdminProductVariant"
            }
          },
          "type": {
            "$ref": "#/components/schemas/AdminProductType"
          },
          "tags": {
            "type": "array",
            "description": "The parent's tags.",
            "items": {
              "$ref": "#/components/schemas/AdminProductTag"
            }
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The parent's length."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The parent's title."
          },
          "status": {
            "type": "string",
            "description": "The parent's status.",
            "enum": [
              "draft",
              "proposed",
              "published",
              "rejected"
            ]
          },
          "options": {
            "type": "array",
            "description": "The parent's options.",
            "items": {
              "$ref": "#/components/schemas/BaseProductOption"
            }
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The parent's description."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "metadata": {
            "type": "object",
            "description": "The parent's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The parent's handle."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The parent's subtitle."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The parent's is giftcard."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The parent's thumbnail."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The parent's width."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The parent's weight."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The parent's height."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The parent's origin country."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The parent's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The parent's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The parent's material."
          },
          "collection_id": {
            "type": "string",
            "title": "collection_id",
            "description": "The parent's collection id."
          },
          "type_id": {
            "type": "string",
            "title": "type_id",
            "description": "The parent's type id."
          },
          "images": {
            "type": "array",
            "description": "The parent's images.",
            "items": {
              "$ref": "#/components/schemas/BaseProductImage"
            }
          },
          "discountable": {
            "type": "boolean",
            "title": "discountable",
            "description": "The parent's discountable."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The parent's external id."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The parent's deleted at."
          }
        }
      },
      "AdminProductCategory": {
        "type": "object",
        "description": "The category's categories.",
        "x-schemaName": "AdminProductCategory",
        "required": [
          "category_children",
          "parent_category",
          "name",
          "description",
          "id",
          "created_at",
          "updated_at",
          "handle",
          "deleted_at",
          "is_active",
          "is_internal",
          "rank",
          "parent_category_id"
        ],
        "properties": {
          "category_children": {
            "type": "array",
            "description": "The category's category children.",
            "items": {
              "type": "object"
            }
          },
          "parent_category": {
            "type": "object"
          },
          "products": {
            "type": "array",
            "description": "The category's products.",
            "items": {
              "type": "object"
            }
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The category's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The category's description."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The category's ID."
          },
          "metadata": {
            "type": "object",
            "description": "The category's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The category's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The category's updated at."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The category's handle."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The category's deleted at."
          },
          "is_active": {
            "type": "boolean",
            "title": "is_active",
            "description": "The category's is active."
          },
          "is_internal": {
            "type": "boolean",
            "title": "is_internal",
            "description": "The category's is internal."
          },
          "rank": {
            "type": "number",
            "title": "rank",
            "description": "The category's rank."
          },
          "parent_category_id": {
            "type": "string",
            "title": "parent_category_id",
            "description": "The category's parent category id."
          }
        }
      },
      "AdminProductCategoryDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductCategoryDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product category's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "product_category"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product Category was deleted."
          }
        }
      },
      "AdminProductCategoryListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductCategoryListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "product_categories"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The product category's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The product category's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The product category's count."
          },
          "product_categories": {
            "type": "array",
            "description": "The product category's product categories.",
            "items": {
              "$ref": "#/components/schemas/AdminProductCategory"
            }
          }
        }
      },
      "AdminProductCategoryResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductCategoryResponse",
        "required": [
          "product_category"
        ],
        "properties": {
          "product_category": {
            "$ref": "#/components/schemas/AdminProductCategory"
          }
        }
      },
      "AdminProductDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "product"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product was deleted."
          }
        }
      },
      "AdminProductOption": {
        "type": "object",
        "description": "The product's product option.",
        "x-schemaName": "AdminProductOption",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product option's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The product option's title."
          },
          "product": {
            "$ref": "#/components/schemas/BaseProduct"
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The product option's product id."
          },
          "values": {
            "type": "array",
            "description": "The product option's values.",
            "items": {
              "$ref": "#/components/schemas/BaseProductOptionValue"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The product option's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The product option's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The product option's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The product option's deleted at."
          }
        }
      },
      "AdminProductOptionDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductOptionDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object."
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product was deleted."
          },
          "parent": {
            "$ref": "#/components/schemas/AdminProduct"
          }
        }
      },
      "AdminProductOptionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductOptionResponse",
        "required": [
          "product_option"
        ],
        "properties": {
          "product_option": {
            "$ref": "#/components/schemas/AdminProductOption"
          }
        }
      },
      "AdminProductResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductResponse",
        "required": [
          "product"
        ],
        "properties": {
          "product": {
            "$ref": "#/components/schemas/AdminProduct"
          }
        }
      },
      "AdminProductTag": {
        "type": "object",
        "description": "The tag's tags.",
        "x-schemaName": "AdminProductTag",
        "required": [
          "id",
          "value",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The tag's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The tag's value."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The tag's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The tag's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The tag's deleted at."
          },
          "metadata": {
            "type": "object",
            "description": "The tag's metadata."
          }
        }
      },
      "AdminProductTagDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTagDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product tag's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "product_tag"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product Tag was deleted."
          }
        }
      },
      "AdminProductTagListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTagListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "product_tags"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The product tag's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The product tag's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The product tag's count."
          },
          "product_tags": {
            "type": "array",
            "description": "The product tag's product tags.",
            "items": {
              "$ref": "#/components/schemas/AdminProductTag"
            }
          }
        }
      },
      "AdminProductTagResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTagResponse",
        "required": [
          "product_tag"
        ],
        "properties": {
          "product_tag": {
            "$ref": "#/components/schemas/AdminProductTag"
          }
        }
      },
      "AdminProductType": {
        "type": "object",
        "description": "The parent's type.",
        "x-schemaName": "AdminProductType",
        "required": [
          "id",
          "value",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The type's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The type's value."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The type's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The type's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The type's deleted at."
          },
          "metadata": {
            "type": "object",
            "description": "The type's metadata."
          }
        }
      },
      "AdminProductTypeDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTypeDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product type's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "product_type"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product Type was deleted."
          }
        }
      },
      "AdminProductTypeListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTypeListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "product_types"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The product type's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The product type's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The product type's count."
          },
          "product_types": {
            "type": "array",
            "description": "The product type's product types.",
            "items": {
              "$ref": "#/components/schemas/AdminProductType"
            }
          }
        }
      },
      "AdminProductTypeResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductTypeResponse",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "$ref": "#/components/schemas/AdminProductType"
          }
        }
      },
      "AdminProductVariant": {
        "type": "object",
        "description": "The product's parent.",
        "x-schemaName": "AdminProductVariant",
        "required": [
          "prices",
          "id",
          "title",
          "sku",
          "barcode",
          "ean",
          "upc",
          "allow_backorder",
          "manage_inventory",
          "hs_code",
          "origin_country",
          "mid_code",
          "material",
          "weight",
          "length",
          "height",
          "width",
          "options",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "prices": {
            "type": "array",
            "description": "The parent's prices.",
            "items": {
              "$ref": "#/components/schemas/AdminPrice"
            }
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The parent's title."
          },
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The parent's sku."
          },
          "barcode": {
            "type": "string",
            "title": "barcode",
            "description": "The parent's barcode."
          },
          "ean": {
            "type": "string",
            "title": "ean",
            "description": "The parent's ean."
          },
          "upc": {
            "type": "string",
            "title": "upc",
            "description": "The parent's upc."
          },
          "allow_backorder": {
            "type": "boolean",
            "title": "allow_backorder",
            "description": "The parent's allow backorder."
          },
          "manage_inventory": {
            "type": "boolean",
            "title": "manage_inventory",
            "description": "The parent's manage inventory."
          },
          "inventory_quantity": {
            "type": "number",
            "title": "inventory_quantity",
            "description": "The parent's inventory quantity."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The parent's hs code."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The parent's origin country."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The parent's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The parent's material."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The parent's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The parent's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The parent's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The parent's width."
          },
          "variant_rank": {
            "type": "number",
            "title": "variant_rank",
            "description": "The parent's variant rank."
          },
          "options": {
            "type": "array",
            "description": "The parent's options.",
            "items": {
              "$ref": "#/components/schemas/BaseProductOptionValue"
            }
          },
          "product": {
            "$ref": "#/components/schemas/BaseProduct"
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The parent's product id."
          },
          "calculated_price": {
            "$ref": "#/components/schemas/BaseCalculatedPriceSet"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The parent's deleted at."
          },
          "metadata": {
            "type": "object",
            "description": "The parent's metadata."
          }
        }
      },
      "AdminProductVariantDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductVariantDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object."
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product was deleted."
          },
          "parent": {
            "$ref": "#/components/schemas/AdminProduct"
          }
        }
      },
      "AdminProductVariantInventoryBatchResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductVariantInventoryBatchResponse",
        "required": [
          "created",
          "updated",
          "deleted"
        ],
        "properties": {
          "created": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdminProductVariantInventoryLink"
              },
              {
                "type": "array",
                "description": "The product's created.",
                "items": {
                  "type": "object",
                  "description": "The created's details.",
                  "x-schemaName": "AdminProductVariantInventoryLink",
                  "required": [
                    "productService",
                    "inventoryService"
                  ],
                  "properties": {
                    "productService": {
                      "type": "object",
                      "description": "The created's productservice.",
                      "required": [
                        "variant_id"
                      ],
                      "properties": {
                        "variant_id": {
                          "type": "string",
                          "title": "variant_id",
                          "description": "The productservice's variant id."
                        }
                      }
                    },
                    "inventoryService": {
                      "type": "object",
                      "description": "The created's inventoryservice.",
                      "required": [
                        "inventory_item_id"
                      ],
                      "properties": {
                        "inventory_item_id": {
                          "type": "string",
                          "title": "inventory_item_id",
                          "description": "The inventoryservice's inventory item id."
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "updated": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdminProductVariantInventoryLink"
              },
              {
                "type": "array",
                "description": "The product's updated.",
                "items": {
                  "type": "object",
                  "description": "The updated's details.",
                  "x-schemaName": "AdminProductVariantInventoryLink",
                  "required": [
                    "productService",
                    "inventoryService"
                  ],
                  "properties": {
                    "productService": {
                      "type": "object",
                      "description": "The updated's productservice.",
                      "required": [
                        "variant_id"
                      ],
                      "properties": {
                        "variant_id": {
                          "type": "string",
                          "title": "variant_id",
                          "description": "The productservice's variant id."
                        }
                      }
                    },
                    "inventoryService": {
                      "type": "object",
                      "description": "The updated's inventoryservice.",
                      "required": [
                        "inventory_item_id"
                      ],
                      "properties": {
                        "inventory_item_id": {
                          "type": "string",
                          "title": "inventory_item_id",
                          "description": "The inventoryservice's inventory item id."
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdminProductVariantInventoryLink"
              },
              {
                "type": "array",
                "description": "SUMMARY",
                "items": {
                  "type": "object",
                  "description": "SUMMARY",
                  "x-schemaName": "AdminProductVariantInventoryLink",
                  "required": [
                    "productService",
                    "inventoryService"
                  ],
                  "properties": {
                    "productService": {
                      "type": "object",
                      "description": "The deleted's productservice.",
                      "required": [
                        "variant_id"
                      ],
                      "properties": {
                        "variant_id": {
                          "type": "string",
                          "title": "variant_id",
                          "description": "The productservice's variant id."
                        }
                      }
                    },
                    "inventoryService": {
                      "type": "object",
                      "description": "The deleted's inventoryservice.",
                      "required": [
                        "inventory_item_id"
                      ],
                      "properties": {
                        "inventory_item_id": {
                          "type": "string",
                          "title": "inventory_item_id",
                          "description": "The inventoryservice's inventory item id."
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "AdminProductVariantInventoryLink": {
        "type": "object",
        "description": "The product's ID.",
        "x-schemaName": "AdminProductVariantInventoryLink",
        "required": [
          "productService",
          "inventoryService"
        ],
        "properties": {
          "productService": {
            "type": "object",
            "description": "The id's productservice.",
            "required": [
              "variant_id"
            ],
            "properties": {
              "variant_id": {
                "type": "string",
                "title": "variant_id",
                "description": "The productservice's variant id."
              }
            }
          },
          "inventoryService": {
            "type": "object",
            "description": "The id's inventoryservice.",
            "required": [
              "inventory_item_id"
            ],
            "properties": {
              "inventory_item_id": {
                "type": "string",
                "title": "inventory_item_id",
                "description": "The inventoryservice's inventory item id."
              }
            }
          }
        }
      },
      "AdminProductVariantInventoryLinkDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductVariantInventoryLinkDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted",
          "parent"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/AdminProductVariantInventoryLink"
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object."
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Product was deleted."
          },
          "parent": {
            "$ref": "#/components/schemas/AdminProductVariant"
          }
        }
      },
      "AdminProductVariantParams": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductVariantParams",
        "properties": {
          "q": {
            "type": "string",
            "title": "q",
            "description": "The product's q."
          },
          "id": {
            "oneOf": [
              {
                "type": "string",
                "title": "id",
                "description": "The product's ID."
              },
              {
                "type": "array",
                "description": "The product's ID.",
                "items": {
                  "type": "string",
                  "title": "id",
                  "description": "The id's ID."
                }
              }
            ]
          },
          "manage_inventory": {
            "type": "boolean",
            "title": "manage_inventory",
            "description": "The product's manage inventory."
          },
          "allow_backorder": {
            "type": "boolean",
            "title": "allow_backorder",
            "description": "The product's allow backorder."
          },
          "created_at": {
            "type": "object",
            "description": "The product's created at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "properties": {
                      "$and": {
                        "type": "array",
                        "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$and"
                      },
                      "$or": {
                        "type": "array",
                        "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$or"
                      },
                      "$eq": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$eq",
                            "description": "Filter by an exact match."
                          },
                          {
                            "type": "array",
                            "description": "Filter by an exact match.",
                            "items": {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            }
                          }
                        ]
                      },
                      "$ne": {
                        "type": "string",
                        "title": "$ne",
                        "description": "Filter by values not equal to this parameter."
                      },
                      "$in": {
                        "type": "array",
                        "description": "Filter by values in this array.",
                        "items": {
                          "type": "string",
                          "title": "$in",
                          "description": "Filter by values in this array."
                        }
                      },
                      "$nin": {
                        "type": "array",
                        "description": "Filter by values not in this array.",
                        "items": {
                          "type": "string",
                          "title": "$nin",
                          "description": "Filter by values not in this array."
                        }
                      },
                      "$not": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$not",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "object",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "array",
                            "description": "Filter by values not matching the conditions in this parameter.",
                            "items": {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            }
                          }
                        ]
                      },
                      "$gt": {
                        "type": "string",
                        "title": "$gt",
                        "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                      },
                      "$gte": {
                        "type": "string",
                        "title": "$gte",
                        "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$lt": {
                        "type": "string",
                        "title": "$lt",
                        "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                      },
                      "$lte": {
                        "type": "string",
                        "title": "$lte",
                        "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$like": {
                        "type": "string",
                        "title": "$like",
                        "description": "Apply a `like` filter. Useful for strings only."
                      },
                      "$re": {
                        "type": "string",
                        "title": "$re",
                        "description": "Apply a regex filter. Useful for strings only."
                      },
                      "$ilike": {
                        "type": "string",
                        "title": "$ilike",
                        "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                      },
                      "$fulltext": {
                        "type": "string",
                        "title": "$fulltext",
                        "description": "Filter to apply on full-text properties."
                      },
                      "$overlap": {
                        "type": "array",
                        "description": "Filter arrays that have overlapping values with this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$overlap",
                          "description": "Filter arrays that have overlapping values with this parameter."
                        }
                      },
                      "$contains": {
                        "type": "array",
                        "description": "Filter arrays that contain some of the values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contains",
                          "description": "Filter arrays that contain some of the values of this parameter."
                        }
                      },
                      "$contained": {
                        "type": "array",
                        "description": "Filter arrays that contain all values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contained",
                          "description": "Filter arrays that contain all values of this parameter."
                        }
                      },
                      "$exists": {
                        "type": "boolean",
                        "title": "$exists",
                        "description": "Filter by whether a value for this parameter exists (not `null`)."
                      }
                    }
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "updated_at": {
            "type": "object",
            "description": "The product's updated at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "properties": {
                      "$and": {
                        "type": "array",
                        "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$and"
                      },
                      "$or": {
                        "type": "array",
                        "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$or"
                      },
                      "$eq": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$eq",
                            "description": "Filter by an exact match."
                          },
                          {
                            "type": "array",
                            "description": "Filter by an exact match.",
                            "items": {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            }
                          }
                        ]
                      },
                      "$ne": {
                        "type": "string",
                        "title": "$ne",
                        "description": "Filter by values not equal to this parameter."
                      },
                      "$in": {
                        "type": "array",
                        "description": "Filter by values in this array.",
                        "items": {
                          "type": "string",
                          "title": "$in",
                          "description": "Filter by values in this array."
                        }
                      },
                      "$nin": {
                        "type": "array",
                        "description": "Filter by values not in this array.",
                        "items": {
                          "type": "string",
                          "title": "$nin",
                          "description": "Filter by values not in this array."
                        }
                      },
                      "$not": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$not",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "object",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "array",
                            "description": "Filter by values not matching the conditions in this parameter.",
                            "items": {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            }
                          }
                        ]
                      },
                      "$gt": {
                        "type": "string",
                        "title": "$gt",
                        "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                      },
                      "$gte": {
                        "type": "string",
                        "title": "$gte",
                        "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$lt": {
                        "type": "string",
                        "title": "$lt",
                        "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                      },
                      "$lte": {
                        "type": "string",
                        "title": "$lte",
                        "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$like": {
                        "type": "string",
                        "title": "$like",
                        "description": "Apply a `like` filter. Useful for strings only."
                      },
                      "$re": {
                        "type": "string",
                        "title": "$re",
                        "description": "Apply a regex filter. Useful for strings only."
                      },
                      "$ilike": {
                        "type": "string",
                        "title": "$ilike",
                        "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                      },
                      "$fulltext": {
                        "type": "string",
                        "title": "$fulltext",
                        "description": "Filter to apply on full-text properties."
                      },
                      "$overlap": {
                        "type": "array",
                        "description": "Filter arrays that have overlapping values with this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$overlap",
                          "description": "Filter arrays that have overlapping values with this parameter."
                        }
                      },
                      "$contains": {
                        "type": "array",
                        "description": "Filter arrays that contain some of the values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contains",
                          "description": "Filter arrays that contain some of the values of this parameter."
                        }
                      },
                      "$contained": {
                        "type": "array",
                        "description": "Filter arrays that contain all values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contained",
                          "description": "Filter arrays that contain all values of this parameter."
                        }
                      },
                      "$exists": {
                        "type": "boolean",
                        "title": "$exists",
                        "description": "Filter by whether a value for this parameter exists (not `null`)."
                      }
                    }
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "deleted_at": {
            "type": "object",
            "description": "The product's deleted at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "properties": {
                      "$and": {
                        "type": "array",
                        "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$and"
                      },
                      "$or": {
                        "type": "array",
                        "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                        "items": {
                          "type": "object"
                        },
                        "title": "$or"
                      },
                      "$eq": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$eq",
                            "description": "Filter by an exact match."
                          },
                          {
                            "type": "array",
                            "description": "Filter by an exact match.",
                            "items": {
                              "type": "string",
                              "title": "$eq",
                              "description": "Filter by an exact match."
                            }
                          }
                        ]
                      },
                      "$ne": {
                        "type": "string",
                        "title": "$ne",
                        "description": "Filter by values not equal to this parameter."
                      },
                      "$in": {
                        "type": "array",
                        "description": "Filter by values in this array.",
                        "items": {
                          "type": "string",
                          "title": "$in",
                          "description": "Filter by values in this array."
                        }
                      },
                      "$nin": {
                        "type": "array",
                        "description": "Filter by values not in this array.",
                        "items": {
                          "type": "string",
                          "title": "$nin",
                          "description": "Filter by values not in this array."
                        }
                      },
                      "$not": {
                        "oneOf": [
                          {
                            "type": "string",
                            "title": "$not",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "object",
                            "description": "Filter by values not matching the conditions in this parameter."
                          },
                          {
                            "type": "array",
                            "description": "Filter by values not matching the conditions in this parameter.",
                            "items": {
                              "type": "string",
                              "title": "$not",
                              "description": "Filter by values not matching the conditions in this parameter."
                            }
                          }
                        ]
                      },
                      "$gt": {
                        "type": "string",
                        "title": "$gt",
                        "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
                      },
                      "$gte": {
                        "type": "string",
                        "title": "$gte",
                        "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$lt": {
                        "type": "string",
                        "title": "$lt",
                        "description": "Filter by values less than this parameter. Useful for numbers and dates only."
                      },
                      "$lte": {
                        "type": "string",
                        "title": "$lte",
                        "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
                      },
                      "$like": {
                        "type": "string",
                        "title": "$like",
                        "description": "Apply a `like` filter. Useful for strings only."
                      },
                      "$re": {
                        "type": "string",
                        "title": "$re",
                        "description": "Apply a regex filter. Useful for strings only."
                      },
                      "$ilike": {
                        "type": "string",
                        "title": "$ilike",
                        "description": "Apply a case-insensitive `like` filter. Useful for strings only."
                      },
                      "$fulltext": {
                        "type": "string",
                        "title": "$fulltext",
                        "description": "Filter to apply on full-text properties."
                      },
                      "$overlap": {
                        "type": "array",
                        "description": "Filter arrays that have overlapping values with this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$overlap",
                          "description": "Filter arrays that have overlapping values with this parameter."
                        }
                      },
                      "$contains": {
                        "type": "array",
                        "description": "Filter arrays that contain some of the values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contains",
                          "description": "Filter arrays that contain some of the values of this parameter."
                        }
                      },
                      "$contained": {
                        "type": "array",
                        "description": "Filter arrays that contain all values of this parameter.",
                        "items": {
                          "type": "string",
                          "title": "$contained",
                          "description": "Filter arrays that contain all values of this parameter."
                        }
                      },
                      "$exists": {
                        "type": "boolean",
                        "title": "$exists",
                        "description": "Filter by whether a value for this parameter exists (not `null`)."
                      }
                    }
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The product's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The product's offset."
          },
          "order": {
            "type": "string",
            "title": "order",
            "description": "The product's order."
          },
          "fields": {
            "type": "string",
            "title": "fields",
            "description": "The product's fields."
          },
          "$and": {
            "type": "array",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "items": {
              "type": "object"
            },
            "title": "$and"
          },
          "$or": {
            "type": "array",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "items": {
              "type": "object"
            },
            "title": "$or"
          }
        }
      },
      "AdminProductVariantResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminProductVariantResponse",
        "required": [
          "variant"
        ],
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/AdminProductVariant"
          }
        }
      },
      "AdminPromotion": {
        "type": "object",
        "description": "The promotion's details.",
        "x-schemaName": "AdminPromotion",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The promotion's ID."
          },
          "code": {
            "type": "string",
            "title": "code",
            "description": "The promotion's code."
          },
          "type": {
            "type": "string",
            "description": "The promotion's type.",
            "enum": [
              "standard",
              "buyget"
            ]
          },
          "is_automatic": {
            "type": "boolean",
            "title": "is_automatic",
            "description": "The promotion's is automatic."
          },
          "application_method": {
            "$ref": "#/components/schemas/BaseApplicationMethod"
          },
          "rules": {
            "type": "array",
            "description": "The promotion's rules.",
            "items": {
              "$ref": "#/components/schemas/BasePromotionRule"
            }
          },
          "campaign_id": {
            "type": "string",
            "title": "campaign_id",
            "description": "The promotion's campaign id."
          },
          "campaign": {
            "$ref": "#/components/schemas/AdminCampaign"
          }
        }
      },
      "AdminPromotionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminPromotionResponse",
        "required": [
          "promotion"
        ],
        "properties": {
          "promotion": {
            "$ref": "#/components/schemas/AdminPromotion"
          }
        }
      },
      "AdminPromotionRule": {
        "type": "object",
        "description": "The updated's details.",
        "x-schemaName": "AdminPromotionRule",
        "required": [
          "id",
          "values"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The updated's ID."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The updated's description."
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The updated's attribute."
          },
          "operator": {
            "type": "string",
            "description": "The updated's operator.",
            "enum": [
              "gt",
              "lt",
              "eq",
              "ne",
              "in",
              "lte",
              "gte"
            ]
          },
          "values": {
            "type": "array",
            "description": "The updated's values.",
            "items": {
              "$ref": "#/components/schemas/BasePromotionRuleValue"
            }
          }
        }
      },
      "AdminRefundReason": {
        "type": "object",
        "description": "The refund reason's details.",
        "x-schemaName": "AdminRefundReason",
        "required": [
          "id",
          "label",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The refund reason's ID."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The refund reason's label."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The refund reason's description."
          },
          "metadata": {
            "type": "object",
            "description": "The refund reason's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The refund reason's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The refund reason's updated at."
          }
        }
      },
      "AdminRegion": {
        "type": "object",
        "description": "The region's details.",
        "x-schemaName": "AdminRegion",
        "required": [
          "id",
          "name",
          "currency_code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The region's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The region's name."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The region's currency code."
          },
          "automatic_taxes": {
            "type": "boolean",
            "title": "automatic_taxes",
            "description": "The region's automatic taxes."
          },
          "countries": {
            "type": "array",
            "description": "The region's countries.",
            "items": {
              "$ref": "#/components/schemas/BaseRegionCountry"
            }
          },
          "payment_providers": {
            "type": "array",
            "description": "The region's payment providers.",
            "items": {
              "$ref": "#/components/schemas/AdminPaymentProvider"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The region's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The region's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The region's updated at."
          }
        }
      },
      "AdminRegionCountry": {
        "type": "object",
        "description": "The billing address's country.",
        "x-schemaName": "AdminRegionCountry"
      },
      "AdminRegionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminRegionResponse",
        "required": [
          "region"
        ],
        "properties": {
          "region": {
            "$ref": "#/components/schemas/AdminRegion"
          }
        }
      },
      "AdminReservation": {
        "type": "object",
        "description": "The reservation's details.",
        "x-schemaName": "AdminReservation",
        "required": [
          "id",
          "line_item_id",
          "location_id",
          "quantity",
          "external_id",
          "description",
          "inventory_item_id",
          "inventory_item"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The reservation's ID."
          },
          "line_item_id": {
            "type": "string",
            "title": "line_item_id",
            "description": "The reservation's line item id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The reservation's location id."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The reservation's quantity."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The reservation's external id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The reservation's description."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The reservation's inventory item id."
          },
          "inventory_item": {
            "type": "object",
            "description": "The reservation's inventory item."
          },
          "metadata": {
            "type": "object",
            "description": "The reservation's metadata."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The reservation's created by."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The reservation's deleted at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The reservation's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The reservation's updated at."
          }
        }
      },
      "AdminReservationResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReservationResponse",
        "required": [
          "reservation"
        ],
        "properties": {
          "reservation": {
            "$ref": "#/components/schemas/AdminReservation"
          }
        }
      },
      "AdminReturn": {
        "type": "object",
        "description": "The exchange's return.",
        "x-schemaName": "AdminReturn",
        "required": [
          "id",
          "order_id",
          "order_version",
          "display_id",
          "items",
          "received_at",
          "created_at",
          "canceled_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The return's order id."
          },
          "status": {
            "type": "string",
            "title": "status",
            "description": "The return's status."
          },
          "exchange_id": {
            "type": "string",
            "title": "exchange_id",
            "description": "The return's exchange id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The return's location id."
          },
          "claim_id": {
            "type": "string",
            "title": "claim_id",
            "description": "The return's claim id."
          },
          "order_version": {
            "type": "number",
            "title": "order_version",
            "description": "The return's order version."
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The return's display id."
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          },
          "refund_amount": {
            "type": "number",
            "title": "refund_amount",
            "description": "The return's refund amount."
          },
          "items": {
            "type": "array",
            "description": "The return's items.",
            "items": {
              "$ref": "#/components/schemas/BaseReturnItem"
            }
          },
          "received_at": {
            "type": "string",
            "title": "received_at",
            "description": "The return's received at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The return's created at."
          },
          "canceled_at": {
            "type": "string",
            "title": "canceled_at",
            "description": "The return's canceled at."
          }
        }
      },
      "AdminReturnItem": {
        "type": "object",
        "description": "The return item's return items.",
        "x-schemaName": "AdminReturnItem",
        "required": [
          "id",
          "quantity",
          "received_quantity",
          "damaged_quantity",
          "item_id",
          "return_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return item's ID."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The return item's quantity."
          },
          "received_quantity": {
            "type": "number",
            "title": "received_quantity",
            "description": "The return item's received quantity."
          },
          "damaged_quantity": {
            "type": "number",
            "title": "damaged_quantity",
            "description": "The return item's damaged quantity."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The return item's reason id."
          },
          "note": {
            "type": "string",
            "title": "note",
            "description": "The return item's note."
          },
          "item_id": {
            "type": "string",
            "title": "item_id",
            "description": "The return item's item id."
          },
          "return_id": {
            "type": "string",
            "title": "return_id",
            "description": "The return item's return id."
          },
          "metadata": {
            "type": "object",
            "description": "The return item's metadata."
          }
        }
      },
      "AdminReturnPreviewResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReturnPreviewResponse",
        "required": [
          "order_preview",
          "return"
        ],
        "properties": {
          "order_preview": {
            "$ref": "#/components/schemas/AdminOrderPreview"
          },
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          }
        }
      },
      "AdminReturnReason": {
        "type": "object",
        "description": "The return reason's details.",
        "x-schemaName": "AdminReturnReason",
        "required": [
          "id",
          "value",
          "label",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return reason's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The return reason's value."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The return reason's label."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return reason's description."
          },
          "metadata": {
            "type": "object",
            "description": "The return reason's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The return reason's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The return reason's updated at."
          }
        }
      },
      "AdminReturnReasonDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReturnReasonDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return reason's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "return_reason"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Return Reason was deleted."
          }
        }
      },
      "AdminReturnReasonListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReturnReasonListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "return_reasons"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The return reason's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The return reason's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The return reason's count."
          },
          "return_reasons": {
            "type": "array",
            "description": "The return reason's return reasons.",
            "items": {
              "$ref": "#/components/schemas/AdminReturnReason"
            }
          }
        }
      },
      "AdminReturnReasonResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReturnReasonResponse",
        "required": [
          "return_reason"
        ],
        "properties": {
          "return_reason": {
            "$ref": "#/components/schemas/AdminReturnReason"
          }
        }
      },
      "AdminReturnResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminReturnResponse",
        "required": [
          "return"
        ],
        "properties": {
          "return": {
            "$ref": "#/components/schemas/AdminReturn"
          }
        }
      },
      "AdminRevokeApiKey": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminRevokeApiKey",
        "properties": {
          "revoke_in": {
            "type": "number",
            "title": "revoke_in",
            "description": "The api key's revoke in."
          }
        }
      },
      "AdminRuleAttributeOption": {
        "type": "object",
        "description": "The attribute's attributes.",
        "x-schemaName": "AdminRuleAttributeOption",
        "required": [
          "id",
          "value",
          "label",
          "field_type",
          "required",
          "disguised",
          "operators"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The attribute's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The attribute's value."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The attribute's label."
          },
          "field_type": {
            "type": "string",
            "title": "field_type",
            "description": "The attribute's field type."
          },
          "required": {
            "type": "boolean",
            "title": "required",
            "description": "The attribute's required."
          },
          "disguised": {
            "type": "boolean",
            "title": "disguised",
            "description": "The attribute's disguised."
          },
          "operators": {
            "type": "array",
            "description": "The attribute's operators.",
            "items": {
              "$ref": "#/components/schemas/BaseRuleOperatorOptions"
            }
          }
        }
      },
      "AdminRuleValueOption": {
        "type": "object",
        "description": "The value's values.",
        "x-schemaName": "AdminRuleValueOption",
        "required": [
          "id",
          "value",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The value's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The value's details."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The value's label."
          }
        }
      },
      "AdminSalesChannel": {
        "type": "object",
        "description": "The order's sales channel.",
        "x-schemaName": "AdminSalesChannel",
        "required": [
          "id",
          "name",
          "description",
          "is_disabled",
          "metadata",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The sales channel's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The sales channel's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The sales channel's description."
          },
          "is_disabled": {
            "type": "boolean",
            "title": "is_disabled",
            "description": "The sales channel's is disabled."
          },
          "metadata": {
            "type": "object",
            "description": "The sales channel's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The sales channel's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The sales channel's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The sales channel's deleted at."
          }
        }
      },
      "AdminSalesChannelDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminSalesChannelDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The sales channel's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "sales-channel"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Sales Channel was deleted."
          }
        }
      },
      "AdminSalesChannelResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminSalesChannelResponse",
        "required": [
          "sales_channel"
        ],
        "properties": {
          "sales_channel": {
            "$ref": "#/components/schemas/AdminSalesChannel"
          }
        }
      },
      "AdminServiceZone": {
        "type": "object",
        "description": "The service zone's service zones.",
        "x-schemaName": "AdminServiceZone",
        "required": [
          "id",
          "name",
          "fulfillment_set_id",
          "fulfillment_set",
          "geo_zones",
          "shipping_options",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The service zone's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The service zone's name."
          },
          "fulfillment_set_id": {
            "type": "string",
            "title": "fulfillment_set_id",
            "description": "The service zone's fulfillment set id."
          },
          "fulfillment_set": {
            "type": "object"
          },
          "geo_zones": {
            "type": "array",
            "description": "The service zone's geo zones.",
            "items": {
              "$ref": "#/components/schemas/AdminGeoZone"
            }
          },
          "shipping_options": {
            "type": "array",
            "description": "The service zone's shipping options.",
            "items": {
              "$ref": "#/components/schemas/AdminShippingOption"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The service zone's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The service zone's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The service zone's deleted at."
          }
        }
      },
      "AdminServiceZoneDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminServiceZoneDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The fulfillment set's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object."
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Fulfillment Set was deleted."
          },
          "parent": {
            "$ref": "#/components/schemas/AdminFulfillmentSet"
          }
        }
      },
      "AdminServiceZoneResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminServiceZoneResponse",
        "required": [
          "service_zone"
        ],
        "properties": {
          "service_zone": {
            "$ref": "#/components/schemas/AdminServiceZone"
          }
        }
      },
      "AdminShippingOption": {
        "type": "object",
        "description": "The shipping option's shipping options.",
        "x-schemaName": "AdminShippingOption"
      },
      "AdminShippingOptionDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminShippingOptionDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping option's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "shipping_option"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Shipping Option was deleted."
          }
        }
      },
      "AdminShippingOptionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminShippingOptionResponse",
        "required": [
          "shipping_option"
        ],
        "properties": {
          "shipping_option": {
            "$ref": "#/components/schemas/AdminShippingOption"
          }
        }
      },
      "AdminShippingOptionRule": {
        "type": "object",
        "description": "The updated's details.",
        "x-schemaName": "AdminShippingOptionRule",
        "required": [
          "id",
          "attribute",
          "operator",
          "value",
          "shipping_option_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The updated's ID."
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The updated's attribute."
          },
          "operator": {
            "type": "string",
            "title": "operator",
            "description": "The updated's operator."
          },
          "value": {
            "oneOf": [
              {
                "type": "string",
                "title": "value",
                "description": "The updated's value."
              },
              {
                "type": "array",
                "description": "The updated's value.",
                "items": {
                  "type": "string",
                  "title": "value",
                  "description": "The value's details."
                }
              }
            ]
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The updated's shipping option id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The updated's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The updated's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The updated's deleted at."
          }
        }
      },
      "AdminShippingProfile": {
        "type": "object",
        "description": "The shipping option's shipping profile.",
        "x-schemaName": "AdminShippingProfile"
      },
      "AdminShippingProfileDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminShippingProfileDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping profile's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "shipping_profile"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Shipping Profile was deleted."
          }
        }
      },
      "AdminShippingProfileResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminShippingProfileResponse",
        "required": [
          "shipping_profile"
        ],
        "properties": {
          "shipping_profile": {
            "$ref": "#/components/schemas/AdminShippingProfile"
          }
        }
      },
      "AdminStockLocation": {
        "type": "object",
        "description": "The parent's location.",
        "x-schemaName": "AdminStockLocation",
        "required": [
          "id",
          "name",
          "address_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The location's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The location's name."
          },
          "address_id": {
            "type": "string",
            "title": "address_id",
            "description": "The location's address id."
          },
          "address": {
            "$ref": "#/components/schemas/AdminStockLocationAddress"
          },
          "sales_channels": {
            "type": "array",
            "description": "The location's sales channels.",
            "items": {
              "$ref": "#/components/schemas/AdminSalesChannel"
            }
          },
          "fulfillment_providers": {
            "type": "array",
            "description": "The location's fulfillment providers.",
            "items": {
              "$ref": "#/components/schemas/AdminFulfillmentProvider"
            }
          },
          "fulfillment_sets": {
            "type": "array",
            "description": "The location's fulfillment sets.",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "AdminStockLocationAddress": {
        "type": "object",
        "description": "The location's address.",
        "x-schemaName": "AdminStockLocationAddress"
      },
      "AdminStockLocationDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminStockLocationDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The stock location's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "stock_location"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Stock Location was deleted."
          }
        }
      },
      "AdminStockLocationListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminStockLocationListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "stock_locations"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The stock location's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The stock location's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The stock location's count."
          },
          "stock_locations": {
            "type": "array",
            "description": "The stock location's stock locations.",
            "items": {
              "$ref": "#/components/schemas/AdminStockLocation"
            }
          }
        }
      },
      "AdminStockLocationResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminStockLocationResponse",
        "required": [
          "stock_location"
        ],
        "properties": {
          "stock_location": {
            "$ref": "#/components/schemas/AdminStockLocation"
          }
        }
      },
      "AdminStore": {
        "type": "object",
        "description": "The store's details.",
        "x-schemaName": "AdminStore",
        "required": [
          "id",
          "name",
          "supported_currencies",
          "default_sales_channel_id",
          "default_region_id",
          "default_location_id",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The store's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The store's name."
          },
          "supported_currencies": {
            "type": "array",
            "description": "The store's supported currencies.",
            "items": {
              "$ref": "#/components/schemas/AdminStoreCurrency"
            }
          },
          "default_sales_channel_id": {
            "type": "string",
            "title": "default_sales_channel_id",
            "description": "The store's default sales channel id."
          },
          "default_region_id": {
            "type": "string",
            "title": "default_region_id",
            "description": "The store's default region id."
          },
          "default_location_id": {
            "type": "string",
            "title": "default_location_id",
            "description": "The store's default location id."
          },
          "metadata": {
            "type": "object",
            "description": "The store's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The store's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The store's updated at."
          }
        }
      },
      "AdminStoreCurrency": {
        "type": "object",
        "description": "The supported currency's supported currencies.",
        "x-schemaName": "AdminStoreCurrency",
        "required": [
          "id",
          "currency_code",
          "store_id",
          "is_default",
          "currency",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The supported currency's ID."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The supported currency's currency code."
          },
          "store_id": {
            "type": "string",
            "title": "store_id",
            "description": "The supported currency's store id."
          },
          "is_default": {
            "type": "boolean",
            "title": "is_default",
            "description": "The supported currency's is default."
          },
          "currency": {
            "$ref": "#/components/schemas/AdminCurrency"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The supported currency's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The supported currency's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The supported currency's deleted at."
          }
        }
      },
      "AdminStoreListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminStoreListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "stores"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The store's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The store's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The store's count."
          },
          "stores": {
            "type": "array",
            "description": "The store's stores.",
            "items": {
              "$ref": "#/components/schemas/AdminStore"
            }
          }
        }
      },
      "AdminStoreResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminStoreResponse",
        "required": [
          "store"
        ],
        "properties": {
          "store": {
            "$ref": "#/components/schemas/AdminStore"
          }
        }
      },
      "AdminTaxRate": {
        "type": "object",
        "description": "The tax rate's parent.",
        "x-schemaName": "AdminTaxRate",
        "required": [
          "id",
          "rate",
          "code",
          "name",
          "metadata",
          "tax_region_id",
          "is_combinable",
          "is_default",
          "created_at",
          "updated_at",
          "deleted_at",
          "created_by",
          "tax_region",
          "rules"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "rate": {
            "type": "number",
            "title": "rate",
            "description": "The parent's rate."
          },
          "code": {
            "type": "string",
            "title": "code",
            "description": "The parent's code."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The parent's name."
          },
          "metadata": {
            "type": "object",
            "description": "The parent's metadata."
          },
          "tax_region_id": {
            "type": "string",
            "title": "tax_region_id",
            "description": "The parent's tax region id."
          },
          "is_combinable": {
            "type": "boolean",
            "title": "is_combinable",
            "description": "The parent's is combinable."
          },
          "is_default": {
            "type": "boolean",
            "title": "is_default",
            "description": "The parent's is default."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The parent's deleted at."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The parent's created by."
          },
          "tax_region": {
            "$ref": "#/components/schemas/AdminTaxRegion"
          },
          "rules": {
            "type": "array",
            "description": "The parent's rules.",
            "items": {
              "$ref": "#/components/schemas/AdminTaxRateRule"
            }
          }
        }
      },
      "AdminTaxRateDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminTaxRateDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The tax rate's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "tax_rate"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Tax Rate was deleted."
          }
        }
      },
      "AdminTaxRateResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminTaxRateResponse",
        "required": [
          "tax_rate"
        ],
        "properties": {
          "tax_rate": {
            "$ref": "#/components/schemas/AdminTaxRate"
          }
        }
      },
      "AdminTaxRateRule": {
        "type": "object",
        "description": "The rule's rules.",
        "x-schemaName": "AdminTaxRateRule",
        "required": [
          "reference",
          "reference_id"
        ],
        "properties": {
          "reference": {
            "type": "string",
            "title": "reference",
            "description": "The rule's reference."
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id",
            "description": "The rule's reference id."
          }
        }
      },
      "AdminTaxRegion": {
        "type": "object",
        "description": "The parent's tax region.",
        "x-schemaName": "AdminTaxRegion",
        "required": [
          "id",
          "rate",
          "code",
          "country_code",
          "province_code",
          "name",
          "metadata",
          "tax_region_id",
          "is_combinable",
          "is_default",
          "parent_id",
          "created_at",
          "updated_at",
          "deleted_at",
          "created_by",
          "tax_rates",
          "parent",
          "children"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The tax region's ID."
          },
          "rate": {
            "type": "number",
            "title": "rate",
            "description": "The tax region's rate."
          },
          "code": {
            "type": "string",
            "title": "code",
            "description": "The tax region's code."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The tax region's country code."
          },
          "province_code": {
            "type": "string",
            "title": "province_code",
            "description": "The tax region's province code."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The tax region's name."
          },
          "metadata": {
            "type": "object",
            "description": "The tax region's metadata."
          },
          "tax_region_id": {
            "type": "string",
            "title": "tax_region_id",
            "description": "The tax region's tax region id."
          },
          "is_combinable": {
            "type": "boolean",
            "title": "is_combinable",
            "description": "The tax region's is combinable."
          },
          "is_default": {
            "type": "boolean",
            "title": "is_default",
            "description": "The tax region's is default."
          },
          "parent_id": {
            "type": "string",
            "title": "parent_id",
            "description": "The tax region's parent id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The tax region's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The tax region's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The tax region's deleted at."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The tax region's created by."
          },
          "tax_rates": {
            "type": "array",
            "description": "The tax region's tax rates.",
            "items": {
              "type": "object"
            }
          },
          "parent": {
            "type": "object"
          },
          "children": {
            "type": "array",
            "description": "The tax region's children.",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "AdminTaxRegionDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminTaxRegionDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The tax region's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "tax_region"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the Tax Region was deleted."
          }
        }
      },
      "AdminTaxRegionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminTaxRegionResponse",
        "required": [
          "tax_region"
        ],
        "properties": {
          "tax_region": {
            "$ref": "#/components/schemas/AdminTaxRegion"
          }
        }
      },
      "AdminUpdateApiKey": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateApiKey",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The api key's title."
          }
        }
      },
      "AdminUpdateCollection": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateCollection",
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The collection's title."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The collection's handle."
          },
          "metadata": {
            "type": "object",
            "description": "The collection's metadata."
          }
        }
      },
      "AdminUpdateCustomerGroup": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateCustomerGroup",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The customer group's name."
          },
          "metadata": {
            "type": "object",
            "description": "The customer group's metadata."
          }
        }
      },
      "AdminUpdatePriceList": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdatePriceList",
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The price list's title."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The price list's description."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The price list's starts at."
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The price list's ends at."
          },
          "status": {
            "type": "string",
            "description": "The price list's status.",
            "enum": [
              "active",
              "draft"
            ]
          },
          "type": {
            "type": "string",
            "description": "The price list's type.",
            "enum": [
              "sale",
              "override"
            ]
          },
          "rules": {
            "type": "object",
            "description": "The price list's rules."
          }
        }
      },
      "AdminUpdatePricePreference": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdatePricePreference",
        "properties": {
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The price preference's attribute."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The price preference's value."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The price preference's is tax inclusive."
          }
        }
      },
      "AdminUpdateProduct": {
        "type": "object",
        "description": "The update's details.",
        "x-schemaName": "AdminUpdateProduct",
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The update's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The update's subtitle."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The update's description."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The update's is giftcard."
          },
          "discountable": {
            "type": "boolean",
            "title": "discountable",
            "description": "The update's discountable."
          },
          "images": {
            "type": "array",
            "description": "The update's images.",
            "items": {
              "type": "object",
              "description": "The image's images.",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "title": "url",
                  "description": "The image's url."
                }
              }
            }
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The update's thumbnail."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The update's handle."
          },
          "status": {
            "type": "string",
            "description": "The update's status.",
            "enum": [
              "draft",
              "proposed",
              "published",
              "rejected"
            ]
          },
          "type_id": {
            "type": "string",
            "title": "type_id",
            "description": "The update's type id."
          },
          "collection_id": {
            "type": "string",
            "title": "collection_id",
            "description": "The update's collection id."
          },
          "categories": {
            "type": "array",
            "description": "The update's categories.",
            "items": {
              "type": "object",
              "description": "The category's categories.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The category's ID."
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "description": "The update's tags.",
            "items": {
              "type": "object",
              "description": "The tag's tags.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The tag's ID."
                }
              }
            }
          },
          "options": {
            "type": "array",
            "description": "The update's options.",
            "items": {
              "$ref": "#/components/schemas/AdminUpdateProductOption"
            }
          },
          "variants": {
            "type": "array",
            "description": "The update's variants.",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The variant's variants.",
                  "x-schemaName": "AdminCreateProductVariant",
                  "required": [
                    "title",
                    "prices"
                  ],
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "title",
                      "description": "The variant's title."
                    },
                    "sku": {
                      "type": "string",
                      "title": "sku",
                      "description": "The variant's sku."
                    },
                    "ean": {
                      "type": "string",
                      "title": "ean",
                      "description": "The variant's ean."
                    },
                    "upc": {
                      "type": "string",
                      "title": "upc",
                      "description": "The variant's upc."
                    },
                    "barcode": {
                      "type": "string",
                      "title": "barcode",
                      "description": "The variant's barcode."
                    },
                    "hs_code": {
                      "type": "string",
                      "title": "hs_code",
                      "description": "The variant's hs code."
                    },
                    "mid_code": {
                      "type": "string",
                      "title": "mid_code",
                      "description": "The variant's mid code."
                    },
                    "allow_backorder": {
                      "type": "boolean",
                      "title": "allow_backorder",
                      "description": "The variant's allow backorder."
                    },
                    "manage_inventory": {
                      "type": "boolean",
                      "title": "manage_inventory",
                      "description": "The variant's manage inventory."
                    },
                    "variant_rank": {
                      "type": "number",
                      "title": "variant_rank",
                      "description": "The variant's variant rank."
                    },
                    "weight": {
                      "type": "number",
                      "title": "weight",
                      "description": "The variant's weight."
                    },
                    "length": {
                      "type": "number",
                      "title": "length",
                      "description": "The variant's length."
                    },
                    "height": {
                      "type": "number",
                      "title": "height",
                      "description": "The variant's height."
                    },
                    "width": {
                      "type": "number",
                      "title": "width",
                      "description": "The variant's width."
                    },
                    "origin_country": {
                      "type": "string",
                      "title": "origin_country",
                      "description": "The variant's origin country."
                    },
                    "material": {
                      "type": "string",
                      "title": "material",
                      "description": "The variant's material."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The variant's metadata."
                    },
                    "prices": {
                      "type": "array",
                      "description": "The variant's prices.",
                      "items": {
                        "$ref": "#/components/schemas/AdminCreateProductVariantPrice"
                      }
                    },
                    "options": {
                      "type": "object",
                      "description": "The variant's options."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The variant's variants.",
                  "x-schemaName": "AdminUpdateProductVariant",
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "title",
                      "description": "The variant's title."
                    },
                    "sku": {
                      "type": "string",
                      "title": "sku",
                      "description": "The variant's sku."
                    },
                    "ean": {
                      "type": "string",
                      "title": "ean",
                      "description": "The variant's ean."
                    },
                    "upc": {
                      "type": "string",
                      "title": "upc",
                      "description": "The variant's upc."
                    },
                    "barcode": {
                      "type": "string",
                      "title": "barcode",
                      "description": "The variant's barcode."
                    },
                    "hs_code": {
                      "type": "string",
                      "title": "hs_code",
                      "description": "The variant's hs code."
                    },
                    "mid_code": {
                      "type": "string",
                      "title": "mid_code",
                      "description": "The variant's mid code."
                    },
                    "allow_backorder": {
                      "type": "boolean",
                      "title": "allow_backorder",
                      "description": "The variant's allow backorder."
                    },
                    "manage_inventory": {
                      "type": "boolean",
                      "title": "manage_inventory",
                      "description": "The variant's manage inventory."
                    },
                    "variant_rank": {
                      "type": "number",
                      "title": "variant_rank",
                      "description": "The variant's variant rank."
                    },
                    "weight": {
                      "type": "number",
                      "title": "weight",
                      "description": "The variant's weight."
                    },
                    "length": {
                      "type": "number",
                      "title": "length",
                      "description": "The variant's length."
                    },
                    "height": {
                      "type": "number",
                      "title": "height",
                      "description": "The variant's height."
                    },
                    "width": {
                      "type": "number",
                      "title": "width",
                      "description": "The variant's width."
                    },
                    "origin_country": {
                      "type": "string",
                      "title": "origin_country",
                      "description": "The variant's origin country."
                    },
                    "material": {
                      "type": "string",
                      "title": "material",
                      "description": "The variant's material."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The variant's metadata."
                    },
                    "prices": {
                      "type": "array",
                      "description": "The variant's prices.",
                      "items": {
                        "$ref": "#/components/schemas/AdminCreateProductVariantPrice"
                      }
                    },
                    "options": {
                      "type": "object",
                      "description": "The variant's options."
                    }
                  }
                }
              ]
            }
          },
          "sales_channels": {
            "type": "array",
            "description": "The update's sales channels.",
            "items": {
              "type": "object",
              "description": "The sales channel's sales channels.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "id",
                  "description": "The sales channel's ID."
                }
              }
            }
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The update's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The update's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The update's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The update's width."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The update's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The update's mid code."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The update's origin country."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The update's material."
          },
          "metadata": {
            "type": "object",
            "description": "The update's metadata."
          }
        }
      },
      "AdminUpdateProductOption": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateProductOption",
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The product's title."
          },
          "values": {
            "type": "array",
            "description": "The product's values.",
            "items": {
              "type": "string",
              "title": "values",
              "description": "The value's values."
            }
          }
        }
      },
      "AdminUpdateProductVariant": {
        "type": "object",
        "description": "The update's details.",
        "x-schemaName": "AdminUpdateProductVariant",
        "properties": {
          "title": {
            "type": "string",
            "title": "title",
            "description": "The update's title."
          },
          "sku": {
            "type": "string",
            "title": "sku",
            "description": "The update's sku."
          },
          "ean": {
            "type": "string",
            "title": "ean",
            "description": "The update's ean."
          },
          "upc": {
            "type": "string",
            "title": "upc",
            "description": "The update's upc."
          },
          "barcode": {
            "type": "string",
            "title": "barcode",
            "description": "The update's barcode."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The update's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The update's mid code."
          },
          "allow_backorder": {
            "type": "boolean",
            "title": "allow_backorder",
            "description": "The update's allow backorder."
          },
          "manage_inventory": {
            "type": "boolean",
            "title": "manage_inventory",
            "description": "The update's manage inventory."
          },
          "variant_rank": {
            "type": "number",
            "title": "variant_rank",
            "description": "The update's variant rank."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The update's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The update's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The update's height."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The update's width."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The update's origin country."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The update's material."
          },
          "metadata": {
            "type": "object",
            "description": "The update's metadata."
          },
          "prices": {
            "type": "array",
            "description": "The update's prices.",
            "items": {
              "$ref": "#/components/schemas/AdminCreateProductVariantPrice"
            }
          },
          "options": {
            "type": "object",
            "description": "The update's options."
          }
        }
      },
      "AdminUpdateSalesChannel": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateSalesChannel",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The sales channel's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The sales channel's description."
          },
          "is_disabled": {
            "type": "boolean",
            "title": "is_disabled",
            "description": "The sales channel's is disabled."
          },
          "metadata": {
            "type": "object",
            "description": "The sales channel's metadata."
          }
        }
      },
      "AdminUpdateStockLocation": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateStockLocation",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The stock location's name."
          },
          "address": {
            "type": "object",
            "description": "The stock location's address.",
            "required": [
              "address_1",
              "country_code"
            ],
            "properties": {
              "address_1": {
                "type": "string",
                "title": "address_1",
                "description": "The address's address 1."
              },
              "address_2": {
                "type": "string",
                "title": "address_2",
                "description": "The address's address 2."
              },
              "company": {
                "type": "string",
                "title": "company",
                "description": "The address's company."
              },
              "city": {
                "type": "string",
                "title": "city",
                "description": "The address's city."
              },
              "country_code": {
                "type": "string",
                "title": "country_code",
                "description": "The address's country code."
              },
              "phone": {
                "type": "string",
                "title": "phone",
                "description": "The address's phone."
              },
              "postal_code": {
                "type": "string",
                "title": "postal_code",
                "description": "The address's postal code."
              },
              "province": {
                "type": "string",
                "title": "province",
                "description": "The address's province."
              }
            }
          },
          "address_id": {
            "type": "string",
            "title": "address_id",
            "description": "The stock location's address id."
          },
          "metadata": {
            "type": "object",
            "description": "The stock location's metadata."
          }
        }
      },
      "AdminUpdateStore": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateStore",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The store's name."
          },
          "supported_currencies": {
            "type": "array",
            "description": "The store's supported currencies.",
            "items": {
              "type": "object",
              "description": "The supported currency's supported currencies.",
              "required": [
                "currency_code"
              ],
              "properties": {
                "currency_code": {
                  "type": "string",
                  "title": "currency_code",
                  "description": "The supported currency's currency code."
                },
                "is_default": {
                  "type": "boolean",
                  "title": "is_default",
                  "description": "The supported currency's is default."
                },
                "is_tax_inclusive": {
                  "type": "boolean",
                  "title": "is_tax_inclusive",
                  "description": "The supported currency's is tax inclusive."
                }
              }
            }
          },
          "default_sales_channel_id": {
            "type": "string",
            "title": "default_sales_channel_id",
            "description": "The store's default sales channel id."
          },
          "default_region_id": {
            "type": "string",
            "title": "default_region_id",
            "description": "The store's default region id."
          },
          "default_location_id": {
            "type": "string",
            "title": "default_location_id",
            "description": "The store's default location id."
          },
          "metadata": {
            "type": "object",
            "description": "The store's metadata."
          }
        }
      },
      "AdminUpdateTaxRate": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateTaxRate",
        "properties": {
          "rate": {
            "type": "number",
            "title": "rate",
            "description": "The tax rate's rate."
          },
          "code": {
            "type": "string",
            "title": "code",
            "description": "The tax rate's code."
          },
          "rules": {
            "type": "array",
            "description": "The tax rate's rules.",
            "items": {
              "type": "object",
              "description": "The rule's rules.",
              "required": [
                "reference",
                "reference_id"
              ],
              "properties": {
                "reference": {
                  "type": "string",
                  "title": "reference",
                  "description": "The rule's reference."
                },
                "reference_id": {
                  "type": "string",
                  "title": "reference_id",
                  "description": "The rule's reference id."
                }
              }
            }
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The tax rate's name."
          },
          "is_default": {
            "type": "boolean",
            "title": "is_default",
            "description": "The tax rate's is default."
          },
          "is_combinable": {
            "type": "boolean",
            "title": "is_combinable",
            "description": "The tax rate's is combinable."
          },
          "metadata": {
            "type": "object",
            "description": "The tax rate's metadata."
          }
        }
      },
      "AdminUpdateUser": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateUser",
        "properties": {
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The user's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The user's last name."
          },
          "avatar_url": {
            "type": "string",
            "title": "avatar_url",
            "description": "The user's avatar url."
          }
        }
      },
      "AdminUpdateVariantInventoryItem": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUpdateVariantInventoryItem",
        "required": [
          "required_quantity"
        ],
        "properties": {
          "required_quantity": {
            "type": "number",
            "title": "required_quantity",
            "description": "The product's required quantity."
          }
        }
      },
      "AdminUpsertStockLocationAddress": {
        "type": "object",
        "description": "The stock location's address.",
        "x-schemaName": "AdminUpsertStockLocationAddress",
        "required": [
          "address_1",
          "country_code"
        ],
        "properties": {
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The address's address 2."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The address's company."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The address's country code."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The address's city."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The address's phone."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The address's postal code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The address's province."
          }
        }
      },
      "AdminUser": {
        "type": "object",
        "description": "The user's details.",
        "x-schemaName": "AdminUser",
        "required": [
          "id",
          "email",
          "first_name",
          "last_name",
          "avatar_url",
          "metadata",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The user's ID."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The user's email.",
            "format": "email"
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The user's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The user's last name."
          },
          "avatar_url": {
            "type": "string",
            "title": "avatar_url",
            "description": "The user's avatar url."
          },
          "metadata": {
            "type": "object",
            "description": "The user's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The user's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The user's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The user's deleted at."
          }
        }
      },
      "AdminUserDeleteResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUserDeleteResponse",
        "required": [
          "id",
          "object",
          "deleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The user's ID."
          },
          "object": {
            "type": "string",
            "title": "object",
            "description": "The name of the deleted object.",
            "default": "user"
          },
          "deleted": {
            "type": "boolean",
            "title": "deleted",
            "description": "Whether the User was deleted."
          }
        }
      },
      "AdminUserListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUserListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "users"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The user's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The user's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The user's count."
          },
          "users": {
            "type": "array",
            "description": "The user's users.",
            "items": {
              "$ref": "#/components/schemas/AdminUser"
            }
          }
        }
      },
      "AdminUserResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminUserResponse",
        "required": [
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AdminUser"
          }
        }
      },
      "AdminWorkflowExecution": {
        "type": "object",
        "description": "The workflows execution's workflow execution.",
        "x-schemaName": "AdminWorkflowExecution",
        "required": [
          "id",
          "workflow_id",
          "transaction_id",
          "execution",
          "context",
          "state",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The workflow execution's ID."
          },
          "workflow_id": {
            "type": "string",
            "title": "workflow_id",
            "description": "The workflow execution's workflow id."
          },
          "transaction_id": {
            "type": "string",
            "title": "transaction_id",
            "description": "The workflow execution's transaction id."
          },
          "execution": {
            "$ref": "#/components/schemas/AdminWorkflowExecutionExecution"
          },
          "context": {
            "$ref": "#/components/schemas/WorkflowExecutionContext"
          },
          "state": {
            "type": "string",
            "description": "The workflow execution's state.",
            "enum": [
              "not_started",
              "invoking",
              "waiting_to_compensate",
              "compensating",
              "done",
              "reverted",
              "failed"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The workflow execution's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The workflow execution's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The workflow execution's deleted at."
          }
        }
      },
      "AdminWorkflowExecutionExecution": {
        "type": "object",
        "description": "The workflow execution's execution.",
        "x-schemaName": "AdminWorkflowExecutionExecution",
        "required": [
          "steps"
        ],
        "properties": {
          "steps": {
            "type": "object",
            "description": "The execution's steps."
          }
        }
      },
      "AdminWorkflowExecutionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "AdminWorkflowExecutionResponse",
        "required": [
          "workflow_execution"
        ],
        "properties": {
          "workflow_execution": {
            "$ref": "#/components/schemas/AdminWorkflowExecution"
          }
        }
      },
      "ApiKeyResponse": {
        "type": "object",
        "description": "The api key's details.",
        "x-schemaName": "ApiKeyResponse",
        "required": [
          "id",
          "token",
          "redacted",
          "title",
          "type",
          "last_used_at",
          "created_by",
          "created_at",
          "revoked_by",
          "revoked_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The api key's ID."
          },
          "token": {
            "type": "string",
            "title": "token",
            "description": "The api key's token."
          },
          "redacted": {
            "type": "string",
            "title": "redacted",
            "description": "The api key's redacted."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The api key's title."
          },
          "type": {
            "type": "string",
            "enum": [
              "secret",
              "publishable"
            ]
          },
          "last_used_at": {
            "type": "string",
            "title": "last_used_at",
            "description": "The api key's last used at.",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The api key's created by."
          },
          "created_at": {
            "type": "string",
            "title": "created_at",
            "description": "The api key's created at.",
            "format": "date-time"
          },
          "revoked_by": {
            "type": "string",
            "title": "revoked_by",
            "description": "The api key's revoked by."
          },
          "revoked_at": {
            "type": "string",
            "title": "revoked_at",
            "description": "The api key's revoked at.",
            "format": "date-time"
          }
        }
      },
      "AuthAdminSessionResponse": {
        "type": "object",
        "description": "The authenticated user's details.",
        "x-schemaName": "AuthAdminSessionResponse",
        "required": [
          "user"
        ],
        "properties": {
          "user": {
            "title": "user",
            "description": "The logged-in user.",
            "$ref": "#/components/schemas/AdminUser"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "description": "The authentication's details.",
        "x-schemaName": "AuthResponse",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "title": "token",
            "description": "The JWT token used for registration or authentication."
          }
        }
      },
      "AuthStoreSessionResponse": {
        "type": "object",
        "description": "The authenticated customer's details.",
        "x-schemaName": "AuthStoreSessionResponse",
        "required": [
          "user"
        ],
        "properties": {
          "user": {
            "title": "user",
            "description": "The logged-in customer.",
            "$ref": "#/components/schemas/StoreCustomer"
          }
        }
      },
      "BaseApplicationMethod": {
        "type": "object",
        "description": "The promotion's application method.",
        "x-schemaName": "BaseApplicationMethod",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The application method's ID."
          },
          "type": {
            "type": "string",
            "description": "The application method's type.",
            "enum": [
              "fixed",
              "percentage"
            ]
          },
          "target_type": {
            "type": "string",
            "description": "The application method's target type.",
            "enum": [
              "items",
              "shipping_methods",
              "order"
            ]
          },
          "allocation": {
            "type": "string",
            "description": "The application method's allocation.",
            "enum": [
              "each",
              "across"
            ]
          },
          "value": {
            "type": "number",
            "title": "value",
            "description": "The application method's value."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The application method's currency code."
          },
          "max_quantity": {
            "type": "number",
            "title": "max_quantity",
            "description": "The application method's max quantity."
          },
          "buy_rules_min_quantity": {
            "type": "number",
            "title": "buy_rules_min_quantity",
            "description": "The application method's buy rules min quantity."
          },
          "apply_to_quantity": {
            "type": "number",
            "title": "apply_to_quantity",
            "description": "The application method's apply to quantity."
          },
          "promotion": {
            "$ref": "#/components/schemas/BasePromotion"
          },
          "target_rules": {
            "type": "array",
            "description": "The application method's target rules.",
            "items": {
              "$ref": "#/components/schemas/BasePromotionRule"
            }
          },
          "buy_rules": {
            "type": "array",
            "description": "The application method's buy rules.",
            "items": {
              "$ref": "#/components/schemas/BasePromotionRule"
            }
          }
        }
      },
      "BaseCalculatedPriceSet": {
        "type": "object",
        "description": "The parent's calculated price.",
        "x-schemaName": "BaseCalculatedPriceSet",
        "required": [
          "id",
          "calculated_amount",
          "original_amount",
          "currency_code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The calculated price's ID."
          },
          "is_calculated_price_price_list": {
            "type": "boolean",
            "title": "is_calculated_price_price_list",
            "description": "The calculated price's is calculated price price list."
          },
          "is_calculated_price_tax_inclusive": {
            "type": "boolean",
            "title": "is_calculated_price_tax_inclusive",
            "description": "The calculated price's is calculated price tax inclusive."
          },
          "calculated_amount": {
            "type": "number",
            "title": "calculated_amount",
            "description": "The calculated price's calculated amount."
          },
          "calculated_amount_with_tax": {
            "type": "number",
            "title": "calculated_amount_with_tax",
            "description": "The calculated price's calculated amount with tax."
          },
          "calculated_amount_without_tax": {
            "type": "number",
            "title": "calculated_amount_without_tax",
            "description": "The calculated price's calculated amount without tax."
          },
          "is_original_price_price_list": {
            "type": "boolean",
            "title": "is_original_price_price_list",
            "description": "The calculated price's is original price price list."
          },
          "is_original_price_tax_inclusive": {
            "type": "boolean",
            "title": "is_original_price_tax_inclusive",
            "description": "The calculated price's is original price tax inclusive."
          },
          "original_amount": {
            "type": "number",
            "title": "original_amount",
            "description": "The calculated price's original amount."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The calculated price's currency code."
          },
          "calculated_price": {
            "type": "object",
            "description": "The calculated price's details."
          },
          "original_price": {
            "type": "object",
            "description": "The calculated price's original price."
          }
        }
      },
      "BaseCapture": {
        "type": "object",
        "description": "The capture's captures.",
        "x-schemaName": "BaseCapture"
      },
      "BaseCart": {
        "type": "object",
        "description": "The item's cart.",
        "x-schemaName": "BaseCart"
      },
      "BaseCartAddress": {
        "type": "object",
        "description": "The parent's billing address.",
        "x-schemaName": "BaseCartAddress",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The billing address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The billing address's customer id."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The billing address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The billing address's updated at."
          }
        }
      },
      "BaseCartLineItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "BaseCartLineItem",
        "required": [
          "id",
          "title",
          "quantity",
          "requires_shipping",
          "is_discountable",
          "is_tax_inclusive",
          "unit_price",
          "cart",
          "cart_id",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The item's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The item's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The item's subtitle."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The item's thumbnail."
          },
          "quantity": {
            "oneOf": [
              {
                "type": "string",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "type": "number",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "type": "string",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "product": {
            "$ref": "#/components/schemas/BaseProduct"
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The item's product id."
          },
          "product_title": {
            "type": "string",
            "title": "product_title",
            "description": "The item's product title."
          },
          "product_description": {
            "type": "string",
            "title": "product_description",
            "description": "The item's product description."
          },
          "product_subtitle": {
            "type": "string",
            "title": "product_subtitle",
            "description": "The item's product subtitle."
          },
          "product_type": {
            "type": "string",
            "title": "product_type",
            "description": "The item's product type."
          },
          "product_collection": {
            "type": "string",
            "title": "product_collection",
            "description": "The item's product collection."
          },
          "product_handle": {
            "type": "string",
            "title": "product_handle",
            "description": "The item's product handle."
          },
          "variant": {
            "$ref": "#/components/schemas/BaseProductVariant"
          },
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The item's variant id."
          },
          "variant_sku": {
            "type": "string",
            "title": "variant_sku",
            "description": "The item's variant sku."
          },
          "variant_barcode": {
            "type": "string",
            "title": "variant_barcode",
            "description": "The item's variant barcode."
          },
          "variant_title": {
            "type": "string",
            "title": "variant_title",
            "description": "The item's variant title."
          },
          "variant_option_values": {
            "type": "object",
            "description": "The item's variant option values."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The item's requires shipping."
          },
          "is_discountable": {
            "type": "boolean",
            "title": "is_discountable",
            "description": "The item's is discountable."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The item's is tax inclusive."
          },
          "compare_at_unit_price": {
            "oneOf": [
              {
                "type": "string",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "type": "number",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "type": "string",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "unit_price": {
            "oneOf": [
              {
                "type": "string",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "type": "number",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "type": "string",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_lines": {
            "type": "array",
            "description": "The item's tax lines.",
            "items": {
              "$ref": "#/components/schemas/BaseLineItemTaxLine"
            }
          },
          "adjustments": {
            "type": "array",
            "description": "The item's adjustments.",
            "items": {
              "$ref": "#/components/schemas/BaseLineItemAdjustment"
            }
          },
          "cart": {
            "$ref": "#/components/schemas/BaseCart"
          },
          "cart_id": {
            "type": "string",
            "title": "cart_id",
            "description": "The item's cart id."
          },
          "metadata": {
            "type": "object",
            "description": "The item's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The item's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The item's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The item's deleted at."
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "type": "number",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "type": "string",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "type": "number",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "type": "number",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The item's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The item's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The item's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          }
        }
      },
      "BaseCartShippingMethod": {
        "type": "object",
        "description": "The shipping method's shipping methods.",
        "x-schemaName": "BaseCartShippingMethod",
        "required": [
          "id",
          "cart_id",
          "name",
          "amount",
          "is_tax_inclusive",
          "created_at",
          "updated_at",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping method's ID."
          },
          "cart_id": {
            "type": "string",
            "title": "cart_id",
            "description": "The shipping method's cart id."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The shipping method's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The shipping method's description."
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The shipping method's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The shipping method's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The shipping method's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The shipping method's is tax inclusive."
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The shipping method's shipping option id."
          },
          "data": {
            "type": "object",
            "description": "The shipping method's data."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping method's metadata."
          },
          "tax_lines": {
            "type": "array",
            "description": "The shipping method's tax lines.",
            "items": {
              "$ref": "#/components/schemas/BaseShippingMethodTaxLine"
            }
          },
          "adjustments": {
            "type": "array",
            "description": "The shipping method's adjustments.",
            "items": {
              "$ref": "#/components/schemas/BaseShippingMethodAdjustment"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The shipping method's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The shipping method's updated at."
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          }
        }
      },
      "BaseClaim": {
        "type": "object",
        "description": "The order change's claim.",
        "x-schemaName": "BaseClaim"
      },
      "BaseClaimItem": {
        "type": "object",
        "description": "The claim item's claim items.",
        "x-schemaName": "BaseClaimItem",
        "required": [
          "id",
          "claim_id",
          "order_id",
          "item_id",
          "quantity",
          "reason",
          "raw_quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The claim item's ID."
          },
          "claim_id": {
            "type": "string",
            "title": "claim_id",
            "description": "The claim item's claim id."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The claim item's order id."
          },
          "item_id": {
            "type": "string",
            "title": "item_id",
            "description": "The claim item's item id."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The claim item's quantity."
          },
          "reason": {
            "type": "string",
            "description": "The claim item's reason.",
            "enum": [
              "missing_item",
              "wrong_item",
              "production_failure",
              "other"
            ]
          },
          "raw_quantity": {
            "type": "object",
            "description": "The claim item's raw quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The claim item's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The claim item's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The claim item's updated at."
          }
        }
      },
      "BaseCollection": {
        "type": "object",
        "description": "The product's collection.",
        "x-schemaName": "BaseCollection"
      },
      "BaseCustomerAddress": {
        "type": "object",
        "description": "The address's addresses.",
        "x-schemaName": "BaseCustomerAddress"
      },
      "BaseExchangeItem": {
        "type": "object",
        "description": "The additional item's additional items.",
        "x-schemaName": "BaseExchangeItem",
        "required": [
          "id",
          "exchange_id",
          "order_id",
          "item_id",
          "quantity",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The additional item's ID."
          },
          "exchange_id": {
            "type": "string",
            "title": "exchange_id",
            "description": "The additional item's exchange id."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The additional item's order id."
          },
          "item_id": {
            "type": "string",
            "title": "item_id",
            "description": "The additional item's item id."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The additional item's quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The additional item's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The additional item's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The additional item's updated at."
          }
        }
      },
      "BaseFulfillmentProvider": {
        "type": "object",
        "description": "The shipping option's provider.",
        "x-schemaName": "BaseFulfillmentProvider",
        "required": [
          "id",
          "is_enabled"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The provider's ID."
          },
          "is_enabled": {
            "type": "boolean",
            "title": "is_enabled",
            "description": "The provider's is enabled."
          }
        }
      },
      "BaseLineItemAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "BaseLineItemAdjustment"
      },
      "BaseLineItemTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "BaseLineItemTaxLine"
      },
      "BaseOrder": {
        "type": "object",
        "description": "The order change's order.",
        "x-schemaName": "BaseOrder"
      },
      "BaseOrderAddress": {
        "type": "object",
        "description": "The exchange's billing address.",
        "x-schemaName": "BaseOrderAddress",
        "required": [
          "id",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The billing address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The billing address's customer id."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The billing address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The billing address's updated at."
          }
        }
      },
      "BaseOrderChange": {
        "type": "object",
        "description": "The order preview's order change.",
        "x-schemaName": "BaseOrderChange",
        "required": [
          "id",
          "order_id",
          "actions",
          "status",
          "requested_by",
          "requested_at",
          "confirmed_by",
          "confirmed_at",
          "declined_by",
          "declined_reason",
          "metadata",
          "declined_at",
          "canceled_by",
          "canceled_at",
          "created_at",
          "updated_at",
          "version",
          "return_id",
          "exchange_id",
          "claim_id",
          "order",
          "return_order",
          "exchange",
          "claim"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order change's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The order change's order id."
          },
          "actions": {
            "type": "array",
            "description": "The order change's actions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderChangeAction"
            }
          },
          "status": {
            "type": "string",
            "title": "status",
            "description": "The order change's status."
          },
          "requested_by": {
            "type": "string",
            "title": "requested_by",
            "description": "The order change's requested by."
          },
          "requested_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "requested_at",
                "description": "The order change's requested at."
              },
              {
                "type": "string",
                "title": "requested_at",
                "description": "The order change's requested at.",
                "format": "date-time"
              }
            ]
          },
          "confirmed_by": {
            "type": "string",
            "title": "confirmed_by",
            "description": "The order change's confirmed by."
          },
          "confirmed_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "confirmed_at",
                "description": "The order change's confirmed at."
              },
              {
                "type": "string",
                "title": "confirmed_at",
                "description": "The order change's confirmed at.",
                "format": "date-time"
              }
            ]
          },
          "declined_by": {
            "type": "string",
            "title": "declined_by",
            "description": "The order change's declined by."
          },
          "declined_reason": {
            "type": "string",
            "title": "declined_reason",
            "description": "The order change's declined reason."
          },
          "metadata": {
            "type": "object",
            "description": "The order change's metadata."
          },
          "declined_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "declined_at",
                "description": "The order change's declined at."
              },
              {
                "type": "string",
                "title": "declined_at",
                "description": "The order change's declined at.",
                "format": "date-time"
              }
            ]
          },
          "canceled_by": {
            "type": "string",
            "title": "canceled_by",
            "description": "The order change's canceled by."
          },
          "canceled_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order change's canceled at."
              },
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order change's canceled at.",
                "format": "date-time"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order change's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order change's updated at."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order change's version."
          },
          "change_type": {
            "type": "string",
            "description": "The order change's change type.",
            "enum": [
              "return",
              "exchange",
              "claim",
              "edit",
              "return_request"
            ]
          },
          "return_id": {
            "type": "string",
            "title": "return_id",
            "description": "The order change's return id."
          },
          "exchange_id": {
            "type": "string",
            "title": "exchange_id",
            "description": "The order change's exchange id."
          },
          "claim_id": {
            "type": "string",
            "title": "claim_id",
            "description": "The order change's claim id."
          },
          "order": {
            "$ref": "#/components/schemas/BaseOrder"
          },
          "return_order": {},
          "exchange": {},
          "claim": {
            "$ref": "#/components/schemas/BaseClaim"
          }
        }
      },
      "BaseOrderChangeAction": {
        "type": "object",
        "description": "The action's actions.",
        "x-schemaName": "BaseOrderChangeAction"
      },
      "BaseOrderFulfillment": {
        "type": "object",
        "description": "The fulfillment's fulfillments.",
        "x-schemaName": "BaseOrderFulfillment",
        "required": [
          "id",
          "location_id",
          "packed_at",
          "shipped_at",
          "delivered_at",
          "canceled_at",
          "data",
          "provider_id",
          "shipping_option_id",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The fulfillment's ID."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The fulfillment's location id."
          },
          "packed_at": {
            "type": "string",
            "title": "packed_at",
            "description": "The fulfillment's packed at.",
            "format": "date-time"
          },
          "shipped_at": {
            "type": "string",
            "title": "shipped_at",
            "description": "The fulfillment's shipped at.",
            "format": "date-time"
          },
          "delivered_at": {
            "type": "string",
            "title": "delivered_at",
            "description": "The fulfillment's delivered at.",
            "format": "date-time"
          },
          "canceled_at": {
            "type": "string",
            "title": "canceled_at",
            "description": "The fulfillment's canceled at.",
            "format": "date-time"
          },
          "data": {
            "type": "object",
            "description": "The fulfillment's data."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The fulfillment's provider id."
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The fulfillment's shipping option id."
          },
          "metadata": {
            "type": "object",
            "description": "The fulfillment's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The fulfillment's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The fulfillment's updated at."
          }
        }
      },
      "BaseOrderItemDetail": {
        "type": "object",
        "description": "The item's detail.",
        "x-schemaName": "BaseOrderItemDetail"
      },
      "BaseOrderLineItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "BaseOrderLineItem",
        "required": [
          "id",
          "title",
          "subtitle",
          "thumbnail",
          "variant_id",
          "product_id",
          "product_title",
          "product_description",
          "product_subtitle",
          "product_type",
          "product_collection",
          "product_handle",
          "variant_sku",
          "variant_barcode",
          "variant_title",
          "variant_option_values",
          "requires_shipping",
          "is_discountable",
          "is_tax_inclusive",
          "unit_price",
          "quantity",
          "detail",
          "created_at",
          "updated_at",
          "metadata",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "refundable_total",
          "refundable_total_per_unit"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The item's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The item's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The item's subtitle."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The item's thumbnail."
          },
          "variant": {
            "$ref": "#/components/schemas/BaseProductVariant"
          },
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The item's variant id."
          },
          "product": {
            "$ref": "#/components/schemas/BaseProduct"
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The item's product id."
          },
          "product_title": {
            "type": "string",
            "title": "product_title",
            "description": "The item's product title."
          },
          "product_description": {
            "type": "string",
            "title": "product_description",
            "description": "The item's product description."
          },
          "product_subtitle": {
            "type": "string",
            "title": "product_subtitle",
            "description": "The item's product subtitle."
          },
          "product_type": {
            "type": "string",
            "title": "product_type",
            "description": "The item's product type."
          },
          "product_collection": {
            "type": "string",
            "title": "product_collection",
            "description": "The item's product collection."
          },
          "product_handle": {
            "type": "string",
            "title": "product_handle",
            "description": "The item's product handle."
          },
          "variant_sku": {
            "type": "string",
            "title": "variant_sku",
            "description": "The item's variant sku."
          },
          "variant_barcode": {
            "type": "string",
            "title": "variant_barcode",
            "description": "The item's variant barcode."
          },
          "variant_title": {
            "type": "string",
            "title": "variant_title",
            "description": "The item's variant title."
          },
          "variant_option_values": {
            "type": "object",
            "description": "The item's variant option values."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The item's requires shipping."
          },
          "is_discountable": {
            "type": "boolean",
            "title": "is_discountable",
            "description": "The item's is discountable."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The item's is tax inclusive."
          },
          "compare_at_unit_price": {
            "type": "number",
            "title": "compare_at_unit_price",
            "description": "The item's compare at unit price."
          },
          "unit_price": {
            "type": "number",
            "title": "unit_price",
            "description": "The item's unit price."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The item's quantity."
          },
          "tax_lines": {
            "type": "array",
            "description": "The item's tax lines.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderLineItemTaxLine"
            }
          },
          "adjustments": {
            "type": "array",
            "description": "The item's adjustments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderLineItemAdjustment"
            }
          },
          "detail": {
            "$ref": "#/components/schemas/BaseOrderItemDetail"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The item's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The item's updated at."
          },
          "metadata": {
            "type": "object",
            "description": "The item's metadata."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The item's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The item's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The item's original tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The item's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The item's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The item's item tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The item's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The item's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The item's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The item's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The item's discount tax total."
          },
          "refundable_total": {
            "type": "number",
            "title": "refundable_total",
            "description": "The item's refundable total."
          },
          "refundable_total_per_unit": {
            "type": "number",
            "title": "refundable_total_per_unit",
            "description": "The item's refundable total per unit."
          }
        }
      },
      "BaseOrderLineItemAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "BaseOrderLineItemAdjustment"
      },
      "BaseOrderLineItemTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "BaseOrderLineItemTaxLine"
      },
      "BaseOrderShippingMethod": {
        "type": "object",
        "description": "The shipping method's shipping methods.",
        "x-schemaName": "BaseOrderShippingMethod",
        "required": [
          "id",
          "order_id",
          "name",
          "amount",
          "is_tax_inclusive",
          "shipping_option_id",
          "data",
          "metadata",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping method's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The shipping method's order id."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The shipping method's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The shipping method's description."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The shipping method's amount."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The shipping method's is tax inclusive."
          },
          "shipping_option_id": {
            "type": "string",
            "title": "shipping_option_id",
            "description": "The shipping method's shipping option id."
          },
          "data": {
            "type": "object",
            "description": "The shipping method's data."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping method's metadata."
          },
          "tax_lines": {
            "type": "array",
            "description": "The shipping method's tax lines.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethodTaxLine"
            }
          },
          "adjustments": {
            "type": "array",
            "description": "The shipping method's adjustments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethodAdjustment"
            }
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The shipping method's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The shipping method's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The shipping method's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The shipping method's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The shipping method's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The shipping method's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The shipping method's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The shipping method's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The shipping method's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The shipping method's updated at."
          }
        }
      },
      "BaseOrderShippingMethodAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "BaseOrderShippingMethodAdjustment"
      },
      "BaseOrderShippingMethodTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "BaseOrderShippingMethodTaxLine"
      },
      "BaseOrderSummary": {
        "type": "object",
        "description": "The order's summary.",
        "x-schemaName": "BaseOrderSummary",
        "required": [
          "total",
          "subtotal",
          "total_tax",
          "ordered_total",
          "fulfilled_total",
          "returned_total",
          "return_request_total",
          "write_off_total",
          "projected_total",
          "net_total",
          "net_subtotal",
          "net_total_tax",
          "balance",
          "paid_total",
          "refunded_total"
        ],
        "properties": {
          "total": {
            "type": "number",
            "title": "total",
            "description": "The summary's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The summary's subtotal."
          },
          "total_tax": {
            "type": "number",
            "title": "total_tax",
            "description": "The summary's total tax."
          },
          "ordered_total": {
            "type": "number",
            "title": "ordered_total",
            "description": "The summary's ordered total."
          },
          "fulfilled_total": {
            "type": "number",
            "title": "fulfilled_total",
            "description": "The summary's fulfilled total."
          },
          "returned_total": {
            "type": "number",
            "title": "returned_total",
            "description": "The summary's returned total."
          },
          "return_request_total": {
            "type": "number",
            "title": "return_request_total",
            "description": "The summary's return request total."
          },
          "write_off_total": {
            "type": "number",
            "title": "write_off_total",
            "description": "The summary's write off total."
          },
          "projected_total": {
            "type": "number",
            "title": "projected_total",
            "description": "The summary's projected total."
          },
          "net_total": {
            "type": "number",
            "title": "net_total",
            "description": "The summary's net total."
          },
          "net_subtotal": {
            "type": "number",
            "title": "net_subtotal",
            "description": "The summary's net subtotal."
          },
          "net_total_tax": {
            "type": "number",
            "title": "net_total_tax",
            "description": "The summary's net total tax."
          },
          "balance": {
            "type": "number",
            "title": "balance",
            "description": "The summary's balance."
          },
          "paid_total": {
            "type": "number",
            "title": "paid_total",
            "description": "The summary's paid total."
          },
          "refunded_total": {
            "type": "number",
            "title": "refunded_total",
            "description": "The summary's refunded total."
          }
        }
      },
      "BaseOrderTransaction": {
        "type": "object",
        "description": "The transaction's transactions.",
        "x-schemaName": "BaseOrderTransaction",
        "required": [
          "id",
          "order_id",
          "amount",
          "currency_code",
          "reference",
          "reference_id",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The transaction's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The transaction's order id."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The transaction's amount."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The transaction's currency code."
          },
          "reference": {
            "type": "string",
            "title": "reference",
            "description": "The transaction's reference."
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id",
            "description": "The transaction's reference id."
          },
          "metadata": {
            "type": "object",
            "description": "The transaction's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The transaction's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The transaction's updated at."
          }
        }
      },
      "BasePayment": {
        "type": "object",
        "description": "The payment's payments.",
        "x-schemaName": "BasePayment"
      },
      "BasePaymentCollection": {
        "type": "object",
        "description": "The payment collection's payment collections.",
        "x-schemaName": "BasePaymentCollection",
        "required": [
          "id",
          "currency_code",
          "region_id",
          "amount",
          "status",
          "payment_providers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment collection's ID."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The payment collection's currency code."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The payment collection's region id."
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "authorized_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "number",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "captured_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "number",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "refunded_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "number",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at."
              },
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at.",
                "format": "date-time"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The payment collection's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The payment collection's updated at."
          },
          "metadata": {
            "type": "object",
            "description": "The payment collection's metadata."
          },
          "status": {
            "type": "string",
            "description": "The payment collection's status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized"
            ]
          },
          "payment_providers": {
            "type": "array",
            "description": "The payment collection's payment providers.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentProvider"
            }
          },
          "payment_sessions": {
            "type": "array",
            "description": "The payment collection's payment sessions.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentSession"
            }
          },
          "payments": {
            "type": "array",
            "description": "The payment collection's payments.",
            "items": {
              "$ref": "#/components/schemas/BasePayment"
            }
          }
        }
      },
      "BasePaymentProvider": {
        "type": "object",
        "description": "The payment provider's payment providers.",
        "x-schemaName": "BasePaymentProvider"
      },
      "BasePaymentSession": {
        "type": "object",
        "description": "The payment session's payment sessions.",
        "x-schemaName": "BasePaymentSession"
      },
      "BaseProduct": {
        "type": "object",
        "description": "The parent's product.",
        "x-schemaName": "BaseProduct",
        "required": [
          "id",
          "title",
          "handle",
          "subtitle",
          "description",
          "is_giftcard",
          "status",
          "thumbnail",
          "width",
          "weight",
          "length",
          "height",
          "origin_country",
          "hs_code",
          "mid_code",
          "material",
          "collection_id",
          "type_id",
          "variants",
          "options",
          "images",
          "discountable",
          "external_id",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The product's title."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The product's handle."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The product's subtitle."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The product's description."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The product's is giftcard."
          },
          "status": {
            "type": "string",
            "description": "The product's status.",
            "enum": [
              "draft",
              "proposed",
              "published",
              "rejected"
            ]
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The product's thumbnail."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The product's width."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The product's weight."
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The product's length."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The product's height."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The product's origin country."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The product's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The product's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The product's material."
          },
          "collection": {
            "$ref": "#/components/schemas/BaseCollection"
          },
          "collection_id": {
            "type": "string",
            "title": "collection_id",
            "description": "The product's collection id."
          },
          "categories": {
            "type": "array",
            "description": "The product's categories.",
            "items": {
              "$ref": "#/components/schemas/BaseProductCategory"
            }
          },
          "type": {
            "type": "object"
          },
          "type_id": {
            "type": "string",
            "title": "type_id",
            "description": "The product's type id."
          },
          "tags": {
            "type": "array",
            "description": "The product's tags.",
            "items": {
              "$ref": "#/components/schemas/BaseProductTag"
            }
          },
          "variants": {
            "type": "array",
            "description": "The product's variants.",
            "items": {
              "$ref": "#/components/schemas/BaseProductVariant"
            }
          },
          "options": {
            "type": "array",
            "description": "The product's options.",
            "items": {
              "$ref": "#/components/schemas/BaseProductOption"
            }
          },
          "images": {
            "type": "array",
            "description": "The product's images.",
            "items": {
              "$ref": "#/components/schemas/BaseProductImage"
            }
          },
          "discountable": {
            "type": "boolean",
            "title": "discountable",
            "description": "The product's discountable."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The product's external id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The product's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The product's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The product's deleted at."
          },
          "metadata": {
            "type": "object",
            "description": "The product's metadata."
          }
        }
      },
      "BaseProductCategory": {
        "type": "object",
        "description": "The category's categories.",
        "x-schemaName": "BaseProductCategory"
      },
      "BaseProductImage": {
        "type": "object",
        "description": "The image's images.",
        "x-schemaName": "BaseProductImage"
      },
      "BaseProductOption": {
        "type": "object",
        "description": "The option's options.",
        "x-schemaName": "BaseProductOption"
      },
      "BaseProductOptionValue": {
        "type": "object",
        "description": "The option's options.",
        "x-schemaName": "BaseProductOptionValue",
        "required": [
          "id",
          "value"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The option's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The option's value."
          },
          "option": {
            "$ref": "#/components/schemas/BaseProductOption"
          },
          "option_id": {
            "type": "string",
            "title": "option_id",
            "description": "The option's option id."
          },
          "metadata": {
            "type": "object",
            "description": "The option's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The option's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The option's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The option's deleted at."
          }
        }
      },
      "BaseProductTag": {
        "type": "object",
        "description": "The tag's tags.",
        "x-schemaName": "BaseProductTag"
      },
      "BaseProductVariant": {
        "type": "object",
        "description": "The variant's variants.",
        "x-schemaName": "BaseProductVariant"
      },
      "BasePromotion": {
        "type": "object",
        "description": "The application method's promotion.",
        "x-schemaName": "BasePromotion"
      },
      "BasePromotionRule": {
        "type": "object",
        "description": "The rule's rules.",
        "x-schemaName": "BasePromotionRule",
        "required": [
          "id",
          "values"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The rule's ID."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The rule's description."
          },
          "attribute": {
            "type": "string",
            "title": "attribute",
            "description": "The rule's attribute."
          },
          "operator": {
            "type": "string",
            "description": "The rule's operator.",
            "enum": [
              "gt",
              "lt",
              "eq",
              "ne",
              "in",
              "lte",
              "gte"
            ]
          },
          "values": {
            "type": "array",
            "description": "The rule's values.",
            "items": {
              "$ref": "#/components/schemas/BasePromotionRuleValue"
            }
          }
        }
      },
      "BasePromotionRuleValue": {
        "type": "object",
        "description": "The value's values.",
        "x-schemaName": "BasePromotionRuleValue",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The value's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The value's details."
          }
        }
      },
      "BaseRefund": {
        "type": "object",
        "description": "The refund's refunds.",
        "x-schemaName": "BaseRefund"
      },
      "BaseRegion": {
        "type": "object",
        "description": "The parent's region.",
        "x-schemaName": "BaseRegion",
        "required": [
          "id",
          "name",
          "currency_code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The region's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The region's name."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The region's currency code."
          },
          "automatic_taxes": {
            "type": "boolean",
            "title": "automatic_taxes",
            "description": "The region's automatic taxes."
          },
          "countries": {
            "type": "array",
            "description": "The region's countries.",
            "items": {
              "$ref": "#/components/schemas/BaseRegionCountry"
            }
          },
          "payment_providers": {
            "type": "array",
            "description": "The region's payment providers.",
            "items": {
              "$ref": "#/components/schemas/AdminPaymentProvider"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The region's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The region's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The region's updated at."
          }
        }
      },
      "BaseRegionCountry": {
        "type": "object",
        "description": "The country's countries.",
        "x-schemaName": "BaseRegionCountry"
      },
      "BaseReturnItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "BaseReturnItem"
      },
      "BaseRuleOperatorOptions": {
        "type": "object",
        "description": "The operator's operators.",
        "x-schemaName": "BaseRuleOperatorOptions",
        "required": [
          "id",
          "value",
          "label"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The operator's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The operator's value."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The operator's label."
          }
        }
      },
      "BaseShippingMethodAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "BaseShippingMethodAdjustment"
      },
      "BaseShippingMethodTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "BaseShippingMethodTaxLine"
      },
      "CampaignResponse": {
        "type": "object",
        "description": "The campaign's details.",
        "x-schemaName": "CampaignResponse",
        "required": [
          "id",
          "name",
          "description",
          "currency",
          "campaign_identifier",
          "starts_at",
          "ends_at",
          "budget"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The campaign's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The campaign's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The campaign's description."
          },
          "currency": {
            "type": "string",
            "title": "currency",
            "description": "The campaign's currency."
          },
          "campaign_identifier": {
            "type": "string",
            "title": "campaign_identifier",
            "description": "The campaign's campaign identifier."
          },
          "starts_at": {
            "type": "string",
            "title": "starts_at",
            "description": "The campaign's starts at."
          },
          "ends_at": {
            "type": "string",
            "title": "ends_at",
            "description": "The campaign's ends at."
          },
          "budget": {
            "type": "object",
            "description": "The campaign's budget.",
            "required": [
              "id",
              "type",
              "currency_code",
              "limit",
              "used"
            ],
            "properties": {
              "id": {
                "type": "string",
                "title": "id",
                "description": "The budget's ID."
              },
              "type": {
                "type": "string",
                "enum": [
                  "spend",
                  "usage"
                ]
              },
              "currency_code": {
                "type": "string",
                "title": "currency_code",
                "description": "The budget's currency code."
              },
              "limit": {
                "type": "number",
                "title": "limit",
                "description": "The budget's limit."
              },
              "used": {
                "type": "number",
                "title": "used",
                "description": "The budget's used."
              }
            }
          }
        }
      },
      "CreateAddress": {
        "type": "object",
        "description": "The cart's shipping address.",
        "x-schemaName": "CreateAddress",
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The shipping address's customer id."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The shipping address's company."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The shipping address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The shipping address's last name."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The shipping address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The shipping address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The shipping address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The shipping address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The shipping address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The shipping address's postal code."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The shipping address's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping address's metadata."
          }
        }
      },
      "CreateCartAddress": {
        "type": "object",
        "description": "The cart's billing address.",
        "x-schemaName": "CreateCartAddress",
        "properties": {
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          }
        }
      },
      "CreateCartCreateLineItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "CreateCartCreateLineItem",
        "required": [
          "quantity",
          "variant_id"
        ],
        "properties": {
          "quantity": {
            "type": "string",
            "title": "quantity",
            "description": "The item's quantity."
          },
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The item's variant id."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The item's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The item's subtitle."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The item's thumbnail."
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The item's product id."
          },
          "product_title": {
            "type": "string",
            "title": "product_title",
            "description": "The item's product title."
          },
          "product_description": {
            "type": "string",
            "title": "product_description",
            "description": "The item's product description."
          },
          "product_subtitle": {
            "type": "string",
            "title": "product_subtitle",
            "description": "The item's product subtitle."
          },
          "product_type": {
            "type": "string",
            "title": "product_type",
            "description": "The item's product type."
          },
          "product_collection": {
            "type": "string",
            "title": "product_collection",
            "description": "The item's product collection."
          },
          "product_handle": {
            "type": "string",
            "title": "product_handle",
            "description": "The item's product handle."
          },
          "variant_sku": {
            "type": "string",
            "title": "variant_sku",
            "description": "The item's variant sku."
          },
          "variant_barcode": {
            "type": "string",
            "title": "variant_barcode",
            "description": "The item's variant barcode."
          },
          "variant_title": {
            "type": "string",
            "title": "variant_title",
            "description": "The item's variant title."
          },
          "variant_option_values": {
            "type": "object",
            "description": "The item's variant option values."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The item's requires shipping."
          },
          "is_discountable": {
            "type": "boolean",
            "title": "is_discountable",
            "description": "The item's is discountable."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The item's is tax inclusive."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The item's is giftcard."
          },
          "compare_at_unit_price": {
            "type": "string",
            "title": "compare_at_unit_price",
            "description": "The item's compare at unit price."
          },
          "unit_price": {
            "type": "string",
            "title": "unit_price",
            "description": "The item's unit price."
          },
          "metadata": {
            "type": "object",
            "description": "The item's metadata."
          }
        }
      },
      "CreateCartWorkflowInput": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "CreateCartWorkflowInput",
        "properties": {
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The cart's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The cart's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The cart's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The cart's email.",
            "format": "email"
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The cart's currency code."
          },
          "shipping_address_id": {
            "type": "string",
            "title": "shipping_address_id",
            "description": "The cart's shipping address id."
          },
          "billing_address_id": {
            "type": "string",
            "title": "billing_address_id",
            "description": "The cart's billing address id."
          },
          "shipping_address": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_address",
                "description": "The cart's shipping address."
              },
              {
                "$ref": "#/components/schemas/CreateCartAddress"
              }
            ]
          },
          "billing_address": {
            "oneOf": [
              {
                "type": "string",
                "title": "billing_address",
                "description": "The cart's billing address."
              },
              {
                "$ref": "#/components/schemas/CreateCartAddress"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "The cart's metadata."
          },
          "items": {
            "type": "array",
            "description": "The cart's items.",
            "items": {
              "$ref": "#/components/schemas/CreateCartCreateLineItem"
            }
          },
          "promo_codes": {
            "type": "array",
            "description": "The cart's promo codes.",
            "items": {
              "type": "string",
              "title": "promo_codes",
              "description": "The promo code's promo codes."
            }
          }
        }
      },
      "CreateOrderReturnReason": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "CreateOrderReturnReason",
        "required": [
          "value",
          "label"
        ],
        "properties": {
          "value": {
            "type": "string",
            "title": "value",
            "description": "The return reason's value."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The return reason's label."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return reason's description."
          },
          "parent_return_reason_id": {
            "type": "string",
            "title": "parent_return_reason_id",
            "description": "The return reason's parent return reason id."
          },
          "metadata": {
            "type": "object",
            "description": "The return reason's metadata."
          }
        }
      },
      "CustomerGroupInCustomerFilters": {
        "type": "object",
        "description": "The customer's groups.",
        "x-schemaName": "CustomerGroupInCustomerFilters",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string",
                "title": "id",
                "description": "The group's ID."
              },
              {
                "type": "array",
                "description": "The group's ID.",
                "items": {
                  "type": "string",
                  "title": "id",
                  "description": "The id's ID."
                }
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string",
                "title": "name",
                "description": "The group's name."
              },
              {
                "type": "array",
                "description": "The group's name.",
                "items": {
                  "type": "string",
                  "title": "name",
                  "description": "The name's details."
                }
              }
            ]
          },
          "created_at": {
            "type": "object",
            "description": "The group's created at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "updated_at": {
            "type": "object",
            "description": "The group's updated at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          },
          "deleted_at": {
            "type": "object",
            "description": "The group's deleted at.",
            "properties": {
              "$and": {
                "type": "array",
                "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$and"
              },
              "$or": {
                "type": "array",
                "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
                "items": {
                  "type": "object"
                },
                "title": "$or"
              },
              "$eq": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$eq",
                    "description": "Filter by an exact match."
                  },
                  {
                    "type": "array",
                    "description": "Filter by an exact match.",
                    "items": {
                      "type": "string",
                      "title": "$eq",
                      "description": "Filter by an exact match."
                    }
                  }
                ]
              },
              "$ne": {
                "type": "string",
                "title": "$ne",
                "description": "Filter by values not equal to this parameter."
              },
              "$in": {
                "type": "array",
                "description": "Filter by values in this array.",
                "items": {
                  "type": "string",
                  "title": "$in",
                  "description": "Filter by values in this array."
                }
              },
              "$nin": {
                "type": "array",
                "description": "Filter by values not in this array.",
                "items": {
                  "type": "string",
                  "title": "$nin",
                  "description": "Filter by values not in this array."
                }
              },
              "$not": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "$not",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "object",
                    "description": "Filter by values not matching the conditions in this parameter."
                  },
                  {
                    "type": "array",
                    "description": "Filter by values not matching the conditions in this parameter.",
                    "items": {
                      "type": "string",
                      "title": "$not",
                      "description": "Filter by values not matching the conditions in this parameter."
                    }
                  }
                ]
              },
              "$gt": {
                "type": "string",
                "title": "$gt",
                "description": "Filter by values greater than this parameter. Useful for numbers and dates only."
              },
              "$gte": {
                "type": "string",
                "title": "$gte",
                "description": "Filter by values greater than or equal to this parameter. Useful for numbers and dates only."
              },
              "$lt": {
                "type": "string",
                "title": "$lt",
                "description": "Filter by values less than this parameter. Useful for numbers and dates only."
              },
              "$lte": {
                "type": "string",
                "title": "$lte",
                "description": "Filter by values less than or equal to this parameter. Useful for numbers and dates only."
              },
              "$like": {
                "type": "string",
                "title": "$like",
                "description": "Apply a `like` filter. Useful for strings only."
              },
              "$re": {
                "type": "string",
                "title": "$re",
                "description": "Apply a regex filter. Useful for strings only."
              },
              "$ilike": {
                "type": "string",
                "title": "$ilike",
                "description": "Apply a case-insensitive `like` filter. Useful for strings only."
              },
              "$fulltext": {
                "type": "string",
                "title": "$fulltext",
                "description": "Filter to apply on full-text properties."
              },
              "$overlap": {
                "type": "array",
                "description": "Filter arrays that have overlapping values with this parameter.",
                "items": {
                  "type": "string",
                  "title": "$overlap",
                  "description": "Filter arrays that have overlapping values with this parameter."
                }
              },
              "$contains": {
                "type": "array",
                "description": "Filter arrays that contain some of the values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contains",
                  "description": "Filter arrays that contain some of the values of this parameter."
                }
              },
              "$contained": {
                "type": "array",
                "description": "Filter arrays that contain all values of this parameter.",
                "items": {
                  "type": "string",
                  "title": "$contained",
                  "description": "Filter arrays that contain all values of this parameter."
                }
              },
              "$exists": {
                "type": "boolean",
                "title": "$exists",
                "description": "Filter by whether a value for this parameter exists (not `null`)."
              }
            }
          }
        }
      },
      "Error": {
        "title": "Response Error",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A slug code to indicate the type of the error.",
            "enum": [
              "invalid_state_error",
              "invalid_request_error",
              "api_error",
              "unknown_error"
            ]
          },
          "message": {
            "type": "string",
            "description": "Description of the error that occurred.",
            "example": "first_name must be a string"
          },
          "type": {
            "type": "string",
            "description": "A slug indicating the type of the error.",
            "enum": [
              "QueryRunnerAlreadyReleasedError",
              "TransactionAlreadyStartedError",
              "TransactionNotStartedError",
              "conflict",
              "unauthorized",
              "payment_authorization_error",
              "duplicate_error",
              "not_allowed",
              "invalid_data",
              "not_found",
              "database_error",
              "unexpected_state",
              "invalid_argument",
              "unknown_error"
            ]
          }
        }
      },
      "File": {
        "type": "object",
        "description": "The product's file.",
        "x-schemaName": "File",
        "required": [
          "lastModified",
          "name",
          "webkitRelativePath",
          "size",
          "type",
          "arrayBuffer",
          "stream",
          "text"
        ],
        "properties": {
          "lastModified": {
            "type": "number",
            "title": "lastModified",
            "description": "The file's lastmodified."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The file's name."
          },
          "webkitRelativePath": {
            "type": "string",
            "title": "webkitRelativePath",
            "description": "The file's webkitrelativepath."
          },
          "size": {
            "type": "number",
            "title": "size",
            "description": "The file's size."
          },
          "type": {
            "type": "string",
            "title": "type",
            "description": "The file's type."
          },
          "arrayBuffer": {
            "type": "object",
            "description": "The file's arraybuffer."
          },
          "slice": {
            "type": "object",
            "description": "The file's slice."
          },
          "stream": {
            "type": "object",
            "description": "The file's stream."
          },
          "text": {
            "type": "object",
            "description": "The file's text."
          }
        }
      },
      "FileList": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "FileList",
        "required": [
          "length",
          "item",
          "__@iterator@258"
        ],
        "properties": {
          "length": {
            "type": "number",
            "title": "length",
            "description": "The upload's length."
          },
          "item": {
            "type": "object",
            "description": "The upload's item."
          },
          "__@iterator@258": {
            "type": "object",
            "description": "The upload's   @iterator@258."
          }
        }
      },
      "IBigNumber": {
        "type": "object",
        "description": "The shipping method's discount tax total.",
        "x-schemaName": "IBigNumber"
      },
      "InventoryLevel": {
        "type": "object",
        "description": "The inventory level's inventory levels.",
        "x-schemaName": "InventoryLevel",
        "required": [
          "id",
          "inventory_item_id",
          "location_id",
          "stocked_quantity",
          "reserved_quantity",
          "available_quantity",
          "incoming_quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The inventory level's ID."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The inventory level's inventory item id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The inventory level's location id."
          },
          "stocked_quantity": {
            "type": "number",
            "title": "stocked_quantity",
            "description": "The inventory level's stocked quantity."
          },
          "reserved_quantity": {
            "type": "number",
            "title": "reserved_quantity",
            "description": "The inventory level's reserved quantity."
          },
          "available_quantity": {
            "type": "number",
            "title": "available_quantity",
            "description": "The inventory level's available quantity."
          },
          "incoming_quantity": {
            "type": "number",
            "title": "incoming_quantity",
            "description": "The inventory level's incoming quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The inventory level's metadata."
          }
        }
      },
      "Order": {
        "type": "object",
        "description": "The transaction's order.",
        "x-schemaName": "Order"
      },
      "OrderAddress": {
        "type": "object",
        "description": "The order preview's billing address.",
        "x-schemaName": "OrderAddress",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The billing address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The billing address's customer id."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The billing address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The billing address's updated at."
          }
        }
      },
      "OrderChange": {
        "type": "object",
        "description": "The order preview's order change.",
        "x-schemaName": "OrderChange",
        "required": [
          "id",
          "version",
          "order_id",
          "return_id",
          "exchange_id",
          "claim_id",
          "order",
          "return_order",
          "exchange",
          "claim",
          "actions",
          "status",
          "requested_by",
          "requested_at",
          "confirmed_by",
          "confirmed_at",
          "declined_by",
          "declined_reason",
          "metadata",
          "declined_at",
          "canceled_by",
          "canceled_at",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order change's ID."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order change's version."
          },
          "change_type": {
            "type": "string",
            "description": "The order change's change type.",
            "enum": [
              "return",
              "exchange",
              "claim",
              "edit"
            ]
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The order change's order id."
          },
          "return_id": {
            "type": "string",
            "title": "return_id",
            "description": "The order change's return id."
          },
          "exchange_id": {
            "type": "string",
            "title": "exchange_id",
            "description": "The order change's exchange id."
          },
          "claim_id": {
            "type": "string",
            "title": "claim_id",
            "description": "The order change's claim id."
          },
          "order": {
            "type": "object"
          },
          "return_order": {
            "$ref": "#/components/schemas/Return"
          },
          "exchange": {
            "$ref": "#/components/schemas/OrderExchange"
          },
          "claim": {
            "$ref": "#/components/schemas/OrderClaim"
          },
          "actions": {
            "type": "array",
            "description": "The order change's actions.",
            "items": {
              "$ref": "#/components/schemas/OrderChangeAction"
            }
          },
          "status": {
            "type": "string",
            "title": "status",
            "description": "The order change's status."
          },
          "requested_by": {
            "type": "string",
            "title": "requested_by",
            "description": "The order change's requested by."
          },
          "requested_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "requested_at",
                "description": "The order change's requested at."
              },
              {
                "type": "string",
                "title": "requested_at",
                "description": "The order change's requested at.",
                "format": "date-time"
              }
            ]
          },
          "confirmed_by": {
            "type": "string",
            "title": "confirmed_by",
            "description": "The order change's confirmed by."
          },
          "confirmed_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "confirmed_at",
                "description": "The order change's confirmed at."
              },
              {
                "type": "string",
                "title": "confirmed_at",
                "description": "The order change's confirmed at.",
                "format": "date-time"
              }
            ]
          },
          "declined_by": {
            "type": "string",
            "title": "declined_by",
            "description": "The order change's declined by."
          },
          "declined_reason": {
            "type": "string",
            "title": "declined_reason",
            "description": "The order change's declined reason."
          },
          "metadata": {
            "type": "object",
            "description": "The order change's metadata."
          },
          "declined_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "declined_at",
                "description": "The order change's declined at."
              },
              {
                "type": "string",
                "title": "declined_at",
                "description": "The order change's declined at.",
                "format": "date-time"
              }
            ]
          },
          "canceled_by": {
            "type": "string",
            "title": "canceled_by",
            "description": "The order change's canceled by."
          },
          "canceled_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order change's canceled at."
              },
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order change's canceled at.",
                "format": "date-time"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order change's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order change's updated at."
          }
        }
      },
      "OrderChangeAction": {
        "type": "object",
        "description": "The action's actions.",
        "x-schemaName": "OrderChangeAction"
      },
      "OrderClaim": {
        "type": "object",
        "description": "The order change's claim.",
        "x-schemaName": "OrderClaim"
      },
      "OrderExchange": {
        "type": "object",
        "description": "The order change's exchange.",
        "x-schemaName": "OrderExchange"
      },
      "OrderItem": {
        "type": "object",
        "description": "The item's detail.",
        "x-schemaName": "OrderItem"
      },
      "OrderLineItemAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "OrderLineItemAdjustment"
      },
      "OrderLineItemTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "OrderLineItemTaxLine"
      },
      "OrderPreview": {
        "type": "object",
        "description": "The order edit's order preview.",
        "x-schemaName": "OrderPreview",
        "required": [
          "order_change",
          "status",
          "currency_code",
          "version",
          "id",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total",
          "raw_original_item_total",
          "raw_original_item_subtotal",
          "raw_original_item_tax_total",
          "raw_item_total",
          "raw_item_subtotal",
          "raw_item_tax_total",
          "raw_original_total",
          "raw_original_subtotal",
          "raw_original_tax_total",
          "raw_total",
          "raw_subtotal",
          "raw_tax_total",
          "raw_discount_total",
          "raw_discount_tax_total",
          "raw_gift_card_total",
          "raw_gift_card_tax_total",
          "raw_shipping_total",
          "raw_shipping_subtotal",
          "raw_shipping_tax_total",
          "raw_original_shipping_total",
          "raw_original_shipping_subtotal",
          "raw_original_shipping_tax_total"
        ],
        "properties": {
          "order_change": {
            "$ref": "#/components/schemas/OrderChange"
          },
          "items": {
            "type": "array",
            "description": "The order preview's items.",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "The item's items.",
                  "x-schemaName": "OrderLineItem",
                  "required": [
                    "id",
                    "title",
                    "requires_shipping",
                    "is_discountable",
                    "is_tax_inclusive",
                    "unit_price",
                    "raw_unit_price",
                    "quantity",
                    "raw_quantity",
                    "detail",
                    "created_at",
                    "updated_at",
                    "original_total",
                    "original_subtotal",
                    "original_tax_total",
                    "item_total",
                    "item_subtotal",
                    "item_tax_total",
                    "total",
                    "subtotal",
                    "tax_total",
                    "discount_total",
                    "discount_tax_total",
                    "refundable_total",
                    "refundable_total_per_unit",
                    "raw_original_total",
                    "raw_original_subtotal",
                    "raw_original_tax_total",
                    "raw_item_total",
                    "raw_item_subtotal",
                    "raw_item_tax_total",
                    "raw_total",
                    "raw_subtotal",
                    "raw_tax_total",
                    "raw_discount_total",
                    "raw_discount_tax_total",
                    "raw_refundable_total",
                    "raw_refundable_total_per_unit"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "id",
                      "description": "The item's ID."
                    },
                    "title": {
                      "type": "string",
                      "title": "title",
                      "description": "The item's title."
                    },
                    "subtitle": {
                      "type": "string",
                      "title": "subtitle",
                      "description": "The item's subtitle."
                    },
                    "thumbnail": {
                      "type": "string",
                      "title": "thumbnail",
                      "description": "The item's thumbnail."
                    },
                    "variant_id": {
                      "type": "string",
                      "title": "variant_id",
                      "description": "The item's variant id."
                    },
                    "product_id": {
                      "type": "string",
                      "title": "product_id",
                      "description": "The item's product id."
                    },
                    "product_title": {
                      "type": "string",
                      "title": "product_title",
                      "description": "The item's product title."
                    },
                    "product_description": {
                      "type": "string",
                      "title": "product_description",
                      "description": "The item's product description."
                    },
                    "product_subtitle": {
                      "type": "string",
                      "title": "product_subtitle",
                      "description": "The item's product subtitle."
                    },
                    "product_type": {
                      "type": "string",
                      "title": "product_type",
                      "description": "The item's product type."
                    },
                    "product_collection": {
                      "type": "string",
                      "title": "product_collection",
                      "description": "The item's product collection."
                    },
                    "product_handle": {
                      "type": "string",
                      "title": "product_handle",
                      "description": "The item's product handle."
                    },
                    "variant_sku": {
                      "type": "string",
                      "title": "variant_sku",
                      "description": "The item's variant sku."
                    },
                    "variant_barcode": {
                      "type": "string",
                      "title": "variant_barcode",
                      "description": "The item's variant barcode."
                    },
                    "variant_title": {
                      "type": "string",
                      "title": "variant_title",
                      "description": "The item's variant title."
                    },
                    "variant_option_values": {
                      "type": "object",
                      "description": "The item's variant option values."
                    },
                    "requires_shipping": {
                      "type": "boolean",
                      "title": "requires_shipping",
                      "description": "The item's requires shipping."
                    },
                    "is_discountable": {
                      "type": "boolean",
                      "title": "is_discountable",
                      "description": "The item's is discountable."
                    },
                    "is_tax_inclusive": {
                      "type": "boolean",
                      "title": "is_tax_inclusive",
                      "description": "The item's is tax inclusive."
                    },
                    "compare_at_unit_price": {
                      "type": "number",
                      "title": "compare_at_unit_price",
                      "description": "The item's compare at unit price."
                    },
                    "raw_compare_at_unit_price": {
                      "type": "object",
                      "description": "The item's raw compare at unit price."
                    },
                    "unit_price": {
                      "type": "number",
                      "title": "unit_price",
                      "description": "The item's unit price."
                    },
                    "raw_unit_price": {
                      "type": "object",
                      "description": "The item's raw unit price."
                    },
                    "quantity": {
                      "type": "number",
                      "title": "quantity",
                      "description": "The item's quantity."
                    },
                    "raw_quantity": {
                      "type": "object",
                      "description": "The item's raw quantity."
                    },
                    "tax_lines": {
                      "type": "array",
                      "description": "The item's tax lines.",
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItemTaxLine"
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "The item's adjustments.",
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItemAdjustment"
                      }
                    },
                    "detail": {
                      "$ref": "#/components/schemas/OrderItem"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "created_at",
                      "description": "The item's created at."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "updated_at",
                      "description": "The item's updated at."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The item's metadata."
                    },
                    "original_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The item's original total."
                        },
                        {
                          "type": "number",
                          "title": "original_total",
                          "description": "The item's original total."
                        },
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The item's original total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The item's original subtotal."
                        },
                        {
                          "type": "number",
                          "title": "original_subtotal",
                          "description": "The item's original subtotal."
                        },
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The item's original subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The item's original tax total."
                        },
                        {
                          "type": "number",
                          "title": "original_tax_total",
                          "description": "The item's original tax total."
                        },
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The item's original tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "item_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "item_total",
                          "description": "The item's item total."
                        },
                        {
                          "type": "number",
                          "title": "item_total",
                          "description": "The item's item total."
                        },
                        {
                          "type": "string",
                          "title": "item_total",
                          "description": "The item's item total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "item_subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "item_subtotal",
                          "description": "The item's item subtotal."
                        },
                        {
                          "type": "number",
                          "title": "item_subtotal",
                          "description": "The item's item subtotal."
                        },
                        {
                          "type": "string",
                          "title": "item_subtotal",
                          "description": "The item's item subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "item_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "item_tax_total",
                          "description": "The item's item tax total."
                        },
                        {
                          "type": "number",
                          "title": "item_tax_total",
                          "description": "The item's item tax total."
                        },
                        {
                          "type": "string",
                          "title": "item_tax_total",
                          "description": "The item's item tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The item's total."
                        },
                        {
                          "type": "number",
                          "title": "total",
                          "description": "The item's total."
                        },
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The item's total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The item's subtotal."
                        },
                        {
                          "type": "number",
                          "title": "subtotal",
                          "description": "The item's subtotal."
                        },
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The item's subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The item's tax total."
                        },
                        {
                          "type": "number",
                          "title": "tax_total",
                          "description": "The item's tax total."
                        },
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The item's tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The item's discount total."
                        },
                        {
                          "type": "number",
                          "title": "discount_total",
                          "description": "The item's discount total."
                        },
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The item's discount total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The item's discount tax total."
                        },
                        {
                          "type": "number",
                          "title": "discount_tax_total",
                          "description": "The item's discount tax total."
                        },
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The item's discount tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "refundable_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "refundable_total",
                          "description": "The item's refundable total."
                        },
                        {
                          "type": "number",
                          "title": "refundable_total",
                          "description": "The item's refundable total."
                        },
                        {
                          "type": "string",
                          "title": "refundable_total",
                          "description": "The item's refundable total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "refundable_total_per_unit": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "refundable_total_per_unit",
                          "description": "The item's refundable total per unit."
                        },
                        {
                          "type": "number",
                          "title": "refundable_total_per_unit",
                          "description": "The item's refundable total per unit."
                        },
                        {
                          "type": "string",
                          "title": "refundable_total_per_unit",
                          "description": "The item's refundable total per unit."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "raw_original_total": {
                      "type": "object",
                      "description": "The item's raw original total."
                    },
                    "raw_original_subtotal": {
                      "type": "object",
                      "description": "The item's raw original subtotal."
                    },
                    "raw_original_tax_total": {
                      "type": "object",
                      "description": "The item's raw original tax total."
                    },
                    "raw_item_total": {
                      "type": "object",
                      "description": "The item's raw item total."
                    },
                    "raw_item_subtotal": {
                      "type": "object",
                      "description": "The item's raw item subtotal."
                    },
                    "raw_item_tax_total": {
                      "type": "object",
                      "description": "The item's raw item tax total."
                    },
                    "raw_total": {
                      "type": "object",
                      "description": "The item's raw total."
                    },
                    "raw_subtotal": {
                      "type": "object",
                      "description": "The item's raw subtotal."
                    },
                    "raw_tax_total": {
                      "type": "object",
                      "description": "The item's raw tax total."
                    },
                    "raw_discount_total": {
                      "type": "object",
                      "description": "The item's raw discount total."
                    },
                    "raw_discount_tax_total": {
                      "type": "object",
                      "description": "The item's raw discount tax total."
                    },
                    "raw_refundable_total": {
                      "type": "object",
                      "description": "The item's raw refundable total."
                    },
                    "raw_refundable_total_per_unit": {
                      "type": "object",
                      "description": "The item's raw refundable total per unit."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The item's items.",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "description": "The item's actions.",
                      "items": {
                        "type": "object",
                        "description": "The action's actions.",
                        "x-schemaName": "OrderChangeAction"
                      }
                    }
                  }
                }
              ]
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "The order preview's shipping methods.",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "The shipping method's shipping methods.",
                  "x-schemaName": "OrderShippingMethod",
                  "required": [
                    "id",
                    "order_id",
                    "name",
                    "amount",
                    "raw_amount",
                    "is_tax_inclusive",
                    "created_at",
                    "updated_at",
                    "original_total",
                    "original_subtotal",
                    "original_tax_total",
                    "total",
                    "subtotal",
                    "tax_total",
                    "discount_total",
                    "discount_tax_total",
                    "raw_original_total",
                    "raw_original_subtotal",
                    "raw_original_tax_total",
                    "raw_total",
                    "raw_subtotal",
                    "raw_tax_total",
                    "raw_discount_total",
                    "raw_discount_tax_total"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "id",
                      "description": "The shipping method's ID."
                    },
                    "order_id": {
                      "type": "string",
                      "title": "order_id",
                      "description": "The shipping method's order id."
                    },
                    "name": {
                      "type": "string",
                      "title": "name",
                      "description": "The shipping method's name."
                    },
                    "description": {
                      "type": "string",
                      "title": "description",
                      "description": "The shipping method's description."
                    },
                    "amount": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "amount",
                          "description": "The shipping method's amount."
                        },
                        {
                          "type": "number",
                          "title": "amount",
                          "description": "The shipping method's amount."
                        },
                        {
                          "type": "string",
                          "title": "amount",
                          "description": "The shipping method's amount."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "raw_amount": {
                      "type": "object",
                      "description": "The shipping method's raw amount."
                    },
                    "is_tax_inclusive": {
                      "type": "boolean",
                      "title": "is_tax_inclusive",
                      "description": "The shipping method's is tax inclusive."
                    },
                    "shipping_option_id": {
                      "type": "string",
                      "title": "shipping_option_id",
                      "description": "The shipping method's shipping option id."
                    },
                    "data": {
                      "type": "object",
                      "description": "The shipping method's data."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The shipping method's metadata."
                    },
                    "tax_lines": {
                      "type": "array",
                      "description": "The shipping method's tax lines.",
                      "items": {
                        "$ref": "#/components/schemas/OrderShippingMethodTaxLine"
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "The shipping method's adjustments.",
                      "items": {
                        "$ref": "#/components/schemas/OrderShippingMethodAdjustment"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "created_at",
                      "description": "The shipping method's created at."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "updated_at",
                      "description": "The shipping method's updated at."
                    },
                    "original_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "type": "number",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "type": "string",
                          "title": "original_total",
                          "description": "The shipping method's original total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "type": "number",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "type": "string",
                          "title": "original_subtotal",
                          "description": "The shipping method's original subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "original_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "type": "number",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "type": "string",
                          "title": "original_tax_total",
                          "description": "The shipping method's original tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "type": "number",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "type": "string",
                          "title": "total",
                          "description": "The shipping method's total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "subtotal": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "type": "number",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "type": "string",
                          "title": "subtotal",
                          "description": "The shipping method's subtotal."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "type": "number",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "type": "string",
                          "title": "tax_total",
                          "description": "The shipping method's tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "type": "number",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "type": "string",
                          "title": "discount_total",
                          "description": "The shipping method's discount total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "discount_tax_total": {
                      "oneOf": [
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "type": "number",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "type": "string",
                          "title": "discount_tax_total",
                          "description": "The shipping method's discount tax total."
                        },
                        {
                          "$ref": "#/components/schemas/IBigNumber"
                        }
                      ]
                    },
                    "raw_original_total": {
                      "type": "object",
                      "description": "The shipping method's raw original total."
                    },
                    "raw_original_subtotal": {
                      "type": "object",
                      "description": "The shipping method's raw original subtotal."
                    },
                    "raw_original_tax_total": {
                      "type": "object",
                      "description": "The shipping method's raw original tax total."
                    },
                    "raw_total": {
                      "type": "object",
                      "description": "The shipping method's raw total."
                    },
                    "raw_subtotal": {
                      "type": "object",
                      "description": "The shipping method's raw subtotal."
                    },
                    "raw_tax_total": {
                      "type": "object",
                      "description": "The shipping method's raw tax total."
                    },
                    "raw_discount_total": {
                      "type": "object",
                      "description": "The shipping method's raw discount total."
                    },
                    "raw_discount_tax_total": {
                      "type": "object",
                      "description": "The shipping method's raw discount tax total."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "The shipping method's shipping methods.",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "description": "The shipping method's actions.",
                      "items": {
                        "type": "object",
                        "description": "The action's actions.",
                        "x-schemaName": "OrderChangeAction"
                      }
                    }
                  }
                }
              ]
            }
          },
          "status": {
            "type": "string",
            "description": "The order preview's status.",
            "enum": [
              "canceled",
              "requires_action",
              "pending",
              "completed",
              "draft",
              "archived"
            ]
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The order preview's currency code."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order preview's version."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order preview's ID."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The order preview's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The order preview's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The order preview's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The order preview's email.",
            "format": "email"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "transactions": {
            "type": "array",
            "description": "The order preview's transactions.",
            "items": {
              "$ref": "#/components/schemas/OrderTransaction"
            }
          },
          "summary": {
            "type": "object",
            "description": "The order preview's summary.",
            "required": [
              "total",
              "subtotal",
              "total_tax",
              "ordered_total",
              "fulfilled_total",
              "returned_total",
              "return_request_total",
              "write_off_total",
              "projected_total",
              "net_total",
              "net_subtotal",
              "net_total_tax",
              "balance",
              "paid_total",
              "refunded_total",
              "pending_difference",
              "raw_pending_difference"
            ],
            "properties": {
              "total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "total",
                    "description": "The summary's total."
                  },
                  {
                    "type": "number",
                    "title": "total",
                    "description": "The summary's total."
                  },
                  {
                    "type": "string",
                    "title": "total",
                    "description": "The summary's total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "subtotal": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "subtotal",
                    "description": "The summary's subtotal."
                  },
                  {
                    "type": "number",
                    "title": "subtotal",
                    "description": "The summary's subtotal."
                  },
                  {
                    "type": "string",
                    "title": "subtotal",
                    "description": "The summary's subtotal."
                  },
                  {
                    "type": "object",
                    "description": "The summary's subtotal.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "total_tax": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "total_tax",
                    "description": "The summary's total tax."
                  },
                  {
                    "type": "number",
                    "title": "total_tax",
                    "description": "The summary's total tax."
                  },
                  {
                    "type": "string",
                    "title": "total_tax",
                    "description": "The summary's total tax."
                  },
                  {
                    "type": "object",
                    "description": "The summary's total tax.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "ordered_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "ordered_total",
                    "description": "The summary's ordered total."
                  },
                  {
                    "type": "number",
                    "title": "ordered_total",
                    "description": "The summary's ordered total."
                  },
                  {
                    "type": "string",
                    "title": "ordered_total",
                    "description": "The summary's ordered total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's ordered total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "fulfilled_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "fulfilled_total",
                    "description": "The summary's fulfilled total."
                  },
                  {
                    "type": "number",
                    "title": "fulfilled_total",
                    "description": "The summary's fulfilled total."
                  },
                  {
                    "type": "string",
                    "title": "fulfilled_total",
                    "description": "The summary's fulfilled total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's fulfilled total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "returned_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "returned_total",
                    "description": "The summary's returned total."
                  },
                  {
                    "type": "number",
                    "title": "returned_total",
                    "description": "The summary's returned total."
                  },
                  {
                    "type": "string",
                    "title": "returned_total",
                    "description": "The summary's returned total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's returned total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "return_request_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "return_request_total",
                    "description": "The summary's return request total."
                  },
                  {
                    "type": "number",
                    "title": "return_request_total",
                    "description": "The summary's return request total."
                  },
                  {
                    "type": "string",
                    "title": "return_request_total",
                    "description": "The summary's return request total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's return request total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "write_off_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "write_off_total",
                    "description": "The summary's write off total."
                  },
                  {
                    "type": "number",
                    "title": "write_off_total",
                    "description": "The summary's write off total."
                  },
                  {
                    "type": "string",
                    "title": "write_off_total",
                    "description": "The summary's write off total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's write off total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "projected_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "projected_total",
                    "description": "The summary's projected total."
                  },
                  {
                    "type": "number",
                    "title": "projected_total",
                    "description": "The summary's projected total."
                  },
                  {
                    "type": "string",
                    "title": "projected_total",
                    "description": "The summary's projected total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's projected total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "net_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "net_total",
                    "description": "The summary's net total."
                  },
                  {
                    "type": "number",
                    "title": "net_total",
                    "description": "The summary's net total."
                  },
                  {
                    "type": "string",
                    "title": "net_total",
                    "description": "The summary's net total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's net total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "net_subtotal": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "net_subtotal",
                    "description": "The summary's net subtotal."
                  },
                  {
                    "type": "number",
                    "title": "net_subtotal",
                    "description": "The summary's net subtotal."
                  },
                  {
                    "type": "string",
                    "title": "net_subtotal",
                    "description": "The summary's net subtotal."
                  },
                  {
                    "type": "object",
                    "description": "The summary's net subtotal.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "net_total_tax": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "net_total_tax",
                    "description": "The summary's net total tax."
                  },
                  {
                    "type": "number",
                    "title": "net_total_tax",
                    "description": "The summary's net total tax."
                  },
                  {
                    "type": "string",
                    "title": "net_total_tax",
                    "description": "The summary's net total tax."
                  },
                  {
                    "type": "object",
                    "description": "The summary's net total tax.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "balance": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "balance",
                    "description": "The summary's balance."
                  },
                  {
                    "type": "number",
                    "title": "balance",
                    "description": "The summary's balance."
                  },
                  {
                    "type": "string",
                    "title": "balance",
                    "description": "The summary's balance."
                  },
                  {
                    "type": "object",
                    "description": "The summary's balance.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "paid_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "paid_total",
                    "description": "The summary's paid total."
                  },
                  {
                    "type": "number",
                    "title": "paid_total",
                    "description": "The summary's paid total."
                  },
                  {
                    "type": "string",
                    "title": "paid_total",
                    "description": "The summary's paid total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's paid total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "refunded_total": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "refunded_total",
                    "description": "The summary's refunded total."
                  },
                  {
                    "type": "number",
                    "title": "refunded_total",
                    "description": "The summary's refunded total."
                  },
                  {
                    "type": "string",
                    "title": "refunded_total",
                    "description": "The summary's refunded total."
                  },
                  {
                    "type": "object",
                    "description": "The summary's refunded total.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "pending_difference": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "pending_difference",
                    "description": "The summary's pending difference."
                  },
                  {
                    "type": "number",
                    "title": "pending_difference",
                    "description": "The summary's pending difference."
                  },
                  {
                    "type": "string",
                    "title": "pending_difference",
                    "description": "The summary's pending difference."
                  },
                  {
                    "type": "object",
                    "description": "The summary's pending difference.",
                    "x-schemaName": "IBigNumber"
                  }
                ]
              },
              "raw_pending_difference": {
                "type": "object",
                "description": "The summary's raw pending difference."
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The order preview's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order preview's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order preview's updated at."
          },
          "original_item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_total",
                "description": "The order preview's original item total."
              },
              {
                "type": "number",
                "title": "original_item_total",
                "description": "The order preview's original item total."
              },
              {
                "type": "string",
                "title": "original_item_total",
                "description": "The order preview's original item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_subtotal",
                "description": "The order preview's original item subtotal."
              },
              {
                "type": "number",
                "title": "original_item_subtotal",
                "description": "The order preview's original item subtotal."
              },
              {
                "type": "string",
                "title": "original_item_subtotal",
                "description": "The order preview's original item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_tax_total",
                "description": "The order preview's original item tax total."
              },
              {
                "type": "number",
                "title": "original_item_tax_total",
                "description": "The order preview's original item tax total."
              },
              {
                "type": "string",
                "title": "original_item_tax_total",
                "description": "The order preview's original item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_total",
                "description": "The order preview's item total."
              },
              {
                "type": "number",
                "title": "item_total",
                "description": "The order preview's item total."
              },
              {
                "type": "string",
                "title": "item_total",
                "description": "The order preview's item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The order preview's item subtotal."
              },
              {
                "type": "number",
                "title": "item_subtotal",
                "description": "The order preview's item subtotal."
              },
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The order preview's item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The order preview's item tax total."
              },
              {
                "type": "number",
                "title": "item_tax_total",
                "description": "The order preview's item tax total."
              },
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The order preview's item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The order preview's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The order preview's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The order preview's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The order preview's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The order preview's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The order preview's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The order preview's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The order preview's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The order preview's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The order preview's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The order preview's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The order preview's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The order preview's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The order preview's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The order preview's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The order preview's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The order preview's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The order preview's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The order preview's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The order preview's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The order preview's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The order preview's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The order preview's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The order preview's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "gift_card_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "gift_card_total",
                "description": "The order preview's gift card total."
              },
              {
                "type": "number",
                "title": "gift_card_total",
                "description": "The order preview's gift card total."
              },
              {
                "type": "string",
                "title": "gift_card_total",
                "description": "The order preview's gift card total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "gift_card_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "gift_card_tax_total",
                "description": "The order preview's gift card tax total."
              },
              {
                "type": "number",
                "title": "gift_card_tax_total",
                "description": "The order preview's gift card tax total."
              },
              {
                "type": "string",
                "title": "gift_card_tax_total",
                "description": "The order preview's gift card tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_total",
                "description": "The order preview's shipping total."
              },
              {
                "type": "number",
                "title": "shipping_total",
                "description": "The order preview's shipping total."
              },
              {
                "type": "string",
                "title": "shipping_total",
                "description": "The order preview's shipping total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_subtotal",
                "description": "The order preview's shipping subtotal."
              },
              {
                "type": "number",
                "title": "shipping_subtotal",
                "description": "The order preview's shipping subtotal."
              },
              {
                "type": "string",
                "title": "shipping_subtotal",
                "description": "The order preview's shipping subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_tax_total",
                "description": "The order preview's shipping tax total."
              },
              {
                "type": "number",
                "title": "shipping_tax_total",
                "description": "The order preview's shipping tax total."
              },
              {
                "type": "string",
                "title": "shipping_tax_total",
                "description": "The order preview's shipping tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_total",
                "description": "The order preview's original shipping total."
              },
              {
                "type": "number",
                "title": "original_shipping_total",
                "description": "The order preview's original shipping total."
              },
              {
                "type": "string",
                "title": "original_shipping_total",
                "description": "The order preview's original shipping total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_subtotal",
                "description": "The order preview's original shipping subtotal."
              },
              {
                "type": "number",
                "title": "original_shipping_subtotal",
                "description": "The order preview's original shipping subtotal."
              },
              {
                "type": "string",
                "title": "original_shipping_subtotal",
                "description": "The order preview's original shipping subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_tax_total",
                "description": "The order preview's original shipping tax total."
              },
              {
                "type": "number",
                "title": "original_shipping_tax_total",
                "description": "The order preview's original shipping tax total."
              },
              {
                "type": "string",
                "title": "original_shipping_tax_total",
                "description": "The order preview's original shipping tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "canceled_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order preview's canceled at."
              },
              {
                "type": "string",
                "title": "canceled_at",
                "description": "The order preview's canceled at.",
                "format": "date-time"
              }
            ]
          },
          "raw_original_item_total": {
            "type": "object",
            "description": "The order preview's raw original item total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original item total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original item total's value."
                  }
                ]
              }
            }
          },
          "raw_original_item_subtotal": {
            "type": "object",
            "description": "The order preview's raw original item subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original item subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original item subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_original_item_tax_total": {
            "type": "object",
            "description": "The order preview's raw original item tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original item tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original item tax total's value."
                  }
                ]
              }
            }
          },
          "raw_item_total": {
            "type": "object",
            "description": "The order preview's raw item total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw item total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw item total's value."
                  }
                ]
              }
            }
          },
          "raw_item_subtotal": {
            "type": "object",
            "description": "The order preview's raw item subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw item subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw item subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_item_tax_total": {
            "type": "object",
            "description": "The order preview's raw item tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw item tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw item tax total's value."
                  }
                ]
              }
            }
          },
          "raw_original_total": {
            "type": "object",
            "description": "The order preview's raw original total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original total's value."
                  }
                ]
              }
            }
          },
          "raw_original_subtotal": {
            "type": "object",
            "description": "The order preview's raw original subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_original_tax_total": {
            "type": "object",
            "description": "The order preview's raw original tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original tax total's value."
                  }
                ]
              }
            }
          },
          "raw_total": {
            "type": "object",
            "description": "The order preview's raw total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw total's value."
                  }
                ]
              }
            }
          },
          "raw_subtotal": {
            "type": "object",
            "description": "The order preview's raw subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_tax_total": {
            "type": "object",
            "description": "The order preview's raw tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw tax total's value."
                  }
                ]
              }
            }
          },
          "raw_discount_total": {
            "type": "object",
            "description": "The order preview's raw discount total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw discount total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw discount total's value."
                  }
                ]
              }
            }
          },
          "raw_discount_tax_total": {
            "type": "object",
            "description": "The order preview's raw discount tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw discount tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw discount tax total's value."
                  }
                ]
              }
            }
          },
          "raw_gift_card_total": {
            "type": "object",
            "description": "The order preview's raw gift card total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw gift card total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw gift card total's value."
                  }
                ]
              }
            }
          },
          "raw_gift_card_tax_total": {
            "type": "object",
            "description": "The order preview's raw gift card tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw gift card tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw gift card tax total's value."
                  }
                ]
              }
            }
          },
          "raw_shipping_total": {
            "type": "object",
            "description": "The order preview's raw shipping total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw shipping total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw shipping total's value."
                  }
                ]
              }
            }
          },
          "raw_shipping_subtotal": {
            "type": "object",
            "description": "The order preview's raw shipping subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw shipping subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw shipping subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_shipping_tax_total": {
            "type": "object",
            "description": "The order preview's raw shipping tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw shipping tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw shipping tax total's value."
                  }
                ]
              }
            }
          },
          "raw_original_shipping_total": {
            "type": "object",
            "description": "The order preview's raw original shipping total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original shipping total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original shipping total's value."
                  }
                ]
              }
            }
          },
          "raw_original_shipping_subtotal": {
            "type": "object",
            "description": "The order preview's raw original shipping subtotal.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original shipping subtotal's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original shipping subtotal's value."
                  }
                ]
              }
            }
          },
          "raw_original_shipping_tax_total": {
            "type": "object",
            "description": "The order preview's raw original shipping tax total.",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "oneOf": [
                  {
                    "type": "string",
                    "title": "value",
                    "description": "The raw original shipping tax total's value."
                  },
                  {
                    "type": "number",
                    "title": "value",
                    "description": "The raw original shipping tax total's value."
                  }
                ]
              }
            }
          }
        }
      },
      "OrderShippingMethodAdjustment": {
        "type": "object",
        "description": "The adjustment's adjustments.",
        "x-schemaName": "OrderShippingMethodAdjustment"
      },
      "OrderShippingMethodTaxLine": {
        "type": "object",
        "description": "The tax line's tax lines.",
        "x-schemaName": "OrderShippingMethodTaxLine"
      },
      "OrderTransaction": {
        "type": "object",
        "description": "The transaction's transactions.",
        "x-schemaName": "OrderTransaction",
        "required": [
          "id",
          "order_id",
          "order",
          "amount",
          "raw_amount",
          "currency_code",
          "reference",
          "reference_id",
          "created_at",
          "updated_at",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The transaction's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The transaction's order id."
          },
          "order": {
            "type": "object"
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The transaction's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The transaction's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The transaction's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "raw_amount": {
            "type": "object",
            "description": "The transaction's raw amount."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The transaction's currency code."
          },
          "reference": {
            "type": "string",
            "title": "reference",
            "description": "The transaction's reference."
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id",
            "description": "The transaction's reference id."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The transaction's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The transaction's updated at."
          },
          "metadata": {
            "type": "object",
            "description": "The transaction's metadata."
          }
        }
      },
      "RefundReasonResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "RefundReasonResponse",
        "required": [
          "refund_reason"
        ],
        "properties": {
          "refund_reason": {
            "$ref": "#/components/schemas/AdminRefundReason"
          }
        }
      },
      "ReservationResponse": {
        "type": "object",
        "description": "The reservation's details.",
        "x-schemaName": "ReservationResponse",
        "required": [
          "id",
          "line_item_id",
          "location_id",
          "quantity",
          "external_id",
          "description",
          "inventory_item_id",
          "inventory_item"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The reservation's ID."
          },
          "line_item_id": {
            "type": "string",
            "title": "line_item_id",
            "description": "The reservation's line item id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The reservation's location id."
          },
          "quantity": {
            "type": "string",
            "title": "quantity",
            "description": "The reservation's quantity."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The reservation's external id."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The reservation's description."
          },
          "inventory_item_id": {
            "type": "string",
            "title": "inventory_item_id",
            "description": "The reservation's inventory item id."
          },
          "inventory_item": {
            "type": "object",
            "description": "The reservation's inventory item."
          },
          "metadata": {
            "type": "object",
            "description": "The reservation's metadata."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The reservation's created by."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The reservation's deleted at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The reservation's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The reservation's updated at."
          }
        }
      },
      "Return": {
        "type": "object",
        "description": "The order change's return order.",
        "x-schemaName": "Return"
      },
      "StoreAddCartLineItem": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreAddCartLineItem",
        "required": [
          "variant_id",
          "quantity"
        ],
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The cart's variant id."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The cart's quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The cart's metadata."
          }
        }
      },
      "StoreCalculateCartTaxes": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCalculateCartTaxes",
        "properties": {
          "fields": {
            "type": "string",
            "title": "fields",
            "description": "The cart's fields."
          }
        }
      },
      "StoreCart": {
        "type": "object",
        "description": "The cart's parent.",
        "x-schemaName": "StoreCart",
        "required": [
          "id",
          "currency_code",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "region": {
            "$ref": "#/components/schemas/BaseRegion"
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The parent's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The parent's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The parent's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The parent's email.",
            "format": "email"
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The parent's currency code."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/BaseCartAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BaseCartAddress"
          },
          "items": {
            "type": "array",
            "description": "The parent's items.",
            "items": {
              "$ref": "#/components/schemas/BaseCartLineItem"
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "The parent's shipping methods.",
            "items": {
              "$ref": "#/components/schemas/BaseCartShippingMethod"
            }
          },
          "payment_collection": {
            "$ref": "#/components/schemas/BasePaymentCollection"
          },
          "metadata": {
            "type": "object",
            "description": "The parent's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          },
          "original_item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_total",
                "description": "The parent's original item total."
              },
              {
                "type": "number",
                "title": "original_item_total",
                "description": "The parent's original item total."
              },
              {
                "type": "string",
                "title": "original_item_total",
                "description": "The parent's original item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_subtotal",
                "description": "The parent's original item subtotal."
              },
              {
                "type": "number",
                "title": "original_item_subtotal",
                "description": "The parent's original item subtotal."
              },
              {
                "type": "string",
                "title": "original_item_subtotal",
                "description": "The parent's original item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_item_tax_total",
                "description": "The parent's original item tax total."
              },
              {
                "type": "number",
                "title": "original_item_tax_total",
                "description": "The parent's original item tax total."
              },
              {
                "type": "string",
                "title": "original_item_tax_total",
                "description": "The parent's original item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_total",
                "description": "The parent's item total."
              },
              {
                "type": "number",
                "title": "item_total",
                "description": "The parent's item total."
              },
              {
                "type": "string",
                "title": "item_total",
                "description": "The parent's item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The parent's item subtotal."
              },
              {
                "type": "number",
                "title": "item_subtotal",
                "description": "The parent's item subtotal."
              },
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The parent's item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The parent's item tax total."
              },
              {
                "type": "number",
                "title": "item_tax_total",
                "description": "The parent's item tax total."
              },
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The parent's item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The parent's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The parent's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The parent's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The parent's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The parent's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The parent's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The parent's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The parent's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The parent's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The parent's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The parent's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The parent's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The parent's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The parent's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The parent's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The parent's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The parent's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The parent's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The parent's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The parent's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The parent's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The parent's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The parent's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The parent's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "gift_card_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "gift_card_total",
                "description": "The parent's gift card total."
              },
              {
                "type": "number",
                "title": "gift_card_total",
                "description": "The parent's gift card total."
              },
              {
                "type": "string",
                "title": "gift_card_total",
                "description": "The parent's gift card total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "gift_card_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "gift_card_tax_total",
                "description": "The parent's gift card tax total."
              },
              {
                "type": "number",
                "title": "gift_card_tax_total",
                "description": "The parent's gift card tax total."
              },
              {
                "type": "string",
                "title": "gift_card_tax_total",
                "description": "The parent's gift card tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_total",
                "description": "The parent's shipping total."
              },
              {
                "type": "number",
                "title": "shipping_total",
                "description": "The parent's shipping total."
              },
              {
                "type": "string",
                "title": "shipping_total",
                "description": "The parent's shipping total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_subtotal",
                "description": "The parent's shipping subtotal."
              },
              {
                "type": "number",
                "title": "shipping_subtotal",
                "description": "The parent's shipping subtotal."
              },
              {
                "type": "string",
                "title": "shipping_subtotal",
                "description": "The parent's shipping subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "shipping_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "shipping_tax_total",
                "description": "The parent's shipping tax total."
              },
              {
                "type": "number",
                "title": "shipping_tax_total",
                "description": "The parent's shipping tax total."
              },
              {
                "type": "string",
                "title": "shipping_tax_total",
                "description": "The parent's shipping tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_total",
                "description": "The parent's original shipping total."
              },
              {
                "type": "number",
                "title": "original_shipping_total",
                "description": "The parent's original shipping total."
              },
              {
                "type": "string",
                "title": "original_shipping_total",
                "description": "The parent's original shipping total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_subtotal",
                "description": "The parent's original shipping subtotal."
              },
              {
                "type": "number",
                "title": "original_shipping_subtotal",
                "description": "The parent's original shipping subtotal."
              },
              {
                "type": "string",
                "title": "original_shipping_subtotal",
                "description": "The parent's original shipping subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_shipping_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_shipping_tax_total",
                "description": "The parent's original shipping tax total."
              },
              {
                "type": "number",
                "title": "original_shipping_tax_total",
                "description": "The parent's original shipping tax total."
              },
              {
                "type": "string",
                "title": "original_shipping_tax_total",
                "description": "The parent's original shipping tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          }
        }
      },
      "StoreCartAddress": {
        "type": "object",
        "description": "The cart's billing address.",
        "x-schemaName": "StoreCartAddress",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The billing address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The billing address's customer id."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The billing address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The billing address's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The billing address's phone."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The billing address's company."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The billing address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The billing address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The billing address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The billing address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The billing address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The billing address's postal code."
          },
          "metadata": {
            "type": "object",
            "description": "The billing address's metadata."
          },
          "created_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "created_at",
                "description": "The billing address's created at."
              },
              {
                "type": "string",
                "title": "created_at",
                "description": "The billing address's created at.",
                "format": "date-time"
              }
            ]
          },
          "updated_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "updated_at",
                "description": "The billing address's updated at."
              },
              {
                "type": "string",
                "title": "updated_at",
                "description": "The billing address's updated at.",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "StoreCartLineItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "StoreCartLineItem",
        "required": [
          "id",
          "title",
          "quantity",
          "requires_shipping",
          "is_discountable",
          "is_tax_inclusive",
          "unit_price",
          "cart",
          "cart_id",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The item's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The item's title."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The item's subtitle."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The item's thumbnail."
          },
          "quantity": {
            "oneOf": [
              {
                "type": "string",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "type": "number",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "type": "string",
                "title": "quantity",
                "description": "The item's quantity."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "product": {
            "$ref": "#/components/schemas/BaseProduct"
          },
          "product_id": {
            "type": "string",
            "title": "product_id",
            "description": "The item's product id."
          },
          "product_title": {
            "type": "string",
            "title": "product_title",
            "description": "The item's product title."
          },
          "product_description": {
            "type": "string",
            "title": "product_description",
            "description": "The item's product description."
          },
          "product_subtitle": {
            "type": "string",
            "title": "product_subtitle",
            "description": "The item's product subtitle."
          },
          "product_type": {
            "type": "string",
            "title": "product_type",
            "description": "The item's product type."
          },
          "product_collection": {
            "type": "string",
            "title": "product_collection",
            "description": "The item's product collection."
          },
          "product_handle": {
            "type": "string",
            "title": "product_handle",
            "description": "The item's product handle."
          },
          "variant": {
            "$ref": "#/components/schemas/BaseProductVariant"
          },
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "description": "The item's variant id."
          },
          "variant_sku": {
            "type": "string",
            "title": "variant_sku",
            "description": "The item's variant sku."
          },
          "variant_barcode": {
            "type": "string",
            "title": "variant_barcode",
            "description": "The item's variant barcode."
          },
          "variant_title": {
            "type": "string",
            "title": "variant_title",
            "description": "The item's variant title."
          },
          "variant_option_values": {
            "type": "object",
            "description": "The item's variant option values."
          },
          "requires_shipping": {
            "type": "boolean",
            "title": "requires_shipping",
            "description": "The item's requires shipping."
          },
          "is_discountable": {
            "type": "boolean",
            "title": "is_discountable",
            "description": "The item's is discountable."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The item's is tax inclusive."
          },
          "compare_at_unit_price": {
            "oneOf": [
              {
                "type": "string",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "type": "number",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "type": "string",
                "title": "compare_at_unit_price",
                "description": "The item's compare at unit price."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "unit_price": {
            "oneOf": [
              {
                "type": "string",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "type": "number",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "type": "string",
                "title": "unit_price",
                "description": "The item's unit price."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_lines": {
            "type": "array",
            "description": "The item's tax lines.",
            "items": {
              "$ref": "#/components/schemas/BaseLineItemTaxLine"
            }
          },
          "adjustments": {
            "type": "array",
            "description": "The item's adjustments.",
            "items": {
              "$ref": "#/components/schemas/BaseLineItemAdjustment"
            }
          },
          "cart": {
            "$ref": "#/components/schemas/BaseCart"
          },
          "cart_id": {
            "type": "string",
            "title": "cart_id",
            "description": "The item's cart id."
          },
          "metadata": {
            "type": "object",
            "description": "The item's metadata."
          },
          "created_at": {
            "type": "string",
            "title": "created_at",
            "description": "The item's created at.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "title": "updated_at",
            "description": "The item's updated at.",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "title": "deleted_at",
            "description": "The item's deleted at.",
            "format": "date-time"
          },
          "original_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "type": "number",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "type": "string",
                "title": "original_total",
                "description": "The item's original total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "type": "number",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "type": "string",
                "title": "original_subtotal",
                "description": "The item's original subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "original_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "type": "number",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "type": "string",
                "title": "original_tax_total",
                "description": "The item's original tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "type": "number",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "type": "string",
                "title": "item_total",
                "description": "The item's item total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "type": "number",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "type": "string",
                "title": "item_subtotal",
                "description": "The item's item subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "item_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "type": "number",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "type": "string",
                "title": "item_tax_total",
                "description": "The item's item tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "total": {
            "oneOf": [
              {
                "type": "string",
                "title": "total",
                "description": "The item's total."
              },
              {
                "type": "number",
                "title": "total",
                "description": "The item's total."
              },
              {
                "type": "string",
                "title": "total",
                "description": "The item's total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "subtotal": {
            "oneOf": [
              {
                "type": "string",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "type": "number",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "type": "string",
                "title": "subtotal",
                "description": "The item's subtotal."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "type": "number",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "type": "string",
                "title": "tax_total",
                "description": "The item's tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "type": "number",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "type": "string",
                "title": "discount_total",
                "description": "The item's discount total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "discount_tax_total": {
            "oneOf": [
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "type": "number",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "type": "string",
                "title": "discount_tax_total",
                "description": "The item's discount tax total."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          }
        }
      },
      "StoreCartResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCartResponse",
        "required": [
          "cart"
        ],
        "properties": {
          "cart": {
            "$ref": "#/components/schemas/StoreCart"
          }
        }
      },
      "StoreCollection": {
        "type": "object",
        "description": "The collection's details.",
        "x-schemaName": "StoreCollection",
        "required": [
          "id",
          "title",
          "handle",
          "created_at",
          "updated_at",
          "deleted_at",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The collection's ID."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The collection's title."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The collection's handle."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The collection's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The collection's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The collection's deleted at."
          },
          "products": {
            "type": "array",
            "description": "The collection's products.",
            "items": {
              "$ref": "#/components/schemas/AdminProduct"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The collection's metadata."
          }
        }
      },
      "StoreCollectionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCollectionResponse",
        "required": [
          "collection"
        ],
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/StoreCollection"
          }
        }
      },
      "StoreCreateCustomer": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCreateCustomer",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "title": "email",
            "description": "The customer's email.",
            "format": "email"
          },
          "company_name": {
            "type": "string",
            "title": "company_name",
            "description": "The customer's company name."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The customer's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The customer's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The customer's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The customer's metadata."
          }
        }
      },
      "StoreCreatePaymentCollection": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCreatePaymentCollection",
        "required": [
          "cart_id"
        ],
        "properties": {
          "cart_id": {
            "type": "string",
            "title": "cart_id",
            "description": "The payment collection's cart id."
          }
        }
      },
      "StoreCreateReturn": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCreateReturn",
        "required": [
          "order_id",
          "items",
          "return_shipping"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The return's order id."
          },
          "items": {
            "type": "array",
            "description": "The return's items.",
            "items": {
              "$ref": "#/components/schemas/StoreCreateReturnItem"
            }
          },
          "return_shipping": {
            "$ref": "#/components/schemas/StoreCreateReturnShipping"
          },
          "note": {
            "type": "string",
            "title": "note",
            "description": "The return's note."
          },
          "receive_now": {
            "type": "boolean",
            "title": "receive_now",
            "description": "The return's receive now."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The return's location id."
          }
        }
      },
      "StoreCreateReturnItem": {
        "type": "object",
        "description": "The item's items.",
        "x-schemaName": "StoreCreateReturnItem",
        "required": [
          "id",
          "quantity"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The item's ID."
          },
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The item's quantity."
          },
          "reason_id": {
            "type": "string",
            "title": "reason_id",
            "description": "The item's reason id."
          },
          "note": {
            "type": "string",
            "title": "note",
            "description": "The item's note."
          }
        }
      },
      "StoreCreateReturnShipping": {
        "type": "object",
        "description": "The return's return shipping.",
        "x-schemaName": "StoreCreateReturnShipping",
        "required": [
          "option_id"
        ],
        "properties": {
          "option_id": {
            "type": "string",
            "title": "option_id",
            "description": "The return shipping's option id."
          },
          "price": {
            "type": "number",
            "title": "price",
            "description": "The return shipping's price."
          }
        }
      },
      "StoreCurrency": {
        "type": "object",
        "description": "The currency's details.",
        "x-schemaName": "StoreCurrency",
        "required": [
          "code",
          "symbol",
          "symbol_native",
          "name",
          "decimal_digits",
          "rounding",
          "raw_rounding",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "code": {
            "type": "string",
            "title": "code",
            "description": "The currency's code."
          },
          "symbol": {
            "type": "string",
            "title": "symbol",
            "description": "The currency's symbol."
          },
          "symbol_native": {
            "type": "string",
            "title": "symbol_native",
            "description": "The currency's symbol native."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The currency's name."
          },
          "decimal_digits": {
            "type": "number",
            "title": "decimal_digits",
            "description": "The currency's decimal digits."
          },
          "rounding": {
            "type": "number",
            "title": "rounding",
            "description": "The currency's rounding."
          },
          "raw_rounding": {
            "type": "object",
            "description": "The currency's raw rounding.",
            "required": [
              "value",
              "precision"
            ],
            "properties": {
              "value": {
                "type": "string",
                "title": "value",
                "description": "The raw rounding's value."
              },
              "precision": {
                "type": "number",
                "title": "precision",
                "description": "The raw rounding's precision."
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The currency's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The currency's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The currency's deleted at."
          }
        }
      },
      "StoreCurrencyListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCurrencyListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "currencies"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The currency's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The currency's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The currency's count."
          },
          "currencies": {
            "type": "array",
            "description": "The currency's currencies.",
            "items": {
              "$ref": "#/components/schemas/StoreCurrency"
            }
          }
        }
      },
      "StoreCurrencyResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCurrencyResponse",
        "required": [
          "currency"
        ],
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/StoreCurrency"
          }
        }
      },
      "StoreCustomer": {
        "type": "object",
        "description": "The customer's parent.",
        "x-schemaName": "StoreCustomer",
        "required": [
          "id",
          "email",
          "default_billing_address_id",
          "default_shipping_address_id",
          "company_name",
          "first_name",
          "last_name",
          "addresses"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The parent's ID."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The parent's email.",
            "format": "email"
          },
          "default_billing_address_id": {
            "type": "string",
            "title": "default_billing_address_id",
            "description": "The parent's default billing address id."
          },
          "default_shipping_address_id": {
            "type": "string",
            "title": "default_shipping_address_id",
            "description": "The parent's default shipping address id."
          },
          "company_name": {
            "type": "string",
            "title": "company_name",
            "description": "The parent's company name."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The parent's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The parent's last name."
          },
          "addresses": {
            "type": "array",
            "description": "The parent's addresses.",
            "items": {
              "$ref": "#/components/schemas/BaseCustomerAddress"
            }
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The parent's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The parent's metadata."
          },
          "created_by": {
            "type": "string",
            "title": "created_by",
            "description": "The parent's created by."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The parent's deleted at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The parent's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The parent's updated at."
          }
        }
      },
      "StoreCustomerAddress": {
        "type": "object",
        "description": "The customer's address.",
        "x-schemaName": "StoreCustomerAddress",
        "required": [
          "id",
          "address_name",
          "is_default_shipping",
          "is_default_billing",
          "customer_id",
          "company",
          "first_name",
          "last_name",
          "address_1",
          "address_2",
          "city",
          "country_code",
          "province",
          "postal_code",
          "phone",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The address's ID."
          },
          "address_name": {
            "type": "string",
            "title": "address_name",
            "description": "The address's address name."
          },
          "is_default_shipping": {
            "type": "boolean",
            "title": "is_default_shipping",
            "description": "The address's is default shipping."
          },
          "is_default_billing": {
            "type": "boolean",
            "title": "is_default_billing",
            "description": "The address's is default billing."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The address's customer id."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The address's company."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The address's last name."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The address's postal code."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The address's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The address's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The address's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The address's updated at."
          }
        }
      },
      "StoreCustomerAddressListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCustomerAddressListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "addresses"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The customer's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The customer's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The customer's count."
          },
          "addresses": {
            "type": "array",
            "description": "The customer's addresses.",
            "items": {
              "$ref": "#/components/schemas/StoreCustomerAddress"
            }
          }
        }
      },
      "StoreCustomerAddressResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCustomerAddressResponse",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/StoreCustomerAddress"
          }
        }
      },
      "StoreCustomerResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreCustomerResponse",
        "required": [
          "customer"
        ],
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/StoreCustomer"
          }
        }
      },
      "StoreOrder": {
        "type": "object",
        "description": "The cart's order.",
        "x-schemaName": "StoreOrder",
        "required": [
          "id",
          "version",
          "region_id",
          "customer_id",
          "sales_channel_id",
          "email",
          "currency_code",
          "items",
          "shipping_methods",
          "payment_status",
          "fulfillment_status",
          "summary",
          "metadata",
          "created_at",
          "updated_at",
          "original_item_total",
          "original_item_subtotal",
          "original_item_tax_total",
          "item_total",
          "item_subtotal",
          "item_tax_total",
          "original_total",
          "original_subtotal",
          "original_tax_total",
          "total",
          "subtotal",
          "tax_total",
          "discount_total",
          "discount_tax_total",
          "gift_card_total",
          "gift_card_tax_total",
          "shipping_total",
          "shipping_subtotal",
          "shipping_tax_total",
          "original_shipping_total",
          "original_shipping_subtotal",
          "original_shipping_tax_total"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The order's ID."
          },
          "version": {
            "type": "number",
            "title": "version",
            "description": "The order's version."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The order's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The order's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The order's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The order's email.",
            "format": "email"
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The order's currency code."
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The order's display id."
          },
          "shipping_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "billing_address": {
            "$ref": "#/components/schemas/BaseOrderAddress"
          },
          "items": {
            "type": "array",
            "description": "The order's items.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderLineItem"
            }
          },
          "shipping_methods": {
            "type": "array",
            "description": "The order's shipping methods.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderShippingMethod"
            }
          },
          "payment_collections": {
            "type": "array",
            "description": "The order's payment collections.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentCollection"
            }
          },
          "payment_status": {
            "type": "string",
            "description": "The order's payment status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized",
              "captured",
              "partially_captured",
              "partially_refunded",
              "refunded",
              "requires_action"
            ]
          },
          "fulfillments": {
            "type": "array",
            "description": "The order's fulfillments.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderFulfillment"
            }
          },
          "fulfillment_status": {
            "type": "string",
            "description": "The order's fulfillment status.",
            "enum": [
              "canceled",
              "not_fulfilled",
              "partially_fulfilled",
              "fulfilled",
              "partially_shipped",
              "shipped",
              "partially_delivered",
              "delivered"
            ]
          },
          "transactions": {
            "type": "array",
            "description": "The order's transactions.",
            "items": {
              "$ref": "#/components/schemas/BaseOrderTransaction"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/BaseOrderSummary"
          },
          "metadata": {
            "type": "object",
            "description": "The order's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The order's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The order's updated at."
          },
          "original_item_total": {
            "type": "number",
            "title": "original_item_total",
            "description": "The order's original item total."
          },
          "original_item_subtotal": {
            "type": "number",
            "title": "original_item_subtotal",
            "description": "The order's original item subtotal."
          },
          "original_item_tax_total": {
            "type": "number",
            "title": "original_item_tax_total",
            "description": "The order's original item tax total."
          },
          "item_total": {
            "type": "number",
            "title": "item_total",
            "description": "The order's item total."
          },
          "item_subtotal": {
            "type": "number",
            "title": "item_subtotal",
            "description": "The order's item subtotal."
          },
          "item_tax_total": {
            "type": "number",
            "title": "item_tax_total",
            "description": "The order's item tax total."
          },
          "original_total": {
            "type": "number",
            "title": "original_total",
            "description": "The order's original total."
          },
          "original_subtotal": {
            "type": "number",
            "title": "original_subtotal",
            "description": "The order's original subtotal."
          },
          "original_tax_total": {
            "type": "number",
            "title": "original_tax_total",
            "description": "The order's original tax total."
          },
          "total": {
            "type": "number",
            "title": "total",
            "description": "The order's total."
          },
          "subtotal": {
            "type": "number",
            "title": "subtotal",
            "description": "The order's subtotal."
          },
          "tax_total": {
            "type": "number",
            "title": "tax_total",
            "description": "The order's tax total."
          },
          "discount_total": {
            "type": "number",
            "title": "discount_total",
            "description": "The order's discount total."
          },
          "discount_tax_total": {
            "type": "number",
            "title": "discount_tax_total",
            "description": "The order's discount tax total."
          },
          "gift_card_total": {
            "type": "number",
            "title": "gift_card_total",
            "description": "The order's gift card total."
          },
          "gift_card_tax_total": {
            "type": "number",
            "title": "gift_card_tax_total",
            "description": "The order's gift card tax total."
          },
          "shipping_total": {
            "type": "number",
            "title": "shipping_total",
            "description": "The order's shipping total."
          },
          "shipping_subtotal": {
            "type": "number",
            "title": "shipping_subtotal",
            "description": "The order's shipping subtotal."
          },
          "shipping_tax_total": {
            "type": "number",
            "title": "shipping_tax_total",
            "description": "The order's shipping tax total."
          },
          "original_shipping_total": {
            "type": "number",
            "title": "original_shipping_total",
            "description": "The order's original shipping total."
          },
          "original_shipping_subtotal": {
            "type": "number",
            "title": "original_shipping_subtotal",
            "description": "The order's original shipping subtotal."
          },
          "original_shipping_tax_total": {
            "type": "number",
            "title": "original_shipping_tax_total",
            "description": "The order's original shipping tax total."
          }
        }
      },
      "StoreOrderResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreOrderResponse",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/StoreOrder"
          }
        }
      },
      "StorePaymentCollection": {
        "type": "object",
        "description": "The payment collection's details.",
        "x-schemaName": "StorePaymentCollection",
        "required": [
          "id",
          "currency_code",
          "region_id",
          "amount",
          "status",
          "payment_providers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment collection's ID."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The payment collection's currency code."
          },
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The payment collection's region id."
          },
          "amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "number",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "type": "string",
                "title": "amount",
                "description": "The payment collection's amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "authorized_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "number",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "type": "string",
                "title": "authorized_amount",
                "description": "The payment collection's authorized amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "captured_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "number",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "type": "string",
                "title": "captured_amount",
                "description": "The payment collection's captured amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "refunded_amount": {
            "oneOf": [
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "number",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "type": "string",
                "title": "refunded_amount",
                "description": "The payment collection's refunded amount."
              },
              {
                "$ref": "#/components/schemas/IBigNumber"
              }
            ]
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at."
              },
              {
                "type": "string",
                "title": "completed_at",
                "description": "The payment collection's completed at.",
                "format": "date-time"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The payment collection's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The payment collection's updated at."
          },
          "metadata": {
            "type": "object",
            "description": "The payment collection's metadata."
          },
          "status": {
            "type": "string",
            "description": "The payment collection's status.",
            "enum": [
              "canceled",
              "not_paid",
              "awaiting",
              "authorized",
              "partially_authorized"
            ]
          },
          "payment_providers": {
            "type": "array",
            "description": "The payment collection's payment providers.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentProvider"
            }
          },
          "payment_sessions": {
            "type": "array",
            "description": "The payment collection's payment sessions.",
            "items": {
              "$ref": "#/components/schemas/BasePaymentSession"
            }
          },
          "payments": {
            "type": "array",
            "description": "The payment collection's payments.",
            "items": {
              "$ref": "#/components/schemas/BasePayment"
            }
          }
        }
      },
      "StorePaymentCollectionResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StorePaymentCollectionResponse",
        "required": [
          "payment_collection"
        ],
        "properties": {
          "payment_collection": {
            "$ref": "#/components/schemas/StorePaymentCollection"
          }
        }
      },
      "StorePaymentProvider": {
        "type": "object",
        "description": "The payment provider's payment providers.",
        "x-schemaName": "StorePaymentProvider",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The payment provider's ID."
          }
        }
      },
      "StoreProduct": {
        "type": "object",
        "description": "The product's details.",
        "x-schemaName": "StoreProduct",
        "required": [
          "length",
          "title",
          "status",
          "options",
          "description",
          "id",
          "created_at",
          "updated_at",
          "variants",
          "handle",
          "subtitle",
          "is_giftcard",
          "thumbnail",
          "width",
          "weight",
          "height",
          "origin_country",
          "hs_code",
          "mid_code",
          "material",
          "collection_id",
          "type_id",
          "images",
          "discountable",
          "external_id",
          "deleted_at"
        ],
        "properties": {
          "categories": {
            "type": "array",
            "description": "The product's categories.",
            "items": {
              "type": "object"
            }
          },
          "type": {
            "type": "object"
          },
          "length": {
            "type": "number",
            "title": "length",
            "description": "The product's length."
          },
          "title": {
            "type": "string",
            "title": "title",
            "description": "The product's title."
          },
          "status": {
            "type": "string",
            "description": "The product's status.",
            "enum": [
              "draft",
              "proposed",
              "published",
              "rejected"
            ]
          },
          "options": {
            "type": "array",
            "description": "The product's options.",
            "items": {
              "$ref": "#/components/schemas/BaseProductOption"
            }
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The product's description."
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The product's ID."
          },
          "metadata": {
            "type": "object",
            "description": "The product's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The product's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The product's updated at."
          },
          "variants": {
            "type": "array",
            "description": "The product's variants.",
            "items": {
              "$ref": "#/components/schemas/BaseProductVariant"
            }
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The product's handle."
          },
          "subtitle": {
            "type": "string",
            "title": "subtitle",
            "description": "The product's subtitle."
          },
          "is_giftcard": {
            "type": "boolean",
            "title": "is_giftcard",
            "description": "The product's is giftcard."
          },
          "thumbnail": {
            "type": "string",
            "title": "thumbnail",
            "description": "The product's thumbnail."
          },
          "width": {
            "type": "number",
            "title": "width",
            "description": "The product's width."
          },
          "weight": {
            "type": "number",
            "title": "weight",
            "description": "The product's weight."
          },
          "height": {
            "type": "number",
            "title": "height",
            "description": "The product's height."
          },
          "origin_country": {
            "type": "string",
            "title": "origin_country",
            "description": "The product's origin country."
          },
          "hs_code": {
            "type": "string",
            "title": "hs_code",
            "description": "The product's hs code."
          },
          "mid_code": {
            "type": "string",
            "title": "mid_code",
            "description": "The product's mid code."
          },
          "material": {
            "type": "string",
            "title": "material",
            "description": "The product's material."
          },
          "collection": {
            "$ref": "#/components/schemas/BaseCollection"
          },
          "collection_id": {
            "type": "string",
            "title": "collection_id",
            "description": "The product's collection id."
          },
          "type_id": {
            "type": "string",
            "title": "type_id",
            "description": "The product's type id."
          },
          "tags": {
            "type": "array",
            "description": "The product's tags.",
            "items": {
              "$ref": "#/components/schemas/BaseProductTag"
            }
          },
          "images": {
            "type": "array",
            "description": "The product's images.",
            "items": {
              "$ref": "#/components/schemas/BaseProductImage"
            }
          },
          "discountable": {
            "type": "boolean",
            "title": "discountable",
            "description": "The product's discountable."
          },
          "external_id": {
            "type": "string",
            "title": "external_id",
            "description": "The product's external id."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The product's deleted at."
          }
        }
      },
      "StoreProductCategory": {
        "type": "object",
        "description": "The category's categories.",
        "x-schemaName": "StoreProductCategory",
        "required": [
          "id",
          "name",
          "description",
          "handle",
          "is_active",
          "is_internal",
          "rank",
          "parent_category_id",
          "parent_category",
          "category_children",
          "created_at",
          "updated_at",
          "deleted_at"
        ],
        "properties": {
          "products": {
            "type": "array",
            "description": "The category's products.",
            "items": {
              "$ref": "#/components/schemas/StoreProduct"
            }
          },
          "id": {
            "type": "string",
            "title": "id",
            "description": "The category's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The category's name."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The category's description."
          },
          "handle": {
            "type": "string",
            "title": "handle",
            "description": "The category's handle."
          },
          "is_active": {
            "type": "boolean",
            "title": "is_active",
            "description": "The category's is active."
          },
          "is_internal": {
            "type": "boolean",
            "title": "is_internal",
            "description": "The category's is internal."
          },
          "rank": {
            "type": "number",
            "title": "rank",
            "description": "The category's rank."
          },
          "parent_category_id": {
            "type": "string",
            "title": "parent_category_id",
            "description": "The category's parent category id."
          },
          "parent_category": {
            "$ref": "#/components/schemas/BaseProductCategory"
          },
          "category_children": {
            "type": "array",
            "description": "The category's category children.",
            "items": {
              "$ref": "#/components/schemas/BaseProductCategory"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The category's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The category's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The category's updated at."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "title": "deleted_at",
            "description": "The category's deleted at."
          }
        }
      },
      "StoreProductCategoryListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreProductCategoryListResponse",
        "required": [
          "limit",
          "offset",
          "count",
          "product_categories"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The product category's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The product category's offset."
          },
          "count": {
            "type": "number",
            "title": "count",
            "description": "The product category's count."
          },
          "product_categories": {
            "type": "array",
            "description": "The product category's product categories.",
            "items": {
              "$ref": "#/components/schemas/StoreProductCategory"
            }
          }
        }
      },
      "StoreProductCategoryResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreProductCategoryResponse",
        "required": [
          "product_category"
        ],
        "properties": {
          "product_category": {
            "$ref": "#/components/schemas/StoreProductCategory"
          }
        }
      },
      "StoreProductResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreProductResponse",
        "required": [
          "product"
        ],
        "properties": {
          "product": {
            "$ref": "#/components/schemas/StoreProduct"
          }
        }
      },
      "StoreProductVariantParams": {
        "type": "object",
        "description": "The product's variants.",
        "x-schemaName": "StoreProductVariantParams",
        "properties": {
          "q": {
            "type": "string",
            "title": "q",
            "description": "The variant's q."
          },
          "id": {
            "oneOf": [
              {
                "type": "string",
                "title": "id",
                "description": "The variant's ID."
              },
              {
                "type": "array",
                "description": "The variant's ID.",
                "items": {
                  "type": "string",
                  "title": "id",
                  "description": "The id's ID."
                }
              }
            ]
          },
          "sku": {
            "oneOf": [
              {
                "type": "string",
                "title": "sku",
                "description": "The variant's sku."
              },
              {
                "type": "array",
                "description": "The variant's sku.",
                "items": {
                  "type": "string",
                  "title": "sku",
                  "description": "The sku's details."
                }
              }
            ]
          },
          "product_id": {
            "oneOf": [
              {
                "type": "string",
                "title": "product_id",
                "description": "The variant's product id."
              },
              {
                "type": "array",
                "description": "The variant's product id.",
                "items": {
                  "type": "string",
                  "title": "product_id",
                  "description": "The product id's details."
                }
              }
            ]
          },
          "options": {
            "type": "object",
            "description": "The variant's options."
          },
          "limit": {
            "type": "number",
            "title": "limit",
            "description": "The variant's limit."
          },
          "offset": {
            "type": "number",
            "title": "offset",
            "description": "The variant's offset."
          },
          "order": {
            "type": "string",
            "title": "order",
            "description": "The variant's order."
          },
          "fields": {
            "type": "string",
            "title": "fields",
            "description": "The variant's fields."
          },
          "$and": {
            "type": "array",
            "description": "Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.",
            "items": {
              "type": "object"
            },
            "title": "$and"
          },
          "$or": {
            "type": "array",
            "description": "Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.",
            "items": {
              "type": "object"
            },
            "title": "$or"
          }
        }
      },
      "StoreRegion": {
        "type": "object",
        "description": "The region's details.",
        "x-schemaName": "StoreRegion",
        "required": [
          "id",
          "name",
          "currency_code"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The region's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The region's name."
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The region's currency code."
          },
          "automatic_taxes": {
            "type": "boolean",
            "title": "automatic_taxes",
            "description": "The region's automatic taxes."
          },
          "countries": {
            "type": "array",
            "description": "The region's countries.",
            "items": {
              "$ref": "#/components/schemas/BaseRegionCountry"
            }
          },
          "payment_providers": {
            "type": "array",
            "description": "The region's payment providers.",
            "items": {
              "$ref": "#/components/schemas/AdminPaymentProvider"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The region's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The region's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The region's updated at."
          }
        }
      },
      "StoreReturn": {
        "type": "object",
        "description": "The return's details.",
        "x-schemaName": "StoreReturn",
        "required": [
          "id",
          "order_id",
          "order_version",
          "display_id",
          "items",
          "received_at",
          "created_at",
          "canceled_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return's ID."
          },
          "order_id": {
            "type": "string",
            "title": "order_id",
            "description": "The return's order id."
          },
          "status": {
            "type": "string",
            "title": "status",
            "description": "The return's status."
          },
          "exchange_id": {
            "type": "string",
            "title": "exchange_id",
            "description": "The return's exchange id."
          },
          "location_id": {
            "type": "string",
            "title": "location_id",
            "description": "The return's location id."
          },
          "claim_id": {
            "type": "string",
            "title": "claim_id",
            "description": "The return's claim id."
          },
          "order_version": {
            "type": "number",
            "title": "order_version",
            "description": "The return's order version."
          },
          "display_id": {
            "type": "number",
            "title": "display_id",
            "description": "The return's display id."
          },
          "no_notification": {
            "type": "boolean",
            "title": "no_notification",
            "description": "The return's no notification."
          },
          "refund_amount": {
            "type": "number",
            "title": "refund_amount",
            "description": "The return's refund amount."
          },
          "items": {
            "type": "array",
            "description": "The return's items.",
            "items": {
              "$ref": "#/components/schemas/BaseReturnItem"
            }
          },
          "received_at": {
            "type": "string",
            "title": "received_at",
            "description": "The return's received at."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The return's created at."
          },
          "canceled_at": {
            "type": "string",
            "title": "canceled_at",
            "description": "The return's canceled at."
          }
        }
      },
      "StoreReturnReason": {
        "type": "object",
        "description": "The return reason's details.",
        "x-schemaName": "StoreReturnReason",
        "required": [
          "id",
          "value",
          "label",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return reason's ID."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The return reason's value."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The return reason's label."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return reason's description."
          },
          "metadata": {
            "type": "object",
            "description": "The return reason's metadata."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "created_at",
            "description": "The return reason's created at."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "updated_at",
            "description": "The return reason's updated at."
          }
        }
      },
      "StoreReturnReasonResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreReturnReasonResponse",
        "required": [
          "return_reason"
        ],
        "properties": {
          "return_reason": {
            "$ref": "#/components/schemas/StoreReturnReason"
          }
        }
      },
      "StoreReturnResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreReturnResponse",
        "required": [
          "return"
        ],
        "properties": {
          "return": {
            "$ref": "#/components/schemas/StoreReturn"
          }
        }
      },
      "StoreShippingOption": {
        "type": "object",
        "description": "The shipping option's shipping options.",
        "x-schemaName": "StoreShippingOption",
        "required": [
          "id",
          "name",
          "price_type",
          "service_zone_id",
          "provider_id",
          "provider",
          "shipping_option_type_id",
          "type",
          "shipping_profile_id",
          "amount",
          "is_tax_inclusive",
          "data",
          "metadata"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping option's ID."
          },
          "name": {
            "type": "string",
            "title": "name",
            "description": "The shipping option's name."
          },
          "price_type": {
            "type": "string",
            "description": "The shipping option's price type.",
            "enum": [
              "flat",
              "calculated"
            ]
          },
          "service_zone_id": {
            "type": "string",
            "title": "service_zone_id",
            "description": "The shipping option's service zone id."
          },
          "provider_id": {
            "type": "string",
            "title": "provider_id",
            "description": "The shipping option's provider id."
          },
          "provider": {
            "$ref": "#/components/schemas/BaseFulfillmentProvider"
          },
          "shipping_option_type_id": {
            "type": "string",
            "title": "shipping_option_type_id",
            "description": "The shipping option's shipping option type id."
          },
          "type": {
            "type": "object"
          },
          "shipping_profile_id": {
            "type": "string",
            "title": "shipping_profile_id",
            "description": "The shipping option's shipping profile id."
          },
          "amount": {
            "type": "number",
            "title": "amount",
            "description": "The shipping option's amount."
          },
          "is_tax_inclusive": {
            "type": "boolean",
            "title": "is_tax_inclusive",
            "description": "The shipping option's is tax inclusive."
          },
          "data": {
            "type": "object",
            "description": "The shipping option's data."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping option's metadata."
          }
        }
      },
      "StoreShippingOptionListResponse": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreShippingOptionListResponse",
        "required": [
          "shipping_options"
        ],
        "properties": {
          "shipping_options": {
            "type": "array",
            "description": "The shipping option's shipping options.",
            "items": {
              "$ref": "#/components/schemas/StoreShippingOption"
            }
          }
        }
      },
      "StoreUpdateCartLineItem": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreUpdateCartLineItem",
        "required": [
          "quantity"
        ],
        "properties": {
          "quantity": {
            "type": "number",
            "title": "quantity",
            "description": "The cart's quantity."
          },
          "metadata": {
            "type": "object",
            "description": "The cart's metadata."
          }
        }
      },
      "StoreUpdateCustomer": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "StoreUpdateCustomer",
        "properties": {
          "company_name": {
            "type": "string",
            "title": "company_name",
            "description": "The customer's company name."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The customer's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The customer's last name."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The customer's phone."
          }
        }
      },
      "UpdateAddress": {
        "type": "object",
        "description": "The cart's shipping address.",
        "x-schemaName": "UpdateAddress",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The shipping address's ID."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The shipping address's customer id."
          },
          "company": {
            "type": "string",
            "title": "company",
            "description": "The shipping address's company."
          },
          "first_name": {
            "type": "string",
            "title": "first_name",
            "description": "The shipping address's first name."
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "description": "The shipping address's last name."
          },
          "address_1": {
            "type": "string",
            "title": "address_1",
            "description": "The shipping address's address 1."
          },
          "address_2": {
            "type": "string",
            "title": "address_2",
            "description": "The shipping address's address 2."
          },
          "city": {
            "type": "string",
            "title": "city",
            "description": "The shipping address's city."
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "description": "The shipping address's country code."
          },
          "province": {
            "type": "string",
            "title": "province",
            "description": "The shipping address's province."
          },
          "postal_code": {
            "type": "string",
            "title": "postal_code",
            "description": "The shipping address's postal code."
          },
          "phone": {
            "type": "string",
            "title": "phone",
            "description": "The shipping address's phone."
          },
          "metadata": {
            "type": "object",
            "description": "The shipping address's metadata."
          }
        }
      },
      "UpdateCartData": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "UpdateCartData",
        "properties": {
          "region_id": {
            "type": "string",
            "title": "region_id",
            "description": "The cart's region id."
          },
          "customer_id": {
            "type": "string",
            "title": "customer_id",
            "description": "The cart's customer id."
          },
          "sales_channel_id": {
            "type": "string",
            "title": "sales_channel_id",
            "description": "The cart's sales channel id."
          },
          "email": {
            "type": "string",
            "title": "email",
            "description": "The cart's email.",
            "format": "email"
          },
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The cart's currency code."
          },
          "shipping_address_id": {
            "type": "string",
            "title": "shipping_address_id",
            "description": "The cart's shipping address id."
          },
          "billing_address_id": {
            "type": "string",
            "title": "billing_address_id",
            "description": "The cart's billing address id."
          },
          "billing_address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateAddress"
              },
              {
                "$ref": "#/components/schemas/UpdateAddress"
              }
            ]
          },
          "shipping_address": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateAddress"
              },
              {
                "$ref": "#/components/schemas/UpdateAddress"
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "The cart's metadata."
          }
        }
      },
      "UpdateOrderReturnReason": {
        "type": "object",
        "description": "SUMMARY",
        "x-schemaName": "UpdateOrderReturnReason",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The return reason's ID."
          },
          "label": {
            "type": "string",
            "title": "label",
            "description": "The return reason's label."
          },
          "value": {
            "type": "string",
            "title": "value",
            "description": "The return reason's value."
          },
          "description": {
            "type": "string",
            "title": "description",
            "description": "The return reason's description."
          },
          "metadata": {
            "type": "object",
            "description": "The return reason's metadata."
          }
        }
      },
      "WorkflowExecutionContext": {
        "type": "object",
        "description": "The workflow execution's context.",
        "x-schemaName": "WorkflowExecutionContext",
        "required": [
          "compensate",
          "errors"
        ],
        "properties": {
          "data": {
            "type": "object",
            "description": "The context's data."
          },
          "compensate": {
            "type": "object",
            "description": "The context's compensate."
          },
          "errors": {
            "type": "array",
            "description": "The context's errors.",
            "items": {
              "type": "object",
              "description": "The error's errors."
            }
          }
        }
      }
    },
    "responses": {
      "default_error": {
        "description": "Default Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "unknown_error",
              "message": "An unknown error occurred.",
              "type": "unknown_error"
            }
          }
        }
      },
      "invalid_state_error": {
        "description": "Invalid State Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "unknown_error",
              "message": "The request conflicted with another request. You may retry the request with the provided Idempotency-Key.",
              "type": "QueryRunnerAlreadyReleasedError"
            }
          }
        }
      },
      "invalid_request_error": {
        "description": "Invalid Request Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "invalid_request_error",
              "message": "Discount with code TEST already exists.",
              "type": "duplicate_error"
            }
          }
        }
      },
      "not_found_error": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Entity with id 1 was not found",
              "type": "not_found"
            }
          }
        }
      },
      "400_error": {
        "description": "Client Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "not_allowed": {
                "$ref": "#/components/examples/not_allowed_error"
              },
              "invalid_data": {
                "$ref": "#/components/examples/invalid_data_error"
              }
            }
          }
        }
      },
      "500_error": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "database": {
                "$ref": "#/components/examples/database_error"
              },
              "unexpected_state": {
                "$ref": "#/components/examples/unexpected_state_error"
              },
              "invalid_argument": {
                "$ref": "#/components/examples/invalid_argument_error"
              },
              "default_error": {
                "$ref": "#/components/examples/default_error"
              }
            }
          }
        }
      },
      "unauthorized": {
        "description": "User is not authorized. Must log in first",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "default": "Unauthorized",
              "example": "Unauthorized"
            }
          }
        }
      },
      "incorrect_credentials": {
        "description": "User does not exist or incorrect credentials",
        "content": {
          "text/plain": {
            "schema": {
              "type": "string",
              "default": "Unauthorized",
              "example": "Unauthorized"
            }
          }
        }
      }
    },
    "examples": {
      "not_allowed_error": {
        "summary": "Not Allowed Error",
        "value": {
          "message": "Discount must be set to dynamic",
          "type": "not_allowed"
        }
      },
      "invalid_data_error": {
        "summary": "Invalid Data Error",
        "value": {
          "message": "first_name must be a string",
          "type": "invalid_data"
        }
      },
      "multiple_errors": {
        "summary": "Multiple Errors",
        "value": {
          "message": "Provided request body contains errors. Please check the data and retry the request",
          "errors": [
            {
              "message": "first_name must be a string",
              "type": "invalid_data"
            },
            {
              "message": "Discount must be set to dynamic",
              "type": "not_allowed"
            }
          ]
        }
      },
      "database_error": {
        "summary": "Database Error",
        "value": {
          "code": "api_error",
          "message": "An error occured while hashing password",
          "type": "database_error"
        }
      },
      "unexpected_state_error": {
        "summary": "Unexpected State Error",
        "value": {
          "message": "cart.total must be defined",
          "type": "unexpected_state"
        }
      },
      "invalid_argument_error": {
        "summary": "Invalid Argument Error",
        "value": {
          "message": "cart.total must be defined",
          "type": "unexpected_state"
        }
      },
      "default_error": {
        "summary": "Default Error",
        "value": {
          "code": "unknown_error",
          "message": "An unknown error occurred.",
          "type": "unknown_error"
        }
      }
    },
    "securitySchemes": {
      "jwt_token": {
        "type": "http",
        "x-displayName": "JWT Token",
        "scheme": "bearer"
      },
      "cookie_auth": {
        "type": "apiKey",
        "x-displayName": "Cookie Session ID",
        "in": "cookie",
        "name": "connect.sid"
      }
    }
  }
}
